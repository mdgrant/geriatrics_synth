---
title: "KQ 3 Regional vs. GeneralAnesthesia"
editor: source
toc-title: "Regional vs. GeneralAnesthesia"
toc-location: "left"
tbl-cap-location: "top"
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq3.bib"
csl: jama.csl
link-citations: no
nocite: '@*'
---

## Key Question

Among older patients undergoing surgery and anesthesia, does regional anesthesia as the primary anesthetic technique improve postoperative outcomes compared with general anesthesia?

::: {.callout-note collapse="true" appearance="default" icon="true"}
## DRAFT results last updated `r lubridate::now()`

2023-04-27 added delirium results

:::

```{r read_data}
#| include: false
source("code/load_data.R")
settings.meta(CIbracket = "(")

kq3_refid <- kq3_refid[kq3_refid != 813] # retrospective cohort 

study_char_dat <- data_kq(study_char_dat, kq3_refid)

## VARIABLE: kq3_anesth_neur, kq3_anesth_reg, kq3_anesth_gen, kq3_anesth_neur_type, kq3_anesth_gen_type  — anesthetic and type, no specifics recorded for regional
study_arm_dat <- data_kq(study_arm_dat, kq3_refid) |>
  # delete anesthetic variables not relevant (avoid potential confusion)
  select(-c(inhalation:anes_ns)) |>
  mutate(arm = arm_kq3_reg_gen) |>
  relocate(arm, .before = arm_kq3_reg_gen) |>
  # add general, neuraxial, regional
  mutate(
    kq3_anesth_neur = ifelse(if_any(c(kq3_reg_spinal, kq3_reg_epidural, kq3_reg_cse), ~ !is.na(.x)), "Neuraxial", NA),
    kq3_anesth_reg = ifelse(!is.na(kq3_reg_block), "Regional", NA),
    kq3_anesth_gen = ifelse(!is.na(kq3_gen_type), "General", NA),
    kq3_anesth_neur_type =
      case_when(
        !is.na(kq3_reg_spinal) ~ "Spinal",
        !is.na(kq3_reg_epidural) ~ "Epidural",
        !is.na(kq3_reg_cse) ~ "CSE"
      ),
    kq3_anesth_gen_type = kq3_gen_type,
    arm = ifelse(!is.na(kq3_reg_block) & arm != "general", "block", arm),
    arm = factor(arm, levels = c("general", "block", "regional"), labels = c("Gen", "Block", "Neur"))
  ) |>
  relocate(kq3_anesth_neur:kq3_anesth_gen_type, .before = kq3_gen_type)

    
contin_dat <- data_kq(contin_dat, kq3_refid) |>
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id)

## VARIABLE: delirium_inc_prop <lgl> to indicate incidence proportion reported (prior to replacing missings with max daily occurrence)
dichot_dat <- data_kq(dichot_dat, kq3_refid) |>
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id) |>
  # if incidence proportion for delirium not reported use the max of days
  mutate(
    delirium_inc_prop = !is.na(delitotal_n),
    delirium_day_max = pmax(delirium_n1, delirium_n2, delirium_n3, delilast_n, na.rm = TRUE),
    delitotal_n = ifelse(is.na(delitotal_n), delirium_day_max, delitotal_n),
  ) |>
  relocate(delirium_day_max, .after = delitotal_n)

likert_dat <- data_kq(likert_dat, kq3_refid) |>
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id)

```

```{r delirium_refids_check}
#| eval = FALSE
# any of delirium_dichot_refid, delirium_contin_refid, delirium_likert_refid 
kq3_refid[kq3_refid %in% delirium_refid]
kq3_refid[kq3_refid %in% cogfunc_refid]
kq3_refid[!kq3_refid %in% c(delirium_refid, cogfunc_refid)]
```

## Outcome Importance Rankings

<font size = 4> `r table_ref()` Rankings of the 5 most important outcomes (11 respondents). </font>

```{r outcome_priority}
#| include: true
#| eval: true
outcome_dat <- rankings("KQ3")
outcome_tab(outcome_dat, 11)
```

### Reporting Frequency

<font size = 4> `r table_ref()` Dichotomous or count outcomes. </font>

```{r dichot_outcome_freq}
# CODE: reporting frequency tabulation
dichot_freq_fun(dichot_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

<font size = 4> `r table_ref()` Continuous outcomes. </font>

```{r cont_outcome_freq}
contin_freq_fun(contin_dat)
```

<font size = 4> `r table_ref()` Likert or ordinal outcomes. </font>

```{r likert_outcome_freq}
likert_freq_fun(likert_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

## **Included Studies**

<font size = 4> `r table_ref()` Number of studies by design. </font>

```{r studies_design}
# CODE: study design table — design and number; no duplicate counting
study_char_dat |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(
    style = list(
      cell_fill(color = "#E4F3FE"),
      cell_text(weight = "bold"),
      cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))
    ),
    locations = cells_body(
      rows = design_f_lab == "Total"
    )
  ) |> 
  tab_style(
    style = list(
      cell_text(align = "left")),
      locations = cells_body(
        columns = design_f_lab
      )
    ) |> 
  tab_footnote("Studies with multiple publications counted only once (applied to 1 trial with 2 publications).")
```

### Design, centers, country, and surgery

<font size = 4> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </font>

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |>
  select(refid, starts_with("design"), study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi) |>
  left_join(surgs |> select(refid, surgs), by = "refid") |>
  mutate(
    surgs = ifelse(str_count(surgs, "\\|") > 3, "Various", surgs),
    # edit levels by kq
    surgs = factor(surgs, levels = c("Ortho", "Urol", "GI/Abdominal", "Neuro", "Neuro|Vasc", "Cardiac", "Gyn", "Gyn|Ortho|Urol|Vasc", "Headneck", "Ophtho", "Other", "Spine", "Various", "Vasc"))
  ) |>
  arrange(design_f, surgs, study_l) |>
  select(refid, design_f, study_l, centers, n_enroll, country, surgs, non_vh_hdi)

included_dat |>
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_hide(c(non_vh_hdi, design_f)) |>
    fmt_markdown(columns = c(study_l)) |> 
  cols_width(
    refid ~ px(60),
    study_l ~ px(165),
    centers ~ px(60),
    n_enroll ~ px(60),
    country ~ px(100),
    surgs ~ px(150)
  ) |> 
  # opt_horizontal_padding(scale = 2) |>
  sub_missing(columns = everything(), missing_text = " — ") |>
  gt_theme_mg() |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c("refid"))) |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(surgs))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(surgs))) |>
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote(footnote = md("Various indicates more than 4 different types of surgery."), locations = cells_column_labels(columns = surgs)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_column_labels(columns = country)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))) |>
  # tab_footnote(footnote = "Studies examining drugs not directly relevant to recommendations but potentially relevant to the evidence space (eg, a connected network) were included.",  locations = cells_row_groups(groups = )) |> 
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular.")

```

#### Country Summary

<font size = 4> `r table_ref()` Summary of studies by country where conducted. </font>

```{r country}
study_char_dat |>
  mutate(linked_references = ifelse(is.na(linked_references), refid, linked_references)) |> 
  slice(1, .by = linked_references) |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
  gt_theme_mg()

```

## **Interventions & Comparators**

### Regional vs. General

<font size = 4> `r table_ref()` Selected characteristics of randomized trials comparing general and regional anesthesia. </font>

```{r arm_data}
ortho_proc <- study_char_dat |>
  select(refid, study, surg_ortho_tka, surg_ortho_tha, surg_ortho_hipfx, surg_ortho_other, surg_list) |>
  mutate(across(contains("ortho"), ~ str_replace_all(.x, "surg_ortho_", ""))) |>
  unite(ortho, surg_ortho_tka:surg_ortho_other, sep = "|", remove = FALSE, na.rm = TRUE) |>
  mutate(
    ortho = str_replace(ortho, "tka", "TKA"),
    ortho = str_replace(ortho, "tha", "THA"),
    ortho = str_replace(ortho, "hipfx", "HipFx"),
    ortho = str_replace(ortho, "other", "Other"),
    surg_list = firstup(surg_list),
    surg_list = str_replace(surg_list, "\\.$", "")
  )

ortho_hipfx_refid <- ortho_proc |> filter(!is.na(surg_ortho_hipfx)) |> pull(refid)
```

```{r reg_gen_tab}
reg_gen_tab <- study_arm_dat |>
  select(refid, refid_c, arm_id, study, year, arm_n, arm, asa_ps_incl, kq3_reg_spinal, kq3_reg_epidural, kq3_reg_cse, kq3_reg_block, kq3_reg_ns, kq3_reg_sedation, kq3_gen_type, kq3_gen_desflurane:kq3_gen_inhaleother) |>
  left_join(study_char_dat |> select(refid, study_l, surg_ortho_tka, surg_ortho_tha, surg_ortho_hipfx, surg_ortho_other, surg_list, surgs), by = "refid") |>
  left_join(ortho_proc |> select(refid, ortho), by = c("refid")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  mutate(
    # volatile_spec = if_any(kq3_gen_desflurane:kq3_gen_inhaleother, ~ !is.na(.x), "\U2713", NA), # verifies kq3_gen_type
    volatile = ifelse(kq3_gen_type %in% c("inhalation", "tiva_inhal"), "\U25CF", NA),
    tiva = ifelse(kq3_gen_type  %in% c("tiva", "tiva_inhal"), "\U25CF", NA),
    # tiva_inhal = ifelse(kq3_gen_type == "tiva_inhal", "\U2713", NA),
    # tiva_inhal = ifelse(kq3_gen_type == "tiva_inhal", "\U2713", NA),
    kq3_reg_block = notna_to_x(kq3_reg_block, "\U2714"),
    notrep = ifelse(kq3_gen_type == "notrep", "\U25CF", NA),
    across(c(kq3_reg_spinal, kq3_reg_epidural, kq3_reg_cse, kq3_reg_ns), ~ ifelse(!is.na(.x), "\U2716", NA)),
    surgs = paste(surgs, ortho),
    surgs = str_replace(surgs, " Other", ""),
    surgs = str_replace(surgs, "Ortho ", "Ortho — "),
    surgs = str_replace(surgs, "\\s{1}$", "")
  ) |>
  rename_with(~ str_replace(.x, "kq3_", "")) |>
  select(refid, arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, pre_mmse, volatile, tiva, notrep, reg_spinal, reg_epidural, reg_cse, reg_ns, reg_block, surgs, year, ortho) |>
  arrange(surgs, year, study, arm)

```

```{r reg_gen_gt}
reg_gen_tab |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l), .by = study) |>
  mutate(arm_n = ifelse(refid == 221, "NR", arm_n)) |> 
  group_by(surgs) |>
  gt(id = "one") |>
  row_group_order(groups = c("Ortho — HipFx", "Ortho — HipFx|Other", "Ortho — TKA|THA|HipFx|Other", "Ortho — TKA", "Ortho — THA", "Ortho", "Urol", "GI/Abdominal", "Neuro", "Neuro|Vasc", "Cardiac", "Gyn", "Gyn|Ortho|Urol|Vasc", "Headneck", "Ophtho", "Other", "Various TKA|THA|Other", "Vasc")) |>
  # "Cardiac", "GI/Abdominal", "Gyn", "Gyn|Ortho|Urol|Vasc", "Headneck", "Neuro", "Neuro|Vasc", "Ophtho", "Ortho", "Ortho — HipFx", "Ortho — HipFx|Other", "Ortho —  THA", "Ortho — TKA", "Ortho — TKA|THA|HipFx|Other", "Other", "Urol", "Various TKA|THA|Other", and "Vasc".
  cols_hide(c(refid, arm_id, study, year, ortho)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Comparator",
    asa_ps_incl      = "PS",
    age_table        = "    Age",
    pre_mmse         = "MMSE",
    volatile         = "Vol",
    tiva             = "TIVA",
    notrep           = "NR",
    reg_spinal       = "Spinal",
    reg_epidural     = "Epid",
    reg_cse          = "CSE",
    reg_ns           = "NR",
    reg_block        = "Block"
  ) |>
  tab_spanner(label = "General", columns = c(volatile:notrep), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl), level = 1) |>
  tab_spanner(label = "Neuraxial", columns = c(reg_spinal:reg_ns), level = 1) |>
  tab_spanner(label = "Regional", columns = c(reg_spinal:reg_block), level = 2) |>
  fmt_markdown(columns = c(study_l, age_table, pre_mmse)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    arm ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    pre_mmse ~ px(100),
    volatile ~ px(40),
    tiva ~ px(40),
    notrep ~ px(40),
    reg_spinal ~ px(45),
    reg_epidural ~ px(40),
    reg_cse ~ px(40),
    reg_ns ~ px(40),
    reg_block ~ px(45)
  ) |>
  # tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(asa_ps_incl))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(volatile:reg_cse))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  # tab_style(style = list(cell_text(color = color_1)), locations = cells_body(columns = c(arm_n:reg_cse), rows = str_detect(arm, "Neur"))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:reg_block), rows = str_detect(arm, "Neur"))) |>
  tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(arm_n:reg_block), rows = str_detect(arm, "Block"))) |>
  tab_footnote(md("Gen: general; Neur: neuraxial; PS: physical stutus; Vol: volatile; TIVA: total intravenous anesthesia; NR: not reported; Epid: epidural; CSE: combined spinal and regional; Ortho: orthopedic; Urol: urology; GI: gastrointestinal; Neuro: neurologic; Gyn: gynecologic; Vasc: vascular; Ophtho: opthalomogic; Fx: fracture; TKA: total knee arthroplasty; THA: total hip arthroplasty.")) |>
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote("Not included in pooled results owing to size.", locations = cells_body(columns = study_l, rows = str_detect(study_l, "Neuman 2016"))) |> 
  tab_footnote("Diazepam.", locations = cells_body(columns = arm, rows = study == "Salonia 2006" & arm_id == 2)) |> 
  tab_footnote("Propofol.", locations = cells_body(columns = arm, rows = study == "Salonia 2006" & arm_id == 3)) |> 
  tab_footnote("Midazolam.", locations = cells_body(columns = arm, rows = study == "Salonia 2006" & arm_id == 4)) |> 
  tab_footnote("Ropivacaine.", locations = cells_body(columns = arm, rows = study == "Sellbrant 2021" & arm_id == 2)) |> 
  tab_footnote("Mepivacaine.", locations = cells_body(columns = arm, rows = study == "Sellbrant 2021" & arm_id == 3)) 
  # gtsave(filename = "/Users/mgrant/Desktop/table.html", inline_css = TRUE)

```

## **Delirium Incidence**

### Regional vs. General

```{r delirium_meta_data}
#| eval: true
# NOTE: compared and reconciled reported and calculated % # mutate(calc_per = delitotal_n / arm_n * 100, per_diff = calc_per - delitotal_perc) |> filter(per_diff > 0.5)
delirium_meta_dat <- dichot_dat |>
  mutate(
    arm_n = ifelse(!is.na(deli_update_arm_n), deli_update_arm_n, arm_n),
    # arm = fct_collapse(arm, "Neur/Block" = c("Block", "Neur")), 
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
  ) |> 
  filter(!is.na(delitotal_n)) |> # 
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  rename(surg_f = surgs_single_f) |> 
  select(refid, study, arm_id, arm, year, design_f_lab, country, surg_f, delitotal_n, arm_n, delirium_inc_prop, delitotal_time:delitotal_95high, deli_cam:deli_scale_otherspec) 

# NOTE: collapse arms delirium meta;Bielka 2021 arm 1 psoas block, Shin 2020 tiva and volatile
delirium_meta_dat <- delirium_meta_dat |>
  mutate(
    delitotal_n = case_when(
      study == "Shin 2020" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), delitotal_n),
      study == "Bielka 2021" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Bielka 2021", c(1, 3), delitotal_n),
      .default = delitotal_n
    ),
    arm_n = case_when(
      study == "Shin 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), arm_n),
      study == "Bielka 2021" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Bielka 2021", c(1, 3), arm_n),
      .default = arm_n
    )
  ) |>
  filter(!(study %in% c("Shin 2020") & arm_id %in% c(2))) |>
  filter(!(study %in% c("Bielka 2021") & arm_id %in% c(3))) |> 
  mutate(arm = ifelse(study == "Bielka 2021" & arm_id == 2, "Neur/Block", as.character(arm)),
         arm = factor(arm, levels = c("Gen", "Neur", "Neur/Block", "Block"))
  )
  

# delirium_meta_dat |> select(refid) |> distinct() # 2023-04-24 n = 14
```

```{r reg_gen_delirium_tab}
# referent values for calculating rr and ci; rr_ci
delirium_rr_ref <- delirium_meta_dat |>
  select(refid, refid, arm_id, delitotal_n, arm_n) |>
  filter(!is.na(delitotal_n)) |>
  arrange(refid, arm_id) |>
  rename(ref_deli_n = delitotal_n, ref_arm_n = arm_n) |>
  # group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() > 1, NA, ref_deli_n),
    .by = refid
  ) |>
  fill(ref_arm_n, ref_deli_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() == 1, NA, ref_deli_n),
    .by = refid
  ) 

reg_gen_delirium_tab <- delirium_meta_dat |>
  # select(refid, refid, year, arm_id, design_f_lab, study, study_l, arm_n, delitotal_time:delitotal_95high, deli_cam:deli_scale_otherspec) |>
  mutate(
    across(starts_with("deli_"), ~ str_remove_all(.x, "scale_")),
    across(starts_with("deli_"), ~ str_remove_all(.x, "deli_")),
    across(deli_cam:deli_scale_icdsc, ~ toupper(.x)),
  ) |>
  rename_with(~ gsub("scale_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("deli_", "", .x, fixed = TRUE)) |>
  left_join(delirium_rr_ref, by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, study_l), by = c("refid")) |>
  mutate(
    # other = ifelse(str_detect(otherspec, "AMT"), "AMT", other),
    # other = ifelse(str_detect(otherspec, "Psychiatrist consultation"), "Psych", other),
    # other = ifelse(str_detect(otherspec, "Chinese"), "Note", other),
    # other = ifelse(other == "other", NA_character_, other),
    calc_percent = delitotal_n / arm_n * 100,
    n_percent = n_per_fun(delitotal_n, arm_n, 1),
    rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(delitotal_n, arm_n, ref_deli_n, ref_arm_n), "—")
  ) |>
  relocate(calc_percent, .after = delitotal_perc) |>
  unite(scale_delirium, cam:other, remove = TRUE, sep = "/", na.rm = TRUE) |>
  mutate(
    scale_delirium = ifelse(scale_delirium == "unspec", "NR", scale_delirium),
    scale_delirium = ifelse(scale_delirium == "DELIRIUM INDEX (DI)", "DI", scale_delirium)
  ) |>
  select(year, refid, refid, design_f_lab, study, study_l, arm_id, arm_n, arm, scale_delirium, delitotal_time, n_percent, calc_percent, rr_ci, surg_f) |>
  # arrange(year, study, refid, desc(arm)) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  relocate(pre_mmse, .before = scale_delirium) |>
  relocate(age_table, .after = arm_n)

```

<font size = 4> `r table_ref()` Delirium incidence and ascertainment during hospitalization in trials comparing general and regional anesthesia. </font>

```{r reg_gen_delirium_gt}
reg_gen_delirium_tab |>
    arrange(year, study, arm) |>
    mutate(
      delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
      delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time),
      study_l = ifelse(row_number() > 1, "", study_l),
      delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
      scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
      bar = case_when(
        str_detect(arm, "Neur|Block") ~ bar_prop(calc_percent, color_2),
        .default = bar_prop(calc_percent, "#969696")),
      .by = study
    ) |>
    group_by(surg_f) |>
    gt(id = "one") |>
    row_group_order(groups = c("Ortho", "GI/Abd", "Headneck", "Spine", "Various")) |>
    cols_hide(c(year, refid, arm_id, study, design_f_lab, age_table, calc_percent)) |>
    cols_label(
      study_l = "Study",
      arm_n = " N",
      # age_table = "  Age",
      arm = md("Arm"),
      pre_mmse = md("  MMSE<br/>(preop)"),
      scale_delirium = "Scale",
      delitotal_time = "Days",
      n_percent = "N (%)",
      bar = "0 – 100%",
      rr_ci = "RR (95% CI)"
    ) |>
    fmt_markdown(columns = c(study_l, pre_mmse, bar)) |>
    tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
    tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(study, arm, scale_delirium))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, delitotal_time, n_percent, rr_ci))) |>
    tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, scale_delirium, bar))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, n_percent, rr_ci))) |>
    tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:rr_ci), rows = str_detect(arm, "Neur|Block"))) |>
    sub_missing(columns = delitotal_time, missing_text = "Note") |>
    gt_theme_mg() |>
    cols_width(
      study_l ~ px(165),
      arm_n ~ px(45),
      # age_table ~ px(100),
      arm ~ px(80),
      pre_mmse ~ px(95),
      scale_delirium ~ px(105),
      delitotal_time ~ px(50),
      n_percent ~ px(90),
      bar ~ px(100),
      rr_ci ~ px(140)
    ) |> 
  tab_footnote("RR: risk ratio; MMSE: Mini-Mental State Examination; CAM: Confusion Assessment Method; DI: Delirium Index; DRS: Delirium Rating Scale; DSM: Diagnostic and Statistical Manual of Mental Disorders; NR: not reported.") |>
    tab_footnote("Gen: general anesthesia; Neur: neuraxial; RR: risk ratio; MMSE: Mini-Mental State Examination; DRS: Delirium Rating Scale; DSM: Diagnostic and Statistical Manual of Mental Disorders; CAM: Confusion Assessment Method; DI: Delirium Index.") |>
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates over patient hospital stay.", locations = cells_column_labels(columns = delitotal_time)) |>
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
  tab_footnote("Not included in pooled results owing to size.", locations = cells_body(columns = study_l, rows = str_detect(study_l, "Neuman 2016"))) 
```

### *Pooled*

```{r delirium_meta}
delirium_meta_dat <- delirium_meta_dat |> 
  arrange(year, study, arm) |> 
  filter(study != "Neuman 2016")

pairwise_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = delirium_meta_dat,
  sm = "RR") |> 
  select(studlab:surg_f) 

del_meta_dat <- pairwise_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  select(study, year, event2, n2, event1, n1, D1:Overall, surg_f) |>
  mutate(
    sample_size = n1 + n2,
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  )

gen_reg_delirium_meta <- metabin(event2, n2, event1, n1,
  data = del_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE,
  subgroup = surg_f
)

gen_reg_delirium_meta_nosub <- update(gen_reg_delirium_meta, subgroup = NULL)

# small study effects; here to have result of Harbord test
temp_meta <- update(gen_reg_delirium_meta, subgroup = NULL, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# cumulative meta
gen_reg_delirium_cummeta <- metacum(gen_reg_delirium_meta, pooled = "random")
```

<font size = 4> `r figure_ref()` General versus regional anesthesia (randomized clinical trials). </font>

```{r delirium_meta_forest, fig.width = 14, fig.height = 5.5, fig.align = "left", warning = FALSE}
forest(gen_reg_delirium_meta_nosub,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Regional",
  label.c = "General",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  # sortvar = year,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 10),
  xlab = "Favors: Regional                          General",
  addrows.below.overall = 4
)
```
<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .  `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> `r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, delirium_meta_dat$refid), "; a secondary outcome in ", prim_sec_out_fun(sec_delirium, delirium_meta_dat$refid), ".")`</foot_mg>

<br/>

<font size = 4> `r figure_ref()` General versus regional anesthesia cumulative meta-analysis (randomized clinical trials). </font>

```{r delirium_meta_forest_cum, fig.width = 14, fig.height = 4.5, fig.align = "left", warning = FALSE}
forest(gen_reg_delirium_cummeta,
  # common = TRUE,
  label.e = "Regional",
  label.c = "General",
  # rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)  ", "P  ", "\U03C4 ²", "τ", "I²"),
  # just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 2,
  digits.tau = 2,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  colgap.right = "5mm",
  colgap.forest.left = "5mm",
  colgap.forest.right = "5mm",
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.2, 4),
  xlab = "Favors: Regional                          General",
  addrows.below.overall = 4
)
```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` General versus regional anesthesia pooled with subgroups (randomized clinical trials). </font>

```{r delirium_meta_forest_sub, fig.width = 14, fig.height = 8.7, fig.align = "left", warning = FALSE}
forest(gen_reg_delirium_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Regional",
  label.c = "General",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  # sortvar = year,
  prediction = TRUE,
  subgroup = TRUE,
  prediction.subgroup = FALSE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  # xlim = c(0.1, 3),
  xlab = "Favors: Regional                          General",
  addrows.below.overall = 4
)  
```

<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .</foot_mg><br/>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` General versus regional anesthesia small study effects. </font>

```{r dex_plac_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
temp_limit_meta <- limitmeta(temp_meta)

par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

# text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta,  pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

```

<foot_mg> Estimates (odds ratio and 95% CI) from random effects models. Limit meta-anlaysis shown in light grey --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</font>

:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Summary risk of bias from randomized clinical trials of dexmedetomidine compared with placebo or no intervention. </font>

```{r rob2_summary_delirim, fig.height = 3, out.width = "60%"}
rob_summary_fun(delirium_meta_dat$refid)
```
:::

## **Delayed Neurocognitive Recovery**

```{r dncr_ncd_dat}
#| eval: true
# CODE: neurocog meta data munge; here to produce figure
dncr_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x <= 30)) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    neurocog_n1 = ifelse(neurocog_time1 > 30, NA, neurocog_n1),
    neurocog_n2 = ifelse(neurocog_time2 > 30, NA, neurocog_n2),
    neurocog_n3 = ifelse(neurocog_time3 > 30, NA, neurocog_n3),
    neurocog_last_n = ifelse(neurocog_last_time > 30, NA, neurocog_last_n),
    neurocog_total_n = ifelse(neurocog_total_time > 30, NA, neurocog_total_n),
    neurocog_time1 = ifelse(neurocog_time1 > 30, NA, neurocog_time1),
    neurocog_time2 = ifelse(neurocog_time2 > 30, NA, neurocog_time2),
    neurocog_time3 = ifelse(neurocog_time3 > 30, NA, neurocog_time3),
    neurocog_last_time = ifelse(neurocog_last_time > 30, NA, neurocog_last_time),
    neurocog_total_time = ifelse(neurocog_total_time > 30, NA, neurocog_total_time),
    dncr_time = pmax(neurocog_time1, neurocog_time2, neurocog_time3, neurocog_last_time, neurocog_total_time, na.rm = TRUE),
    neurocog_total_n = case_when(
      neurocog_time1 == dncr_time ~ neurocog_n1,
      neurocog_time2 == dncr_time ~ neurocog_n2,
      neurocog_time3 == dncr_time ~ neurocog_n3,
      neurocog_last_time == dncr_time ~ neurocog_last_n,
      neurocog_total_time == dncr_time ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n/arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |> 
  rename(surg_f = surgs_single_f) |>
  arrange(refid, arm_id) |>
  mutate(
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(neurocog_prop * 100, "#969696"),
      str_detect(arm, "Neur|Block") ~ bar_prop(neurocog_prop * 100, color_2),
      .default = bar_prop(neurocog_prop * 100, color_1)),
    year = as.numeric(str_extract(study, "\\d{4}")),
    arm_reg = fct_collapse(arm, "Reg" = c("Neur", "Block")),
    across(c(design_f_lab, surg_f), ~ fct_drop(.x)),
    scale_mmse = ifelse(!is.na(neurocog_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |>
  select(refid, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, arm, arm_reg, pre_mmse, dncr_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf)

# add referents for rr calculation
dncr_rr_ref <- dncr_dat |>
  select(refid, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  ) 

#| DATA: neurocog_all arms_meta_dat for subsequent pooling, arms not collapsed
neurocog_meta_dat <- dncr_dat |>
  select(refid, study, design_f_lab, year, arm_id, arm_reg, neurocog_total_n, arm_n) 

dncr_dat <- dncr_dat |>
  left_join(dncr_rr_ref, by = c("refid", "arm_id")) |>
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |>
  select(refid, year, study, study_l, arm_id, arm_n, arm_reg, pre_mmse, scale_mmse:scale_other_tf, dncr_time, neurocog_nper, bar, rr_ci)

rm(dncr_rr_ref)
```

### Regional vs. General

<font size = 4> `r table_ref()` Delayed neurocognitive recovery incidence and ascertainment in trials of dexmedetomidine. </font>

```{r dncr_dex_gt}
#| eval: true
dncr_dat |>
  arrange(year, study) |>
  mutate(study_l = ifelse(row_number() > 1, NA, study_l),
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         dncr_time = ifelse(row_number() > 1, NA, dncr_time),
         .by = study) |>
  gt(id = "one") |>
  cols_hide(c(refid, year, arm_id, study, scale_other)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm_reg          = "Arm",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA",
    scale_other_tf   = "Other",
    dncr_time        = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  gt_theme_mg() |>
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |>
  fmt_number(dncr_time, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Delayed Neurocognitive Recovery", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm_reg           ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    dncr_time        ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm_reg))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, dncr_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm_reg, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), dncr_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm_reg, "Reg"))) |>
  # tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm_reg, "Gen"))) |>
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Gen: general anesthesia; Reg: regional anesthesia.") |>
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(dncr_time))) |>
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Not reported.", locations = cells_body(columns = c(scale_other_tf), rows = is.na(scale_other_tf) & str_detect(study_l, "Wang 2016"))) 
```

<br/>

### *Pooled*

<font size = 4> `r figure_ref()` General versus regional anesthesia (randomized clinical trials, delayed neurocognitive recovery). </font>


```{r dncr_meta,  fig.width = 14, fig.height = 4, fig.align = "left", warning = FALSE}
trts <- neurocog_meta_dat$arm_reg

pairs_dat <- pairwise(
  treat = arm_reg,
  event = neurocog_total_n,
  n = arm_n,
  studlab = study,
  data = neurocog_meta_dat,
  sm = "RR"
)

dncr_meta_dat <- pairs_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall) |>
  mutate(
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  ) |>
  arrange(year, study)

gen_reg_dncr_meta <- metabin(event2, n2, event1, n1,
  data = dncr_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE
)

forest(gen_reg_dncr_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Regional     ",
  label.c = "General  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)   ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Regional               General",
  addrows.below.overall = 4
)

```
<foot_mg> Too few studies to examine small study effects. </foot_mg> 


```{r}
ncd_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x > 30)) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    ncd_time = case_when(
      neurocog_time1 > 30 ~ neurocog_time1,
      neurocog_time2 > 30 ~ neurocog_time2,
      neurocog_time3 > 30 ~ neurocog_time3,
      neurocog_last_time > 30 ~ neurocog_last_time,
      neurocog_total_n > 30 ~ neurocog_total_time,
      .default = NA
    ),
    neurocog_total_n = case_when(
      neurocog_time1 > 30 ~ neurocog_n1,
      neurocog_time2 > 30 ~ neurocog_n2,
      neurocog_time3 > 30 ~ neurocog_n3,
      neurocog_last_time > 30 ~ neurocog_last_n,
      neurocog_total_time > 30 ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n / arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  rename(surg_f = surgs_single_f) |>
  arrange(refid, arm_id) |>
  mutate(
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(neurocog_prop * 100, "#969696"),
      str_detect(arm, "Neur|Block") ~ bar_prop(neurocog_prop * 100, color_2),
      .default = bar_prop(neurocog_prop * 100, color_1)),
    year = as.numeric(str_extract(study, "\\d{4}")),
    arm_reg = fct_collapse(arm, "Reg" = c("Neur", "Block")),
    scale_mmse = ifelse(!is.na(neurocog_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |>
  select(refid, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, arm_reg, pre_mmse, ncd_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf)

ncd_rr_ref <- ncd_dat |>
  select(refid, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  )

ncd_dat <- ncd_dat |>
  left_join(ncd_rr_ref, by = c("refid", "arm_id")) |>
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |>
  select(refid, year, design_f_lab, study, study_l, arm_id, arm_n, arm_reg, pre_mmse, scale_mmse:scale_other_tf, ncd_time, neurocog_nper, bar, rr_ci)
```

<br/>

## **Neurocognitive Disorders**

### Regional vs. General

```{r ncd_gt}
#| eval: true
ncd_dat |>
  arrange(year, study) |>
  mutate(study_l = ifelse(row_number() > 1, NA, study_l),
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         ncd_time = ifelse(row_number() > 1, NA, ncd_time),
         .by = study) |>
  group_by(design_f_lab) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm_reg          = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA",
    scale_other_tf   = "Other",
    ncd_time         = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  gt_theme_mg() |>
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |>
  fmt_number(ncd_time, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Neurocognitive Disorders", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm_reg          ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    ncd_time         ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm_reg))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, ncd_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm_reg, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), ncd_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm_reg, "Reg"))) |>
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Gen: general anesthesia; Reg: regional anesthesia.") |>
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(ncd_time))) |>
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(pre_mmse)))
```

<br/>

## **Length of Stay**

<!-- <font size = 4> `r table_ref()` Length of stay according to procedure classification and comparator. </font> -->

## **Complications**

```{r complications_check_missing}
#| eval: false
## check missings other than n ------------------------ (2023-03-23 12:52) @----
missing_kq3_non_n_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, study, arm_id, arm, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high")) 
}

complication <- c("cardarr", "intub", "airleak", "gastro", "medical", "pulcongest", "respfail", "pe", "ssi", "thromb", "kidneyinj", "myoinfarct", "othcomp", "pneum", "infect", "cardiac", "stroke", "pulm", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

adverse_events_dat <- map(complication, missing_kq3_non_n_fun)

wb <- openxlsx::createWorkbook("kq3_complications")

for (i in 1:23) {
    temp_sheet <- adverse_events_dat[[i]]
    addWorksheet(wb, sheetName = complication[i])
    setColWidths(wb, i, cols = c(1:12), widths = c(rep(15, 12)))
    writeData(wb, sheet = i, temp_sheet)
}

path <- glue::glue("/Users/mgrant/Desktop/{name}.xlsx")
saveWorkbook(wb, "/Users/mgrant/Desktop/kq3.xlsx", overwrite = TRUE)

```

<font size = 4> `r table_ref()` Report complications in regional vs. general anesthesia — cardiac, MI, stroke, pulmonary, pneumonia, acute kidney injury. </font>

```{r}
complications_all <- c("medical", "surg", "cardiac", "gastro", "neuro", "pulm", "thromb", "infect", "fall", "stroke", "othcomp", "asppneum", "atelec", "bronch", "cardarr", "myoinfarct", "ssi", "sepsis", "uti", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48", "kidneyinj", "nerveinj", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

complications_kq6_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, year, study, arm_id, arm, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high")) |>
    mutate(complication = var_prefix) |>
    rename_with(~ str_replace(.x, "95", "ci_"), .cols = everything()) |>
    rename_with(~ str_replace(.x, "^.*_", ""), .cols = c(8:15)) |>
    arrange(complication, year, study, arm_id)
}

# adverse event data includes all reported complications
adverse_events_dat <- map_df(complications_all, complications_kq6_fun) |>
  mutate(
    arm_n = ifelse(!is.na(comp_update_arm_n), comp_update_arm_n, arm_n),
    calc_per = n / arm_n * 100,
    n_per = n_per_fun(n, arm_n, 1),
    diff = per - calc_per
  )

adverse_events_dat <- adverse_events_dat |>
  left_join(study_char_dat |> select(refid, study_l, surgs_single, design_f_lab), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  arrange(complication, surgs_single, year, study, arm_id) |>
  mutate(
    study_compl = paste0(study, complication),
    ref_arm_n = arm_n,
    ref_n = n
  ) |>
  group_by(study_compl) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |>
  mutate(
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 1), "—"),
    bar = case_when(
      # str_detect(arm, "Dex") ~ bar_prop(calc_per, "#A93226"),
      # str_detect(arm, "Ket|Mel|Ram") ~ bar_prop(calc_per, "#A93226"),
      str_detect(arm, "Gen") ~ bar_prop(calc_per, "#969696"),
      .default = bar_prop(calc_per, "#A93226"))) |>
  select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n, age_table, surgs_single, n_per, bar, rd_ci, complication, design_f_lab)

```

```{r complications_gt}
adverse_events_dat |>
  filter(complication %in% c("cardiac", "pulm", "stroke", "infect", "myoinfarct", "pneum", "kidneyinj")) |>
  mutate(complication = factor(complication, levels = c("cardiac", "pulm", "stroke", "infect", "myoinfarct", "pneum", "kidneyinj"), labels = c("Cardiac", "Pulmonary", "Stroke", "Infectious (not SSI)", "MI", "Pneumonia", "AKI"))) |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         surgs_single = ifelse(row_number() > 1, "", surgs_single), .by = study_compl) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac", "Pulmonary", "Stroke", "Infectious (not SSI)", "MI", "Pneumonia", "AKI")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l          ~ px(140),
    arm_n            ~ px(45),
    arm              ~ px(60),
    age_table        ~ px(100),
    surgs_single     ~ px(80),
    n_per            ~ px(80),
    bar              ~ px(100),
    rd_ci            ~ px(140)
  ) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  # tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Gen"))) |>
  # tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  # tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Plac|None"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Gen")))
  # tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(), rows = str_detect())) |>
  # tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(), rows = str_detect()))
  # tab_footnote(md("Before-After/Time Series"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Before-After/Time Series")) |>
  # tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial")) |>
  # tab_footnote("RD: risk difference; MI: myocardial infarction; AKI: acute kidney injury.")
```

## **Mortality**

## Risk of Bias

### Randomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for randomized clinical trials. </font>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_dat |>
  filter(!is.na(Study) & refid %in% kq3_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind")
```

<font size = 4> `r figure_ref()` Risk of bias assessment for randomized clinical trials. </font>

```{r rob_overall_study, out.width = "55%", fig.height = 10}
rob_traffic_light(rob_temp_dat, psize = 4, tool = "ROB2", colour = "colourblind")
```



## References {#references}
