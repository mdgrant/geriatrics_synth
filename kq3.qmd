---
title: "Regional versus General Anesthesia"
editor: source
toc-title: "**Regional versus General Anesthesia**"
toc-location: "left"
toc-depth: 3
toc_float: 
  collapsed: true
tbl-cap-location: "top"
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq3.bib"
csl: "bib/jama.csl"
link-citations: false
nocite: '@*'
---

::: {.callout-note collapse="true"}
## Recent upates

| Date       | Modification                                                                                                                                                                    |
|:-----------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| 2023-11-08 | Updated to most current included studies. Removed risk of bias tallies from forest plots where not pertinent to outcome. Used weighted risk of bias summary for delirium and added for overall. Added risk differences per 1000 to complications and mortality|
:::

## Key Question

Among older patients undergoing surgery and anesthesia, does regional anesthesia as the primary anesthetic technique improve postoperative outcomes compared with general anesthesia?

```{r read_data}
#| include: false
source("code/load_data.R")
settings.meta(CIbracket = "(")
conflicts_prefer(dplyr::lag)

kq3_refid <- kq3_refid[!kq3_refid %in% c(813, 3434)] # retrospective cohort 

study_char_dat <- data_kq(study_char_dat, kq3_refid)

# ortho only hip fx ortho_hipfx_only_refid
ortho_hipfx_only_refid <- ortho_proc |> 
  filter(ortho == "HipFx") |> 
  pull(refid)

## VARIABLE: kq3_anesth_neur, kq3_anesth_reg, kq3_anesth_gen, kq3_anesth_neur_type, kq3_anesth_gen_type  — anesthetic and type, no specifics recorded for regional
study_arm_dat <- data_kq(study_arm_dat, kq3_refid) |>
  # delete anesthetic variables not relevant (avoid potential confusion)
  select(-c(inhalation:anes_ns)) |>
  mutate(arm = arm_kq3_reg_gen) |>
  relocate(arm, .before = arm_kq3_reg_gen) |>
  # add general, neuraxial, regional
  mutate(
    kq3_anesth_neur = ifelse(if_any(c(kq3_reg_spinal, kq3_reg_epidural, kq3_reg_cse), ~ !is.na(.x)), "Neuraxial", NA),
    kq3_anesth_reg = ifelse(!is.na(kq3_reg_block), "Regional", NA),
    kq3_anesth_gen = ifelse(!is.na(kq3_gen_type), "General", NA),
    kq3_anesth_neur_type =
      case_when(
        !is.na(kq3_reg_spinal) ~ "Spinal",
        !is.na(kq3_reg_epidural) ~ "Epidural",
        !is.na(kq3_reg_cse) ~ "CSE"
      ),
    kq3_anesth_gen_type = kq3_gen_type,
    arm = ifelse(!is.na(kq3_reg_block) & arm != "general", "block", arm),
    arm = factor(arm, levels = c("general", "block", "regional"), labels = c("Gen", "Block", "Neur"))
  ) |>
  relocate(kq3_anesth_neur:kq3_anesth_gen_type, .before = kq3_gen_type)

    
contin_dat <- data_kq(contin_dat, kq3_refid) |>
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id)

## VARIABLE: delirium_inc_prop <lgl> to indicate incidence proportion reported (prior to replacing missings with max daily occurrence)
dichot_dat <- data_kq(dichot_dat, kq3_refid) |>
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id) |>
  # if incidence proportion for delirium not reported use the max of days
  mutate(
    delirium_inc_prop = !is.na(delitotal_n),
    delirium_day_max = pmax(delirium_n1, delirium_n2, delirium_n3, delilast_n, na.rm = TRUE),
    delitotal_n = ifelse(is.na(delitotal_n), delirium_day_max, delitotal_n),
  ) |>
  relocate(delirium_day_max, .after = delitotal_n)

likert_dat <- data_kq(likert_dat, kq3_refid) |>
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id)

```

```{r delirium_refids_check}
#| eval = FALSE
# any of delirium_dichot_refid, delirium_contin_refid, delirium_likert_refid 
kq3_refid[kq3_refid %in% delirium_refid]
kq3_refid[kq3_refid %in% cogfunc_refid]
kq3_refid[!kq3_refid %in% c(delirium_refid, cogfunc_refid)]
```

## Outcome Importance

<caption_mg> `r table_ref()` Rankings of the 5 most important outcomes (11 respondents). </caption_mg>

```{r outcome_priority}
#| include: true
#| eval: true
outcome_dat <- rankings("KQ3")
outcome_tab(outcome_dat, 11)
```

## Outcomes Reported

<caption_mg> `r table_ref()` Dichotomous or count outcomes. </caption_mg>

```{r dichot_outcome_freq}
dichot_freq_fun(dichot_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

<caption_mg> `r table_ref()` Continuous outcomes. </caption_mg>

```{r cont_outcome_freq}
contin_freq_fun(contin_dat)
```

<caption_mg> `r table_ref()` Likert or ordinal outcomes. </caption_mg>

```{r likert_outcome_freq}
likert_freq_fun(likert_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

## **Included Studies**

<caption_mg> `r table_ref()` Number of studies by design. </caption_mg>

```{r studies_design}
study_char_dat |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(
    style = list(
      cell_fill(color = "#E4F3FE"),
      cell_text(weight = "bold"),
      cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))
    ),
    locations = cells_body(
      rows = design_f_lab == "Total"
    )
  ) |> 
  tab_style(
    style = list(
      cell_text(align = "left")),
      locations = cells_body(
        columns = design_f_lab
      )
    ) |> 
  tab_footnote("Studies with multiple publications counted only once (applied to 1 trial with 2 publications).")
```

### Design, centers, country, and surgery

<caption_mg> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </caption_mg>

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |>
  select(refid, starts_with("design"), study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi) |>
  left_join(surgs |> select(refid, surgs), by = "refid") |>
  mutate(
    surgs = ifelse(str_count(surgs, "\\|") > 3, "Various", surgs),
    # edit levels by kq
    surgs = factor(surgs, levels = c("Ortho", "Urol", "GI/Abdominal", "Neuro", "Neuro|Vasc", "Cardiac", "Gyn", "Gyn|Ortho|Urol|Vasc", "Headneck", "Ophtho", "Other", "Spine", "Various", "Vasc"))
  ) |>
  arrange(design_f, surgs, study_l) |>
  select(refid, design_f, study_l, centers, n_enroll, country, surgs, non_vh_hdi)

included_dat |>
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_hide(c(non_vh_hdi, design_f)) |>
    fmt_markdown(columns = c(study_l)) |> 
  cols_width(
    refid ~ px(60),
    study_l ~ px(165),
    centers ~ px(60),
    n_enroll ~ px(60),
    country ~ px(100),
    surgs ~ px(150)
  ) |> 
  # opt_horizontal_padding(scale = 2) |>
  sub_missing(columns = everything(), missing_text = " — ") |>
  gt_theme_mg() |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c("refid"))) |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(surgs))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(surgs))) |>
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote(footnote = md("Various indicates 4 or more different types of surgery."), locations = cells_column_labels(columns = surgs)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_column_labels(columns = country)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))) |>
  # tab_footnote(footnote = "Studies examining drugs not directly relevant to recommendations but potentially relevant to the evidence space (eg, a connected network) were included.",  locations = cells_row_groups(groups = )) |> 
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Urol: urological; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular.")

```

### Country Summary

<caption_mg> `r table_ref()` Summary of studies by country where conducted. </caption_mg>

```{r country}
study_char_dat |>
  mutate(linked_references = ifelse(is.na(linked_references), refid, linked_references)) |> 
  slice(1, .by = linked_references) |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
  gt_theme_mg()

```

## **Comparators**

<caption_mg> `r table_ref()` Selected characteristics of randomized trials comparing general and regional anesthesia. </caption_mg>

```{r reg_gen_tab}
reg_gen_tab <- study_arm_dat |>
  select(refid, refid_c, arm_id, study, year, arm_n, arm, asa_ps_incl, kq3_reg_spinal, kq3_reg_epidural, kq3_reg_cse, kq3_reg_block, kq3_reg_ns, kq3_reg_sedation, kq3_gen_type, kq3_gen_desflurane:kq3_gen_inhaleother) |>
  left_join(study_char_dat |> select(refid, study_l, surg_ortho_tka, surg_ortho_tha, surg_ortho_hipfx, surg_ortho_other, surg_list, surgs), by = "refid") |>
  left_join(ortho_proc |> select(refid, ortho), by = c("refid")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  mutate(
    # volatile_spec = if_any(kq3_gen_desflurane:kq3_gen_inhaleother, ~ !is.na(.x), "\U2713", NA), # verifies kq3_gen_type
    volatile = ifelse(kq3_gen_type %in% c("inhalation", "tiva_inhal"), "\U25CF", NA),
    tiva = ifelse(kq3_gen_type %in% c("tiva", "tiva_inhal"), "\U25CF", NA),
    # tiva_inhal = ifelse(kq3_gen_type == "tiva_inhal", "\U2713", NA),
    # tiva_inhal = ifelse(kq3_gen_type == "tiva_inhal", "\U2713", NA),
    kq3_reg_block = notna_to_x(kq3_reg_block, "\U2714"),
    notrep = ifelse(kq3_gen_type == "notrep", "\U25CF", NA),
    across(c(kq3_reg_spinal, kq3_reg_epidural, kq3_reg_cse, kq3_reg_ns), ~ ifelse(!is.na(.x), "\U2716", NA)),
    surgs = str_replace(paste(surgs, ortho), " NA", ""),
    surgs = str_replace(surgs, " Other", ""),
    surgs = str_replace(surgs, "Ortho ", "Ortho — "),
    surgs = str_replace(surgs, "\\s{1}$", "")
  ) |>
  rename_with(~ str_replace(.x, "kq3_", "")) |>
  select(refid, arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, pre_mmse, volatile, tiva, notrep, reg_spinal, reg_epidural, reg_cse, reg_ns, reg_block, surgs, year, ortho) |>
  arrange(surgs, year, study, arm)

```

```{r reg_gen_gt}
reg_gen_tab |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l), .by = study) |>
  mutate(arm_n = ifelse(refid == 221, "NR", arm_n)) |> 
  group_by(surgs) |>
  gt(id = "one") |>
  row_group_order(groups = c("Ortho — HipFx", "Ortho — HipFx|Other", "Ortho — TKA|THA|HipFx|Other", "Ortho — TKA", "Ortho — THA", "Ortho", "Urol", "GI/Abdominal", "Neuro", "Neuro|Vasc", "Cardiac", "Gyn", "Gyn|Ortho|Urol|Vasc", "Headneck", "Other", "Various TKA|THA|Other", "Vasc")) |>
  # "Cardiac", "GI/Abdominal", "Gyn", "Gyn|Ortho|Urol|Vasc", "Headneck", "Neuro", "Neuro|Vasc", "Ortho", "Ortho — HipFx", "Ortho — HipFx|Other", "Ortho —  THA", "Ortho — TKA", "Ortho — TKA|THA|HipFx|Other", "Other", "Urol", "Various TKA|THA|Other", and "Vasc".
  cols_hide(c(refid, arm_id, study, year, ortho)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Comparator",
    asa_ps_incl      = "PS",
    age_table        = "    Age",
    pre_mmse         = "MMSE",
    volatile         = "Vol",
    tiva             = "TIVA",
    notrep           = "NR",
    reg_spinal       = "Spinal",
    reg_epidural     = "Epid",
    reg_cse          = "CSE",
    reg_ns           = "NR",
    reg_block        = "Block"
  ) |>
  tab_spanner(label = "General", columns = c(volatile:notrep), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl), level = 1) |>
  tab_spanner(label = "Neuraxial", columns = c(reg_spinal:reg_ns), level = 1) |>
  tab_spanner(label = "Regional", columns = c(reg_spinal:reg_block), level = 2) |>
  fmt_markdown(columns = c(study_l, age_table, pre_mmse)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    arm ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    pre_mmse ~ px(100),
    volatile ~ px(40),
    tiva ~ px(40),
    notrep ~ px(40),
    reg_spinal ~ px(45),
    reg_epidural ~ px(40),
    reg_cse ~ px(40),
    reg_ns ~ px(40),
    reg_block ~ px(45)
  ) |>
  # tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(asa_ps_incl))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(volatile:reg_cse))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  # tab_style(style = list(cell_text(color = color_1)), locations = cells_body(columns = c(arm_n:reg_cse), rows = str_detect(arm, "Neur"))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:reg_block), rows = str_detect(arm, "Neur"))) |>
  tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(arm_n:reg_block), rows = str_detect(arm, "Block"))) |>
  tab_footnote(md("Gen: general; Neur: neuraxial; PS: physical stutus; Vol: volatile; TIVA: total intravenous anesthesia; NR: not reported; Epid: epidural; CSE: combined spinal and regional; Ortho: orthopedic; Urol: urological; GI: gastrointestinal; Neuro: neurologic; Gyn: gynecologic; Vasc: vascular; Ophtho: opthalomogic; Fx: fracture; TKA: total knee arthroplasty; THA: total hip arthroplasty.")) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote("Not included in pooled results owing to size.", locations = cells_body(columns = study_l, rows = str_detect(study_l, "Neuman 2016"))) |> 
  tab_footnote("Diazepam.", locations = cells_body(columns = arm, rows = study == "Salonia 2006" & arm_id == 2)) |> 
  tab_footnote("Propofol.", locations = cells_body(columns = arm, rows = study == "Salonia 2006" & arm_id == 3)) |> 
  tab_footnote("Midazolam.", locations = cells_body(columns = arm, rows = study == "Salonia 2006" & arm_id == 4)) |> 
  tab_footnote("Ropivacaine.", locations = cells_body(columns = arm, rows = study == "Sellbrant 2021" & arm_id == 2)) |> 
  tab_footnote("Mepivacaine.", locations = cells_body(columns = arm, rows = study == "Sellbrant 2021" & arm_id == 3)) 
  # gtsave(filename = "/Users/mgrant/Desktop/table.html", inline_css = TRUE)

```

## **Delirium Incidence**

<!-- UPDATED: delirium 2023-11-07  -->

```{r delirium_meta_data}
#| eval: true
# NOTE: compared and reconciled reported and calculated % # mutate(calc_per = delitotal_n / arm_n * 100, per_diff = calc_per - delitotal_perc) |> filter(per_diff > 0.5)
delirium_meta_dat <- dichot_dat |>
  mutate(
    arm_n = ifelse(!is.na(deli_update_arm_n), deli_update_arm_n, arm_n),
    # arm = fct_collapse(arm, "Neur/Block" = c("Block", "Neur")), 
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
  ) |> 
  filter(!is.na(delitotal_n)) |> # 
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  rename(surg_f = surgs_single_f) |> 
  # add hipfx only surg
  mutate(
    surg_f = fct_recode(surg_f, "Hip fx" = "Ortho"),
    surg_hip_oth = ifelse(refid %in% ortho_hipfx_only_refid, "Hip fx", "Other"),
    surg_hip_oth = factor(surg_hip_oth, levels = c("Hip fx", "Other"), labels = c("Hip fx", "Other"))
    # surg_hip_oth = ifelse(refid %in% ortho_hipfx_only_refid, "Hip fx", "Other")
  ) |> 
  select(refid, study, arm_id, arm, year, design_f_lab, country, surg_f, surg_hip_oth, delitotal_n, arm_n, delirium_inc_prop, delitotal_time:delitotal_95high, deli_cam:deli_scale_otherspec) 

# NOTE: collapse arms delirium meta; Bielka 2021 arm 1 psoas block, Shin 2020 tiva and volatile
delirium_meta_dat <- delirium_meta_dat |>
  mutate(
    delitotal_n = case_when(
      study == "Shin 2020" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), delitotal_n),
      study == "Bielka 2021" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Bielka 2021", c(1, 3), delitotal_n),
      .default = delitotal_n
    ),
    arm_n = case_when(
      study == "Shin 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), arm_n),
      study == "Bielka 2021" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Bielka 2021", c(1, 3), arm_n),
      .default = arm_n
    )
  ) |>
  filter(!(study %in% c("Shin 2020") & arm_id %in% c(2))) |>
  filter(!(study %in% c("Bielka 2021") & arm_id %in% c(3))) |> 
  mutate(arm = ifelse(study == "Bielka 2021" & arm_id == 2, "Neur/Block", as.character(arm)),
         arm = factor(arm, levels = c("Gen", "Neur", "Neur/Block", "Block"))
  )
  
# delirium_meta_dat |> select(refid) |> distinct() # 2023-04-24 n = 14
```

```{r reg_gen_delirium_tab}
# referent values for calculating rr and ci; rr_ci
delirium_rr_ref <- delirium_meta_dat |>
  select(refid, refid, arm_id, delitotal_n, arm_n) |>
  filter(!is.na(delitotal_n)) |>
  arrange(refid, arm_id) |>
  rename(ref_deli_n = delitotal_n, ref_arm_n = arm_n) |>
  # group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() > 1, NA, ref_deli_n),
    .by = refid
  ) |>
  fill(ref_arm_n, ref_deli_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() == 1, NA, ref_deli_n),
    .by = refid
  ) 

reg_gen_delirium_tab <- delirium_meta_dat |>
  # select(refid, refid, year, arm_id, design_f_lab, study, study_l, arm_n, delitotal_time:delitotal_95high, deli_cam:deli_scale_otherspec) |>
  mutate(
    across(starts_with("deli_"), ~ str_remove_all(.x, "scale_")),
    across(starts_with("deli_"), ~ str_remove_all(.x, "deli_")),
    across(deli_cam:deli_scale_icdsc, ~ toupper(.x)),
  ) |>
  rename_with(~ gsub("scale_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("deli_", "", .x, fixed = TRUE)) |>
  left_join(delirium_rr_ref, by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, study_l), by = c("refid")) |>
  mutate(
    # other = ifelse(str_detect(otherspec, "AMT"), "AMT", other),
    # other = ifelse(str_detect(otherspec, "Psychiatrist consultation"), "Psych", other),
    # other = ifelse(str_detect(otherspec, "Chinese"), "Note", other),
    # other = ifelse(other == "other", NA_character_, other),
    calc_percent = delitotal_n / arm_n * 100,
    n_percent = n_per_fun(delitotal_n, arm_n, 1),
    rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(delitotal_n, arm_n, ref_deli_n, ref_arm_n), "—")
  ) |>
  relocate(calc_percent, .after = delitotal_perc) |>
  unite(scale_delirium, cam:other, remove = TRUE, sep = "/", na.rm = TRUE) |>
  mutate(
    scale_delirium = ifelse(scale_delirium == "unspec", "NR", scale_delirium),
    scale_delirium = ifelse(scale_delirium == "DELIRIUM INDEX (DI)", "DI", scale_delirium)
  ) |>
  select(year, refid, refid, design_f_lab, study, study_l, arm_id, arm_n, arm, scale_delirium, delitotal_time, n_percent, calc_percent, rr_ci, surg_f, surg_hip_oth) |>
  # arrange(year, study, refid, desc(arm)) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  relocate(pre_mmse, .before = scale_delirium) |>
  relocate(age_table, .after = arm_n)

```

<caption_mg> `r table_ref()` Delirium incidence and ascertainment during hospitalization in trials comparing regional and general anesthesia. </caption_mg>

```{r reg_gen_delirium_gt}
reg_gen_delirium_tab |>
    arrange(year, study, arm) |>
    mutate(
      delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
      delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time),
      study_l = ifelse(row_number() > 1, "", study_l),
      delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
      scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
      bar = case_when(
        str_detect(arm, "Neur|Block") ~ bar_prop(calc_percent, color_2),
        .default = bar_prop(calc_percent, "#969696")),
      .by = study
    ) |>
    group_by(surg_f) |>
    gt(id = "one") |>
    row_group_order(groups = c("Hip fx", "GI/Abd", "Headneck", "Spine", "Various")) |>
    cols_hide(c(year, refid, arm_id, study, design_f_lab, age_table, calc_percent, surg_hip_oth)) |>
    cols_label(
      study_l = "Study",
      arm_n = " N",
      # age_table = "  Age",
      arm = md("Arm"),
      pre_mmse = md("  MMSE<br/>(preop)"),
      scale_delirium = "Scale",
      delitotal_time = "Days",
      n_percent = "N (%)",
      bar = "0 – 100%",
      rr_ci = "RR (95% CI)"
    ) |>
    fmt_markdown(columns = c(study_l, pre_mmse, bar)) |>
    tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, arm, scale_delirium))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, delitotal_time, n_percent, rr_ci))) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(arm, scale_delirium, bar))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, rr_ci))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(n_percent))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(n_percent))) |>
    tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:n_percent), rows = str_detect(arm, "Neur|Block"))) |>
    sub_missing(columns = delitotal_time, missing_text = "Note") |>
    gt_theme_mg() |>
    cols_width(
      study_l ~ px(165),
      arm_n ~ px(45),
      # age_table ~ px(100),
      arm ~ px(80),
      pre_mmse ~ px(95),
      scale_delirium ~ px(105),
      delitotal_time ~ px(50),
      n_percent ~ px(90),
      bar ~ px(100),
      rr_ci ~ px(140)
    ) |> 
  tab_footnote("RR: risk ratio; MMSE: Mini-Mental State Examination; CAM: Confusion Assessment Method; DI: Delirium Index; DRS: Delirium Rating Scale; DSM: Diagnostic and Statistical Manual of Mental Disorders; NR: not reported.") |>
    tab_footnote("Gen: general anesthesia; Neur: neuraxial; RR: risk ratio; MMSE: Mini-Mental State Examination; DRS: Delirium Rating Scale; DSM: Diagnostic and Statistical Manual of Mental Disorders; CAM: Confusion Assessment Method; DI: Delirium Index.") |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |>
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
  tab_footnote("Not included in pooled results owing to size.", locations = cells_body(columns = study_l, rows = str_detect(study_l, "Neuman 2016"))) 
```

### *Pooled*

```{r delirium_meta}
delirium_meta_dat <- delirium_meta_dat |> 
  arrange(year, study, arm) |> 
  filter(study != "Neuman 2016")

pairwise_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = delirium_meta_dat,
  sm = "RR") |> 
  select(refid, studlab:country, surg_hip_oth) 

del_meta_dat <- pairwise_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall, surg_hip_oth) |>
  mutate(
    sample_size = n1 + n2,
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  )

# total_meta(del_meta_dat)

gen_reg_delirium_meta <- metabin(event2, n2, event1, n1,
  data = del_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE,
  # subset = surg_hip_oth == "Hip fx"
  subgroup = surg_hip_oth
)

# summary(gen_reg_delirium_meta)

gen_reg_delirium_meta_nosub <- update(gen_reg_delirium_meta, subgroup = NULL)

# small study effects; here to have result of Harbord test
temp_meta <- update(gen_reg_delirium_meta, subgroup = NULL, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# cumulative meta
gen_reg_delirium_cummeta <- metacum(gen_reg_delirium_meta, pooled = "random", sortvar = n.e + n.c)
```

<caption_mg> `r figure_ref()` General versus regional anesthesia (randomized clinical trials). </caption_mg>

```{r delirium_meta_forest, fig.width = 14, fig.height = 7.5, fig.align = "left", warning = TRUE}
forest(gen_reg_delirium_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Regional",
  label.c = "General",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  # sortvar = year,
  prediction = TRUE,
  subgroup = TRUE,
  prediction.subgroup = TRUE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 10),
  xlab = "Favors: Regional                          General",
  addrows.below.overall = 4
)
```

<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <br/> In hip fracture subgroup not applying the Hartung-Knapp adjustment --- RR 1.03 (95% CI, 0.85--1.24); random effects pooled estimate dominated by Neuman 2021 (74.1%) and Li 2022 (13.0%).<br/> `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> `r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, delirium_meta_dat$refid), "; a secondary outcome in ", prim_sec_out_fun(sec_delirium, delirium_meta_dat$refid), ".")`</foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` General versus regional anesthesia cumulative meta-analysis by study size. </caption_mg>

```{r delirium_meta_forest_cum, fig.width = 14, fig.height = 4.5, fig.align = "left", warning = TRUE}
forest(gen_reg_delirium_cummeta,
  # common = TRUE,
  label.e = "Regional",
  label.c = "General",
  rightcols = c("effect", "ci", "pval", "tau2", "I2"),
  rightlabs = c("RR", "(95% CI)  ", "P  ", "\U03C4 ²", "I²"),
  # just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 2,
  digits.tau = 2,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  colgap.right = "5mm",
  colgap.forest.left = "5mm",
  colgap.forest.right = "5mm",
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.2, 4),
  xlab = "Favors: Regional                          General",
  addrows.below.overall = 4
)
```
:::

<!-- ::: {.callout-note collapse="true" appearance="minimal" icon="false"} -->

<!-- #### <caption_mg> General versus regional anesthesia pooled with subgroups (randomized clinical trials). </caption_mg> -->

<!-- ```{r delirium_meta_forest_sub, fig.width = 14, fig.height = 8.7, fig.align = "left", warning = TRUE} -->

<!-- forest(gen_reg_delirium_meta, -->

<!--   allstudies = TRUE, -->

<!--   common = TRUE, -->

<!--   label.e = "Regional", -->

<!--   label.c = "General", -->

<!--   rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"), -->

<!--   rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"), -->

<!--   just.addcols.right = "right", -->

<!--   digits = 2, -->

<!--   digits.tau2 = 1, -->

<!--   overall.hetstat = TRUE, -->

<!--   print.I2.ci = TRUE, -->

<!--   # sortvar = year, -->

<!--   prediction = TRUE, -->

<!--   subgroup = TRUE, -->

<!--   prediction.subgroup = FALSE, -->

<!--   print.subgroup.name = FALSE, -->

<!--   fs.xlab = 11, -->

<!--   pooled.events = TRUE, -->

<!--   print.pval.Q = FALSE, -->

<!--   # xlim = c(0.1, 3), -->

<!--   xlab = "Favors: Regional                          General", -->

<!--   addrows.below.overall = 4 -->

<!-- )   -->

<!-- ``` -->

<!-- <foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .</foot_mg><br/> -->

<!-- ::: -->

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` General versus regional anesthesia small study effects. </caption_mg>

```{r dex_plac_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
temp_limit_meta <- limitmeta(temp_meta)

par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

# text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta,  pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

```

<foot_mg> Estimates (odds ratio and 95% CI) from random effects models. Limit meta-anlaysis shown in light grey --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Summary risk of bias from randomized clinical trials comparing regional and general anesthesia (weighted). </caption_mg>

```{r rob2_summary_delirium, fig.height = 3, out.width = "60%"}
rob_summary_meta_weighted_fun(gen_reg_delirium_meta)
# rob_summary_fun(delirium_meta_dat$refid)
```
:::

## **Delayed Neurocognitive Recovery**

<!-- UPDATED: delayed neurocognitive recovery 2023-11-07  -->

```{r dncr_ncd_dat}
#| eval: true
dncr_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x <= 30)) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    neurocog_n1 = ifelse(neurocog_time1 > 30, NA, neurocog_n1),
    neurocog_n2 = ifelse(neurocog_time2 > 30, NA, neurocog_n2),
    neurocog_n3 = ifelse(neurocog_time3 > 30, NA, neurocog_n3),
    neurocog_last_n = ifelse(neurocog_last_time > 30, NA, neurocog_last_n),
    neurocog_total_n = ifelse(neurocog_total_time > 30, NA, neurocog_total_n),
    neurocog_time1 = ifelse(neurocog_time1 > 30, NA, neurocog_time1),
    neurocog_time2 = ifelse(neurocog_time2 > 30, NA, neurocog_time2),
    neurocog_time3 = ifelse(neurocog_time3 > 30, NA, neurocog_time3),
    neurocog_last_time = ifelse(neurocog_last_time > 30, NA, neurocog_last_time),
    neurocog_total_time = ifelse(neurocog_total_time > 30, NA, neurocog_total_time),
    dncr_time = pmax(neurocog_time1, neurocog_time2, neurocog_time3, neurocog_last_time, neurocog_total_time, na.rm = TRUE),
    neurocog_total_n = case_when(
      neurocog_time1 == dncr_time ~ neurocog_n1,
      neurocog_time2 == dncr_time ~ neurocog_n2,
      neurocog_time3 == dncr_time ~ neurocog_n3,
      neurocog_last_time == dncr_time ~ neurocog_last_n,
      neurocog_total_time == dncr_time ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n/arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  left_join(study_char_dat |> select(refid, country, neuro_threshold), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |> 
  rename(surg_f = surgs_single_f) |>
  arrange(refid, arm_id) |>
  mutate(
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(neurocog_prop * 100, "#969696"),
      str_detect(arm, "Neur|Block") ~ bar_prop(neurocog_prop * 100, color_2),
      .default = bar_prop(neurocog_prop * 100, color_1)),
    year = as.numeric(str_extract(study, "\\d{4}")),
    arm_reg = fct_collapse(arm, "Reg" = c("Neur", "Block")),
    across(c(design_f_lab, surg_f), ~ fct_drop(.x)),
    scale_mmse = ifelse(!is.na(neurocog_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |>
  select(refid, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, arm, arm_reg, pre_mmse, dncr_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf, neuro_threshold)

## add referents for rr calculation ------------------- (2023-06-02 06:30) @----
dncr_rr_ref <- dncr_dat |>
  select(refid, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  ) 

neurocog_meta_dat <- dncr_dat |>
  filter(dncr_time >= 3) |> 
  select(refid, study, design_f_lab, year, arm_id, arm_reg, neurocog_total_n, arm_n) 

dncr_dat <- dncr_dat |>
  left_join(dncr_rr_ref, by = c("refid", "arm_id")) |>
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |>
  select(refid, year, study, study_l, arm_id, arm_n, arm_reg, pre_mmse, scale_mmse:scale_other_tf,  neuro_threshold, dncr_time, neurocog_nper, bar, rr_ci)

rm(dncr_rr_ref)
```

<caption_mg> `r table_ref()` Delayed neurocognitive recovery incidence and ascertainment in randomized clinical trials comparing regional and general anesthesia. </caption_mg>

```{r dncr_gt}
#| eval: true

# create footnotes for thresholds
# dncr_dat |>
#   select(refid, study, scale_mmse, scale_dst, scale_moca, neuro_threshold) |>
#   slice(1, .by = refid) |>
#   mutate(
#     neuro_threshold = str_replace(neuro_threshold, "≤-", "≥"),
#     footnotes = case_when(
#     !is.na(scale_mmse) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == '", study, "')) |>"),
#     !is.na(scale_dst) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == '", study, "')) |>"),
#     !is.na(scale_moca) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == '", study, "')) |>")
#   ),
#   footnotes = ifelse(row_number() == n(), str_remove(footnotes, ".{2}$"), footnotes)) |>
#   filter(!is.na(footnotes)) |>
#   pull(footnotes) |>
#   noquote()

dncr_dat |>
  arrange(year, study) |>
  mutate(study_l = ifelse(row_number() > 1, NA, study_l),
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         dncr_time = ifelse(row_number() > 1, NA, dncr_time),
         .by = study) |>
  gt(id = "one") |>
  cols_hide(c(refid, year, arm_id, study, scale_other, neuro_threshold)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm_reg          = "Arm",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA",
    scale_other_tf   = "Other",
    dncr_time        = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  gt_theme_mg() |>
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |>
  fmt_number(dncr_time, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Delayed Neurocognitive Recovery", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm_reg           ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    dncr_time        ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm_reg))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, dncr_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm_reg, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), dncr_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm_reg, "Reg"))) |>
  # tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm_reg, "Gen"))) |>
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Gen: general anesthesia; Reg: regional anesthesia.") |>
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(dncr_time))) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Not reported.", locations = cells_body(columns = c(scale_other_tf), rows = is.na(scale_other_tf) & str_detect(study_l, "Wang 2016"))) |> 
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Silbert 2014')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Rasmussen 2003')) |>                    
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2019a')) |>              
  tab_footnote('Difference from baseline >2 points.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Casati 2003')) 
```

```{r dncr_ncd_likert_dat}
#| eval: false
temp_dat <- likert_dat |>
  filter(if_any(c(cog_func_cdr, cog_func_cfq, cog_func_dst, cog_func_mmse, cog_func_moca, cog_func_trail, cog_func_other), ~ !is.na(.x))) |> 
  select(refid, study, starts_with(c("cfq", "cdr", "digit", "mmse", "moca", "trail", "othercog"))) |> 
  select(refid, study, starts_with("mmse"))
  # remove_empty(which = "cols") 

writexl::write_xlsx(temp_dat, "/Users/mgrant/Desktop/temp_dat.xlsx")


  # filter(if_any(c(mmse_time1, mmse_time2, mmse_time3, mmse_time1, mmselast_time, mmsetotal_time), ~ !is.na(.x))) |>
  
  filter(if_any(c(mmse_time1, mmse_time2, mmse_time3, mmse_time1, mmselast_time, mmsetotal_time), ~ !is.na(.x))) |> 
  select(refid, study, mmse_time1, mmse_time2, mmse_time3, mmse_time1, mmselast_time, mmsetotal_time)
  select(starts_with("mmse"))
  filter(if_any(c(mmse_M1, mmse_SD1, mmse_Med1, mmse_RL1, mmse_RU1, mmse_IQRL1, mmse_IQRU1, mmse_M2, mmse_SD, mmse_Med2, mmse_RL2, mmse_RU2, mmse_IQRL2, mmse_IQRU2, mmse_M3, mmse_SD, mmse_Med3, mmse_RL3, mmse_RU3, mmse_IQRL3, mmse_IQRU3, mmselast_M, mmselast_SD, mmselast_Med, mmselast_RL, mmselast_RU, mmselast_IQRL, mmselast_IQRU, mmsetotal_M, mmsetotal_SD, mmsetotal_Med, mmsetotal_RL, mmsetotal_RU, mmsetotal_IQRL, mmsetotal_IQRU), ~ !is.na(.x)))
  # > 30 day exam
  # filter(if_any(matches("neurocog.*time.*"), ~ .x <= 30)) |>
  # mutate(
  #   arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n)
  # )

```

<br/>

### *Pooled*

<caption_mg> `r figure_ref()` Neurocognitive disorder (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r dncr_meta,  fig.width = 14, fig.height = 3.5, fig.align = "left", warning = TRUE}
trts <- neurocog_meta_dat$arm_reg

pairs_dat <- pairwise(
  treat = arm_reg,
  event = neurocog_total_n,
  n = arm_n,
  studlab = study,
  data = neurocog_meta_dat,
  sm = "RR"
)

dncr_meta_dat <- pairs_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall) |>
  mutate(
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  ) |>
  arrange(year, study)

gen_reg_dncr_meta <- metabin(event2, n2, event1, n1,
  data = dncr_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = FALSE
)

forest(gen_reg_dncr_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Regional     ",
  label.c = "General  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)   ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Regional               General",
  addrows.below.overall = 4
)

```

<foot_mg> Too few studies to examine small study effects. </foot_mg>

## **Postoperative Neurocognitive Disorder**

<!-- UPDATED: postoperative neurocognitive disorder 2023-11-07 -->

<caption_mg> `r table_ref()` Postoperative neurocognitive disorder and ascertainment. </caption_mg>

```{r ncd_dat}
ncd_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x > 30)) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    ncd_time = case_when(
      neurocog_time1 > 30 ~ neurocog_time1,
      neurocog_time2 > 30 ~ neurocog_time2,
      neurocog_time3 > 30 ~ neurocog_time3,
      neurocog_last_time > 30 ~ neurocog_last_time,
      neurocog_total_time > 30 ~ neurocog_total_time,
      .default = NA
    ),
    neurocog_total_n = case_when(
      neurocog_time1 > 30 ~ neurocog_n1,
      neurocog_time2 > 30 ~ neurocog_n2,
      neurocog_time3 > 30 ~ neurocog_n3,
      neurocog_last_time > 30 ~ neurocog_last_n,
      neurocog_total_time > 30 ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n / arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  rename(surg_f = surgs_single_f) |>
  arrange(refid, arm_id) |>
  mutate(
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(neurocog_prop * 100, "#969696"),
      str_detect(arm, "Neur|Block") ~ bar_prop(neurocog_prop * 100, color_2),
      .default = bar_prop(neurocog_prop * 100, color_1)),
    year = as.numeric(str_extract(study, "\\d{4}")),
    arm_reg = fct_collapse(arm, "Reg" = c("Neur", "Block")),
    scale_mmse = ifelse(!is.na(neurocog_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |>
  select(refid, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, arm_reg, pre_mmse, ncd_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf)

ncd_rr_ref <- ncd_dat |>
  select(refid, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  )

ncd_dat <- ncd_dat |>
  left_join(ncd_rr_ref, by = c("refid", "arm_id")) |>
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |>
  select(refid, year, design_f_lab, study, study_l, arm_id, arm_n, arm_reg, pre_mmse, scale_mmse:scale_other_tf, ncd_time, neurocog_nper, bar, rr_ci)
```

```{r ncd_gt}
#| eval: true
ncd_dat |>
  arrange(year, study) |>
  mutate(study_l = ifelse(row_number() > 1, NA, study_l),
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         ncd_time = ifelse(row_number() > 1, NA, ncd_time),
         .by = study) |>
  group_by(design_f_lab) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm_reg          = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA",
    scale_other_tf   = "Other",
    ncd_time         = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  gt_theme_mg() |>
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |>
  fmt_number(ncd_time, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Postoperative Neurocognitive Disorder", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm_reg          ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    ncd_time         ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm_reg))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, ncd_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm_reg, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), ncd_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm_reg, "Reg"))) |>
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Gen: general anesthesia; Reg: regional anesthesia.") |>
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(ncd_time))) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |> 
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Rasmussen 2003'))
```

<br/>

## **Physical Function**

<!-- UPDATED: physical function 2023-11-07 -->

<caption_mg> `r table_ref()` Physical functional status for expanded versus standard preoperative evaluation. </caption_mg>

```{r exp_std_adl}
#| include: true
#| eval: true
#| warning: false

## main data ------------------------------------------ (2023-07-13 10:05) @----
adl_likert_dat <- likert_dat |> 
  # filter(!study %in% c("Tzimas 2018", "Neuman2021", "Wang2020b")) |> 
  mutate(
    # adl_koos, adl_sf36, adl_womac_func, adl_womac_stiff, adl_qlq_func, adl_other
    adl_scale = coalesce(adl_koos, adl_sf36, adl_womac_func, adl_womac_stiff, adl_qlq_func, adl_other),
    adl_scale = case_when(
      adl_scale == adl_sf36 ~ "SF-36 physical",
      str_detect(adl_other_spec, "Bar?thel") ~ "Barthel Index",
      adl_other_spec ==  "Short Performance Physical Battery" ~ "SPPB",
      str_detect(adl_other_spec, "Groningen") ~ "GARS"
    )
  ) |> 
  filter(!is.na(l_adl)) |> 
  relocate(adl_scale, .after = arm) |> 
  select(refid, study_l, study, arm_id, arm, arm_n, adl_scale, adl_koos:adl_other_spec, matches("sf36_pcs|womac_func|qlq_fs|adl")) |> 
  # select(refid, study, arm, adl_scale, matches("otheradl")) |> 
  rename_with(~ str_replace(., "_95", "ci95")) |> 
  rename_with(~ str_replace(., "other", "other_")) %>%
  mutate(
    time1       = coalesce(!!!select(., contains("time1"))),
    m1          = coalesce(!!!select(., contains("m1"))),
    sd1         = coalesce(!!!select(., contains("sd1"))),
    ci95l1      = coalesce(!!!select(., contains("ci95l1"))),
    ci95u1      = coalesce(!!!select(., contains("ci95u1"))),
    med1        = coalesce(!!!select(., contains("med1"))),
    rl1         = coalesce(!!!select(., contains("rl1"))),
    ru1         = coalesce(!!!select(., contains("ru1"))),
    iqrl1       = coalesce(!!!select(., contains("iqrl1"))),
    iqru1       = coalesce(!!!select(., contains("iqru1"))),
    diff1       = coalesce(!!!select(., contains("diff1"))),
    diffsd1     = coalesce(!!!select(., contains("diffsd1"))),
    diff95low1  = coalesce(!!!select(., contains("diff95low1"))),
    diff95high1 = coalesce(!!!select(., contains("diff95high1"))),
    pval1in    = coalesce(!!!select(., contains("pval1_in"))),
    pval1betw  = coalesce(!!!select(., contains("pval1_betw"))),
    time2       = coalesce(!!!select(., contains("time2"))),
    sd2         = coalesce(!!!select(., contains("sd2"))),
    m2          = coalesce(!!!select(., contains("m2"))),
    ci95l2      = coalesce(!!!select(., contains("ci95l2"))),
    ci95u2      = coalesce(!!!select(., contains("ci95u2"))),
    med2        = coalesce(!!!select(., contains("med2"))),
    rl2         = coalesce(!!!select(., contains("rl2"))),
    ru2         = coalesce(!!!select(., contains("ru2"))),
    iqrl2       = coalesce(!!!select(., contains("iqrl2"))),
    iqru2       = coalesce(!!!select(., contains("iqru2"))),
    diff2       = coalesce(!!!select(., contains("diff2"))),
    diffsd2     = coalesce(!!!select(., contains("diffsd2"))),
    diff95low2  = coalesce(!!!select(., contains("diff95low2"))),
    diff95high2 = coalesce(!!!select(., contains("diff95high2"))),
    pval2in    = coalesce(!!!select(., contains("pval2_in"))),
    pval2betw  = coalesce(!!!select(., contains("pval2_betw"))),
    time3       = coalesce(!!!select(., contains("time3"))),
    m3          = coalesce(!!!select(., contains("m3"))),
    sd3         = coalesce(!!!select(., contains("sd3"))),
    ci95l3      = coalesce(!!!select(., contains("ci95l3"))),
    ci95u3      = coalesce(!!!select(., contains("ci95u3"))),
    med3        = coalesce(!!!select(., contains("med3"))),
    rl3         = coalesce(!!!select(., contains("rl3"))),
    ru3         = coalesce(!!!select(., contains("ru3"))),
    iqrl3       = coalesce(!!!select(., contains("iqrl3"))),
    iqru3       = coalesce(!!!select(., contains("iqru3"))),
    diff3       = coalesce(!!!select(., contains("diff3"))),
    diffsd3     = coalesce(!!!select(., contains("diffsd3"))),
    diff95low3  = coalesce(!!!select(., contains("diff95low3"))),
    diff95high3 = coalesce(!!!select(., contains("diff95high3"))),
    pval3in    = coalesce(!!!select(., contains("pval3_in"))),
    pval3betw  = coalesce(!!!select(., contains("pval3_betw"))),
  ) |> 
  select(refid, study_l, study, arm_id, arm, arm_n, adl_scale, !contains("_"), matches("adl_update_arm_n[1-3]")) |> 
  rename_with(~ paste0("adl_", .x), .cols = matches("[1-3]")) |> 
  rename_with(~ str_remove(.x, "adl_adl_"))

## adl_transpose -------------------------------------- (2023-07-13 10:06) @----
adl_transpose <- function(data, obs_number){
  obs_number <- as.character(obs_number)
  data |> 
  select(refid:adl_scale, matches(obs_number)) |> 
  rename_with(~ str_replace(.x, obs_number, ""))
}

## adl_long_dat --------------------------------------- (2023-07-13 10:06) @----
adl_long_dat <- bind_rows(
  adl_transpose(adl_likert_dat, 1),
  adl_transpose(adl_likert_dat, 2),
  adl_transpose(adl_likert_dat, 3)) |>
  # update arms at follow-up times
  mutate(arm_n = ifelse(!is.na(update_arm_n), update_arm_n, arm_n)) |>
  select(-update_arm_n) |>
  filter(!is.na(adl_time))

```

```{r exp_std_adl_estimates}
# add formatted m/med and imputed mean sd if missing
adl_mn_med_dat <- mean_med_table_adl(adl_long_dat, "adl_") |>
  filter(!is.na(adl_time)) |>
  select(-scale)

adl_long_dat <- left_join(adl_long_dat, adl_mn_med_dat, by = c("refid", "arm_id", "adl_time")) |> 
  rename_with(~ str_remove(.x, "adl_")) |> 
  mutate(study = paste0(study, "-", time))

# function to calculate means, sd, and create analytical data set
calc_mn_sd <- function(n_e, m_e, sd_e, md_e, q1_e, q3_e, min_e, max_e, study, tx, refid, data = NULL) {
  temp_dat <- data |> 
    select(all_of(c(n_e, m_e, sd_e, md_e, q1_e, q3_e, min_e, max_e, study, tx, refid))) %>%
    mutate(n_c = 20, m_c = 2, sd_c = 1, md_c = 3, q1_c = 2, q3_c = 3, min_c = 1, max_c = 5)
  names(temp_dat)[1:10] <- c("n_e", "m_e", "sd_e", "md_e", "q1_e", "q3_e", "min_e", "max_e", "study", "tx")

  temp <- metacont(
    n.e = n_e,
    n.c = n_c,
    comb.fixed = TRUE,
    mean.e = m_e,
    sd.e = sd_e,
    median.e = md_e,
    q1.e = q1_e,
    q3.e = q3_e,
    min.e = min_e,
    max.e = max_e,
    mean.c = m_c,
    sd.c = sd_c,
    median.c = md_c,
    q1.c = q1_c,
    q3.c = q3_c,
    min.c = min_c,
    max.c = max_c,
    sm = "SMD",
    studlab = study,
    data = temp_dat
  )

  temp <- as_tibble(temp[c("studlab", "n.e", "mean.e", "sd.e")])
  cbind(temp_dat$tx, temp) 
}

adl_scales_dat <- tribble(
  ~study, ~scale, ~metric,
  "Purwar 2015", "SF-36 physical", "0→100",
)

adl_long_dat <- left_join(
  adl_long_dat,
  calc_mn_sd("arm_n", "m", "sd", "med", "iqrl", "iqru", "rl", "ru", "study", "arm", refid = "refid", data = adl_long_dat) |> rename(arm = "temp_dat$tx", study = studlab),
  by = c("study", "arm")
) |>
  # add calculable missing sd estimates, for Zhu 2022 sd_bwgrp_fun(51.7, 50.5, 85, 70, 0.522)[3]; Bakker use diff
  mutate(
    sd.e = ifelse(study == "Zhu 2022-21", 11.85844, sd.e),
    mean.e = ifelse(is.na(mean.e) & str_detect(study, "Bakker"), -diff, mean.e),
    study_time = study,
    study = str_remove(study_time, "-.*$"),
    year = str_extract(study, "\\d{4}"),
    period = case_when(
      time < 30 ~ "<30 days",
      time <= 90 ~ "30-90 days",
      time > 90 ~ ">90 days"
    )
  ) |>
  left_join(adl_scales_dat |> select(-scale), by = "study") |>
  select(-c(ci95l:pvalbetw)) |>
  select(refid:study, study_time, arm_id, arm_n, arm, scale, metric, everything()) |>
  arrange(year, study_time, arm_id) |>
  filter(time != 0) |>
  mutate(
    smd = case_when(
      arm_id == 2 ~ suppressWarnings(smd_ci(n.e, mean.e, sd.e, lag(n.e), lag(mean.e), lag(sd.e))),
      arm_id == 1 ~ NA
    ),
    .by = study_time
  ) 

adl_meta_dat <- adl_long_dat |> 
  select(study, arm, time, period, n.e, mean.e, sd.e) |> 
  pivot_wider(names_from = arm, values_from = c(n.e, mean.e, sd.e)) |> 
  rename_with(~ str_remove(.x, "\\.e"))
```

```{r exp_std_adl_gt}
adl_long_dat |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  relocate(age_table, .after = arm) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    scale = ifelse(row_number() > 1, "", scale),
    time = ifelse(row_number() > 1, "", time),
    metric = ifelse(row_number() > 1, "", metric),
    .by = study_time
  ) |>
  group_by(period) |>
  gt(id = "one") |>
  # row_group_order(groups = c("30-90 days")) |>
  cols_hide(c(refid, study, study_time, arm_id, m, sd, sd.e, n.e, mean.e, year, )) |>
  cols_label(
    study_l          = "Study",
    arm_n            = "N",
    arm              = "Arm",
    age_table        = "    Age",
    scale            = "Scale",
    metric           = "Range",
    time             = "Days",
    table            = "Rating",
    smd              = "SMD (95% CI)"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, age_table, table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  # fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  sub_missing(columns = everything(), missing_text = "") |>
  # replace relative effects calculated from studies with 0 events in one arm
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(135),
    arm_n ~ px(45),
    arm ~ px(50),
    age_table ~ px(90),
    scale ~ px(100),
    metric ~ px(70),
    time ~ px(40),
    table ~ px(90),
    smd ~ px(140)
  ) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:smd), rows = str_detect(arm, "Neur"))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(smd))) |>
  tab_footnote("SMD: standardized mean difference; Neur: neuraxial") |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, table))) |>
  tab_footnote("For scale reverse to be consistent with other studies.", locations = cells_body(columns = c(smd), rows = str_detect(study, "Bakker 2014") & arm == "Exp")) |>
  tab_footnote("Study reported only difference scores.", locations = cells_body(columns = c(table), rows = str_detect(study, "Bakker 2014")))
```

## **Complications**

<!-- UPDATED: complications 2023-11-08 -->

```{r complications_check_missing}
#| eval: false
# create excel file to inspect
complication_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, study, arm_id, arm, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high"))
}

complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

# complication <- c("medical", "surg", "cardiac", "gastro", "neuro", "pulm", "thromb", "infect", "fall", "stroke", "othcomp", "asppneum", "atelec", "bronch", "cardarr", "myoinfarct", "ssi", "sepsis", "uti", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48", "kidneyinj", "nerveinj", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

adverse_events_dat <- map(complication_incl, complication_fun)

wb <- openxlsx::createWorkbook("kq3_complications")

for (i in 1:17) {
    temp_sheet <- adverse_events_dat[[i]]
    addWorksheet(wb, sheetName = complication_incl[i])
    setColWidths(wb, i, cols = c(1:12), widths = c(rep(15, 12)))
    writeData(wb, sheet = i, temp_sheet)
}

path <- glue::glue("/Users/mgrant/Desktop/temp.xlsx")
saveWorkbook(wb, "/Users/mgrant/Desktop/kq3.xlsx", overwrite = TRUE)

# reported based on results
complication_all <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "pulm", "pneum", "pulcongest", "pe")

```

<caption_mg> `r table_ref()` Reported complications for regional versus general anesthesia --- cardiac, stroke, renal, pulmonary, and reintubation. </caption_mg>

```{r complications}
#| warning: false
#| eval: true
# included complications
complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

complication_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, year, study, arm_id, arm, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high")) |>
    mutate(complication = var_prefix) |>
    rename_with(~ str_replace(.x, "95", "ci_"), .cols = everything()) |>
    rename_with(~ str_replace(.x, "^.*_", ""), .cols = c(8:15)) |>
    arrange(complication, year, study, arm_id)
}

# adverse event data includes all reported complications in list
adverse_events_dat <- map_df(complication_incl, complication_fun) |>
  mutate(
    arm_n = ifelse(!is.na(comp_update_arm_n), comp_update_arm_n, arm_n),
    calc_per = n / arm_n * 100,
    n_per = n_per_fun(n, arm_n, 1),
    diff = per - calc_per
  )

adverse_meta_dat <- adverse_events_dat |> 
  select(refid, year, study, arm_id, arm, arm_n, n, complication)

adverse_events_dat <- adverse_events_dat |>
  left_join(cardiac_compl, by = c("refid", "complication")) |>
  left_join(study_char_dat |> select(refid, study_l, surgs_single, design_f_lab), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  arrange(complication, surgs_single, year, study, arm_id) |>
  mutate(
    study_compl = paste0(study, complication),
    ref_arm_n = arm_n,
    ref_n = n
  ) |>
  group_by(study_compl) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |>
  mutate(
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 1), "—"),
    # or_ci = ifelse(!is.na(ref_n) & n != 0 & ref_arm_n != 0, or_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 2), "—"), # not if any Os
    # rr_ci = ifelse(!is.na(ref_n) & n != 0 & ref_arm_n != 0, rr_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 2), "—"), # not if any Os
    bar = case_when(
      # str_detect(arm, "Dex") ~ bar_prop(calc_per, "#A93226"),
      # str_detect(arm, "Ket|Mel|Ram") ~ bar_prop(calc_per, "#A93226"),
      str_detect(arm, "Gen") ~ bar_prop(calc_per, "#969696"),
      .default = bar_prop(calc_per, "#A93226"))) |>
  select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n, age_table, surgs_single, n_per, bar, rd_ci, complication, design_f_lab, detail_cardiac)

# for summary table
# adverse_events_dat |> 
#   group_by(refid, arm_id) |> 
#   slice(1) |> 
#   ungroup() |> 
#   summarise(total = sum(arm_n))
```

```{r complications_gt}
#| eval: true
adverse_events_gt_dat <- adverse_events_dat |>
  filter(complication %in% complication_incl) |>
  # tabyl(complication) |> pull(complication) |> toString()
  mutate(complication = factor(complication, levels = c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "pulm", "pneum", "pulcongest", "pe", "intub"), labels = c("Other Cardiac", "MI", "Cardiac Arrest", "Stroke", "Renal", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Reintubation"))) |>
  arrange(year, study, arm) 

adverse_events_gt_dat |> 
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         detail_cardiac = ifelse(row_number() > 1, "", detail_cardiac),
         surgs_single = ifelse(row_number() > 1, "", surgs_single), .by = study_compl) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("MI", "Cardiac Arrest", "Other Cardiac", "Stroke", "Renal", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Reintubation")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab, detail_cardiac)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l          ~ px(140),
    arm_n            ~ px(45),
    arm              ~ px(60),
    age_table        ~ px(100),
    surgs_single     ~ px(80),
    n_per            ~ px(80),
    bar              ~ px(100),
    rd_ci            ~ px(140)
  ) |>
  tab_style(style = cell_text(align = "left"),          locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"),        locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"),          locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"),        locations = cells_body(columns = c(rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  # tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Gen"))) |>
  # tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  # tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Plac|None"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Gen"))) |> 
  tab_footnote("Gen: general anesthesia; Neur: neuraxial; RD: risk difference; Ortho: orthopedic; GI: gastrointestinal; Abd: abdominal; PE: pulmonary embolism; Ophtho: ophthalmologic.") |> 
  tab_footnote("Bradycardia.",                          locations = cells_body(columns = c(study_l), rows = detail_cardiac == "bradycardia")) |> 
  tab_footnote("Unspecified adverse cardiac events.",   locations = cells_body(columns = c(study_l), rows = detail_cardiac %in% c("adverse cardiologic events unspecified", "unspecified"))) |> 
  tab_footnote("Arrhythmia.",                           locations = cells_body(columns = c(study_l), rows = detail_cardiac == "arrhythmia")) |> 
  tab_footnote("MI, heart failure, new onset arrhythmia.", locations = cells_body(columns = c(study_l), rows = detail_cardiac == "mI, heart failure, new onset arrhythmia")) |> 
  tab_footnote("Tachycardia",                           locations = cells_body(columns = c(study_l), rows = detail_cardiac == "tachycardia")) 

```

### *Pooled*

```{r adverse_events_meta}
adverse_meta_dat <- adverse_events_gt_dat |>
  filter(refid != 16596) |> # Neuman 2016
  select(refid, year, study, arm_id, arm, arm_n, n, complication, study_compl) |>
  mutate(
    arm = ifelse(arm == "Gen", "Gen", "Reg"),
    n = case_when(
      study_compl == "Shin 2020cardiac" & arm_id == 1 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Shin 2020cardiac", c(1, 2), n),
      study_compl == "Shin 2020pulm" & arm_id == 1 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Shin 2020pulm", c(1, 2), n),
      study_compl == "Liang 2017myoinfarct" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017myoinfarct", c(2, 3), n),
      study_compl == "Bielka 2021cardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Bielka 2021cardiac", c(2, 3), n),
      study_compl == "Liang 2017pe" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017pe", c(2, 3), n),
      study_compl == "Liang 2017pneum" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017pneum", c(2, 3), n),
      study_compl == "Bielka 2021pneum" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Bielka 2021pneum", c(2, 3), n),
      .default = n
    ),
    arm_n = case_when(
      study_compl == "Shin 2020cardiac" & arm_id == 1 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Shin 2020cardiac", c(1, 2), arm_n),
      study_compl == "Shin 2020pulm" & arm_id == 1 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Shin 2020pulm", c(1, 2), arm_n),
      study_compl == "Liang 2017myoinfarct" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017myoinfarct", c(2, 3), arm_n),
      study_compl == "Bielka 2021cardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Bielka 2021cardiac", c(2, 3), arm_n),
      study_compl == "Liang 2017pe" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017pe", c(2, 3), arm_n),
      study_compl == "Liang 2017pneum" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017pneum", c(2, 3), arm_n),
      study_compl == "Bielka 2021pneum" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Bielka 2021pneum", c(2, 3), arm_n),
      .default = arm_n
    )
  ) |>
  filter(!(study_compl %in% c("Shin 2020cardiac") & arm_id  == 2)) |> 
  filter(!(study_compl %in% c("Shin 2020pulm") & arm_id  == 2)) |> 
  filter(!(study_compl %in% c("Liang 2017myoinfarct") & arm_id  == 3)) |> 
  filter(!(study_compl %in% c("Bielka 2021cardiac") & arm_id  == 3)) |> 
  filter(!(study_compl %in% c("Liang 2017pneum") & arm_id  == 3)) |> 
  filter(!(study_compl %in% c("Liang 2017pe") & arm_id  == 3)) |> 
  filter(!(study_compl %in% c("Bielka 2021pneum") & arm_id  == 3))
  
adverse_meta_wide_dat <- adverse_meta_dat |> 
  arrange(refid, complication) |> 
  pivot_wider(names_from = "arm", values_from = arm_n:n) |> 
  group_by(study_compl) |> 
  fill(arm_n_Gen:n_Reg) |> 
  slice(2) |> 
  ungroup() |> 
  arrange(complication, year, study) |> 
  left_join(rob2_meta_dat, by = "refid")

```

```{r complication_functions}
complication_meta <- c("Cardiac", "MI", "Cardiac Arrest", "Stroke", "Renal", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Reintubation")

complication_meta_fun <- function(compl_label, use_hakn = TRUE, predictive = TRUE){
meta_dat <- adverse_meta_wide_dat |> 
    filter(complication %in% compl_label)

complication_bin <- metabin(
  n_Reg, arm_n_Reg, n_Gen, arm_n_Gen,
  data = meta_dat,
  studlab = study,
  method = "MH",
  method.tau = "REML",
  sm = "RR",
  prediction = predictive,  
  hakn = use_hakn,
  allstudies = FALSE,
)  
}

complication_forest_fun <- function(adverse_meta, random = TRUE){
forest(adverse_meta,
  allstudies = TRUE,
  random = random,
  label.e = "Regional ",
  label.c = "General ",
  just.addcols.right = "center",
  rightcols = c("effect", "ci"),
  rightlabs = c("RR", "(95% CI)"),
  # just.addcols.right = "right",
  pool.events = TRUE, 
  digits.TE = 3,
  digits.tau2 = 1,
  overall = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  # pscale = 100,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  xlim = c(0.1, 10),
  xlab = "Favors: Regional                             General",
  addrows.below.overall = 4
)
}

complication_meta_riskdiff_fun <- function(compl_label, use_hakn = TRUE, predictive = TRUE){
meta_dat <- adverse_meta_wide_dat |> 
    filter(complication %in% compl_label)

complication_bin <- metabin(
  n_Reg, arm_n_Reg, n_Gen, arm_n_Gen,
  data = meta_dat,
  studlab = study,
  method = "MH",
  method.tau = "REML",
  sm = "RD",
  prediction = predictive,  
  hakn = use_hakn,
  allstudies = FALSE,
)  
}

complication_forest_riskdiff_fun <- function(adverse_meta, random = TRUE){
forest(adverse_meta,
  allstudies = TRUE,
  random = random,
  label.e = "Regional ",
  label.c = "General ",
  just.addcols.right = "center",
  rightcols = c("effect", "ci"),
  rightlabs = c("RD", "(95% CI)"),
  # just.addcols.right = "right",
  pool.events = TRUE, 
  digits.TE = 3,
  digits.tau2 = 1,
  overall = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pscale = 1000,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-40, 40),
  xlab = "Favors: Regional                             General",
  addrows.below.overall = 4
)
}
```

#### Myocardial Infarction

<caption_mg> `r figure_ref()` **Risk ratio** for myocardial infarction (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_mi, fig.width = 14, fig.height = 3.7}
#| fig.align = "left"
temp_meta <- complication_meta_fun("MI")
complication_forest_fun(temp_meta)
```

<foot_mg> Similar arms combined for Liang 2017.</foot_mg>

<caption_mg> `r figure_ref()` **Risk difference** for myocardial infarction (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_mi_rd, fig.width = 14, fig.height = 3.7, fig.align = "left"}
temp_meta <- complication_meta_riskdiff_fun("MI")
complication_forest_riskdiff_fun(temp_meta)
```

<foot_mg> Similar arms combined for Liang 2017.</foot_mg>

#### Cardiac Arrest

<caption_mg> `r figure_ref()` **Risk difference** for cardiac arrest (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_cardarr_rd, fig.width = 14, fig.height = 2.5, fig.align = "left"}
temp_meta <- complication_meta_riskdiff_fun("Cardiac Arrest", use_hakn = FALSE, predictive = FALSE)
complication_forest_riskdiff_fun(temp_meta, random = FALSE)
```

#### Stroke

<caption_mg> `r figure_ref()` **Risk ratio** for stroke (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_stroke, fig.width = 14, fig.height = 3.7, fig.align = "left"}
temp_meta <- complication_meta_fun("Stroke", use_hakn = FALSE, predictive = FALSE)
complication_forest_fun(temp_meta)

```

<caption_mg> `r figure_ref()` **Risk difference** for stroke (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_stroke_rd, fig.width = 14, fig.height = 3.7, fig.align = "left"}
temp_meta <- complication_meta_riskdiff_fun("Stroke", use_hakn = FALSE, predictive = FALSE)
complication_forest_riskdiff_fun(temp_meta)
```

#### Renal

<caption_mg> `r figure_ref()` **Risk ratio** for renal complications (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_aki, fig.width = 14, fig.height = 3.25, fig.align = "left"}
temp_meta <- complication_meta_fun("Renal", use_hakn = FALSE, predictive = FALSE)
complication_forest_fun(temp_meta)
```

<caption_mg> `r figure_ref()` **Risk difference** for renal complications (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_aki_rd,  fig.width = 14, fig.height = 3.25, fig.align = "left"}
temp_meta <- complication_meta_riskdiff_fun("Renal", use_hakn = FALSE, predictive = FALSE)
complication_forest_riskdiff_fun(temp_meta)
```

#### Pulmonary

<caption_mg> `r figure_ref()` **Risk ratio** for pulmonary complications (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_pulmonary, fig.width = 14, fig.height = 2.75, fig.align = "left"}
temp_meta <- complication_meta_fun("Pulmonary", use_hakn = FALSE, predictive = FALSE)
complication_forest_fun(temp_meta, random = FALSE)
```

<caption_mg> `r figure_ref()` **Risk difference** for pulmonary complications (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_pulmonary_rd, fig.width = 14, fig.height = 2.75, fig.align = "left"}
temp_meta <- complication_meta_riskdiff_fun("Pulmonary", use_hakn = FALSE, predictive = FALSE)
complication_forest_riskdiff_fun(temp_meta, random = FALSE)
```

#### Pneumonia

<caption_mg> `r figure_ref()` **Risk ratio** for pneumonia (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_pneumonia, fig.width = 14, fig.height = 4, fig.align = "left"}
temp_meta <- complication_meta_fun("Pneumonia", use_hakn = TRUE, predictive = FALSE)
complication_forest_fun(temp_meta)
```

<foot_mg> Similar arms combined for Bielka 2021 and Liang 2017. </foot_mg>

<caption_mg> `r figure_ref()` **Risk difference** for pneumonia (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_pneumonia_rd, fig.width = 14, fig.height = 4, fig.align = "left"}
temp_meta <- complication_meta_riskdiff_fun("Pneumonia", use_hakn = TRUE, predictive = FALSE)
complication_forest_riskdiff_fun(temp_meta)
```

<foot_mg> Similar arms combined for Bielka 2021 and Liang 2017. </foot_mg>

```{r}
#| eval: false
# pulmonary congestion
complication_meta_riskdiff_fun("Pulmonary Congestion", use_hakn = TRUE, predictive = FALSE)
# reintubation
complication_meta_riskdiff_fun("Reintubation", use_hakn = TRUE, predictive = FALSE)
```

#### Pulmonary Embolism

<caption_mg> `r figure_ref()` **Risk ratio** for pulmonary embolism (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_pe, fig.width = 14, fig.height = 4, fig.align = "left"}
temp_meta <- complication_meta_fun("PE", use_hakn = TRUE, predictive = FALSE)
complication_forest_fun(temp_meta)
```

<foot_mg> Similar arms combined for Liang 2017.</foot_mg>

<caption_mg> `r figure_ref()` **Risk difference** for pulmonary embolism (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r complication_pe_rd, fig.width = 14, fig.height = 4, fig.align = "left"}
temp_meta <- complication_meta_riskdiff_fun("PE", use_hakn = TRUE, predictive = FALSE)
complication_forest_riskdiff_fun(temp_meta)
```

<foot_mg> Similar arms combined for Liang 2017.</foot_mg>

```{r complication_pulmonary-congestion, fig.width = 14, fig.height = 2, fig.align = "left"}
#| eval: false
temp_meta <- complication_meta_fun("Pulmonary Congestion", use_hakn = FALSE, predictive = FALSE)
complication_forest_fun(temp_meta)

temp_meta <- complication_meta_fun("Reintubation", use_hakn = FALSE, predictive = FALSE)
complication_forest_fun(temp_meta)
```

## **Patient Satisfaction**

<!-- UPDATED: patient satisfaction 2023-11-08 -->

<caption_mg> `r table_ref()` Patient satisfaction according to regional or general anesthesia. </caption_mg>

```{r pt_satisfaction}
satis_dat_gt <- dichot_dat |>
  select(refid, year, study, study_l, arm_id, arm_n, arm, design_f_lab, matches("satis"), notes_d) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = "refid") |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  filter(if_any(satis_n:satis_95high, ~ !is.na(.x))) |>
  select(!c(d_satisfaction, satis_pval:satis_95high)) |>
  mutate(
    arm_n = ifelse(!is.na(satis_update_arm_n), satis_update_arm_n, arm_n),
    n_percent = n_per_fun(satis_n, arm_n, n_sig_dig = 1),
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(satis_n / arm_n * 100, "#969696"),
      str_detect(arm, "Neur|Block") ~ bar_prop(satis_n / arm_n * 100, color_2)
    )
  ) |>
  arrange(year, study, arm_id) 

satis_dat_gt <- satis_dat_gt |>
  mutate(
    satis_n = case_when(
      study == "Xu 2020" & arm_id == 2 ~ collapse_dichot(satis_dat_gt, "Xu 2020", c(2, 3), satis_n),
      .default = satis_n
    ),
    arm_n = case_when(
      study == "Xu 2020" & arm_id == 2 ~ collapse_dichot(satis_dat_gt, "Xu 2020", c(2, 3), arm_n),
      .default = arm_n
    )
  ) |>
  filter(!(study %in% c("Xu 2020") & arm_id == 3)) |>
  mutate(
    ref_arm_n = arm_n,
    ref_n = satis_n
  ) |>
  group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |>
  mutate(
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(satis_n, arm_n, ref_n, ref_arm_n, digits = 1), "—")
  )
  
satis_dat_gt |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    # surgs_noabbr_f = ifelse(row_number() > 1, "", as.character(surgs_noabbr_f)),
    # surgs_noabbr_f = ifelse(str_detect(surgs_noabbr_f, "Gast"), "GI/Abdominal", surgs_noabbr_f),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    .by = study
  ) |>
  group_by(surgs_noabbr_f) |>
  gt(id = "one") |>
  cols_hide(c(refid, year, arm_id, study, design_f_lab, satis_update_arm_n, satis_n, satis_per, notes_d, ref_arm_n, ref_n)) |>
  row_group_order(groups = c("Orthopedic", "Urologic",  "Neurosurgical", "Vascular", "Other")) |> 
  cols_label(
    study_l          = "Study",
    arm_n            = "N",
    arm              = "Anesth",
    asa_ps_incl      = "PS",
    age_table        = "Age",
    # surgs_noabbr_f   = "Surgery",
    n_percent        = "N (%)  ",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl), level = 1) |>
  fmt_markdown(columns = c(study_l, age_table, bar)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    arm ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(80),
    # surgs_noabbr_f   ~ px(100),
    n_percent ~ px(100),
    bar ~ px(100),
    rd_ci ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(asa_ps_incl, age_table, rd_ci))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_column_labels(columns = c(n_percent))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_footnote("Mean (SD).", locations = cells_column_labels(columns = c(age_table))) |>
  tab_footnote("Gen: general; Neur: neuraxial; Anesth: anesthetic; ASA PS: ASA Physical Status; RD: risk difference.") |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:n_percent), rows = str_detect(arm, "Neur|Block"))) |>
  tab_footnote("Satisfied.", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Carron|Harsten|Salonia|Apan|Nesek"))), placement = "right") |>
  tab_footnote("Not specified", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Xu"))), placement = "right") |>
  tab_footnote("Very satisfied", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Nishikawa"))), placement = "right") |>
  tab_footnote("Excellent/good", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Meuret"))), placement = "right") |>
  tab_footnote("Very good", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Ornek"))), placement = "right") |> 
  tab_footnote("Satisfaction with all aspects of anesthesia care", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Neuman"))), placement = "right") 
  

```

### *Pooled*

<caption_mg> `r figure_ref()` Risk ratio in patient satisfaction (general versus regional anesthesia; randomized clinical trials). </caption_mg>

```{r satis_rct_meta, fig.dim = c(14, 4.5), fig.align = "center"}
satis_meta_dat <- satis_dat_gt |> 
  select(refid, year, study, arm, satis_n, arm_n) |> 
  pivot_wider(names_from = "arm", values_from = satis_n:arm_n) |> 
  left_join(rob2_meta_dat, by = "refid") 

satis_meta <- metabin(satis_n_Neur, arm_n_Neur, satis_n_Gen, arm_n_Gen,
  data = satis_meta_dat,
  studlab = study,
  # cluster = refid,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
)

# summary(plac_meta)
forest(satis_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Regional     ",
  label.c = "General     ",
  rightcols = c("effect", "ci"),
  rightlabs = c("RR", "(95% CI)"),
  just.addcols.right = "right",
  colgap.right = "4mm",
  colgap.forest = "5mm",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 100,
  digits = 2, 
  print.pval.Q = FALSE,
  prediction = TRUE,
  xlim = c(0.8, 1.8),
  at = c(0.8, 1, 1.3, 1.8),
  xlab = "Favors: General                       Regional       ",
  addrows.below.overall = 4
)

```

## **Length of Stay**

<!-- UPDATED: length of stay 2023-11-08 -->

<caption_mg> `r table_ref()` Length of stay according to procedure classification and comparator. </caption_mg>

```{r length_of_stay}
#| eval: true
los_tab <- contin_dat |>
  mutate(los_for_tables(contin_dat)) |>
  filter(if_any(los_m:los_diff_pval, ~ !is.na(.))) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid" ) |> 
  mutate(
    refid_arm_id = paste0(refid, "-", arm_id),
    surg_groups = surgs_noabbr_f,
    mean_med = case_when(
      !is.na(los_m) ~ los_m,
      !is.na(los_med) ~ los_med
    ),
    calc_prop_20d = 100 * mean_med / 20,
    bar = case_when(
      str_detect(arm, "Neur|Block|Reg") ~ bar_prop(calc_prop_20d, "#A93226"),
      .default = bar_prop(calc_prop_20d, "#969696")
    )
  ) |>
  arrange(surg_groups, year, study, arm_id) |> 
  select(refid, refid_arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, los_table, bar, surg_groups, country)

los_tab |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         country = ifelse(row_number() > 1, "", country),
         surg_groups = fct_drop(surg_groups),
         .by = refid) |> 
  # tabyl(surg_groups) |> arrange(desc(percent)) |> pull(surg_groups) |> toString()
  group_by(surg_groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Orthopedic", "Various", "Gastrointestinal/Abdominal", "Head & Neck", "Other", "Spine")) |> 
  cols_hide(c(refid, refid_arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = " N",
    arm = "Anesth",
    asa_ps_incl = "PS",
    age_table = "    Age",
    los_table = "    LOS",
    bar = "0 – 20 days",
    country = "Country"
  ) |>
  fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(60),
    arm ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120),
    country ~ px(100)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, bar))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table, arm))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, arm))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(arm, "Neur|Block"))) |> 
  tab_footnote(md("Anesth: anesthetic; NR: not reported.")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl)))
  
```

### *Pooled*

<caption_mg> `r figure_ref()` Mean difference in lengths of stay (regional versus general anesthesia; randomized clinical trials). </caption_mg>

```{r los_meta, fig.width = 14, fig.height = 5.3, fig.align = "left"}
los_meta_dat <- contin_dat |>
  filter(refid %in% los_tab$refid) |>
  select(refid, study, arm_id, arm, arm_n, los_m, los_sd, los_med, los_rl, los_ru, los_iqrl, los_iqru, los_95l, los_95u) |> 
  mutate(
    arm = ifelse(arm == "Gen", "Gen", "Reg"),
    los_m = ifelse(study == "Xu 2020" & arm_id == 2, 4.15, los_m),
    arm_n = ifelse(study == "Xu 2020" & arm_id == 2, 160, arm_n),
    los_sd = ifelse(study == "Xu 2020" & arm_id == 2, 1.0, los_sd),
    los_m = ifelse(study == "Shin 2020" & arm_id == 1, 6.913, los_m), #combine_contin(60, 58, 6.83, 7.0, 3.038, 3.041) used impute_sd
    arm_n = ifelse(study == "Shin 2020" & arm_id == 1, 118, arm_n),
    los_sd = ifelse(study == "Shin 2020" & arm_id == 1, 3.028, los_sd),
    los_m = ifelse(study == "Shin 2020" & arm_id == 3, 7.667, los_m),
    # arm_n = ifelse(study == "Shin 2020" & arm_id == 3, 58, arm_n),
    los_sd = ifelse(study == "Shin 2020" & arm_id == 3, 4.561, los_sd),
    los_sd = ifelse(study == "Tzimas 2018", 0.3816847, los_sd), # sd_bwgrp_fun(8.25, 8.21, 37, 33, .663)
    ) |> 
  filter(!(study == "Xu 2020" & arm_id == 3)) |> 
  filter(!(study == "Shin 2020" & arm_id == 2)) |>
  rename_with(~ str_remove(.x, "los_")) |> 
  select(!matches("95")) |> 
  pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  group_by(study) |> 
  fill(arm_n_Gen:iqru_Reg) |> 
  slice(2) |> 
  ungroup() |> 
  arrange(year) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid")  

los_meta <- metacont(
  # cluster = study,
  n.e = arm_n_Reg, 
  n.c = arm_n_Gen,
  common =  TRUE,
  mean.e = m_Reg,
  sd.e = sd_Reg,
  median.e = med_Reg,
  q1.e = iqrl_Reg,
  q3.e = iqru_Reg,
  min.e = rl_Reg,
  max.e = ru_Reg,
  mean.c = m_Gen,
  sd.c = sd_Gen,
  median.c = med_Gen,
  q1.c = iqrl_Gen,
  q3.c = iqru_Gen,
  min.c = rl_Gen,
  max.c = ru_Gen,
  data = los_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  studlab = study
)

forest(los_meta,
  weight.study = "random",
  common =  FALSE,
  label.e = "Reg     ",
  label.c = "General   ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  # digits.pval.Q = 2,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "left",
  print.pval.Q = FALSE,
  # sortvar = -TE,
  xlim = c(-10, 10),
  # at = c(-80, -60, -40, -20, 0, 20, 40),
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("MD ", "(95% CI)   ", "Procedure"),
  xlab = "Favors: Reg                                      Inhaled           ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4,
)

```

<foot_mg> When the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, range, or between-arm, p-value. </foot_mg>

<br/>

## **Discharge Location**

<!-- UPDATED: discharge location 2023-11-08 -->

<caption_mg> `r table_ref()` Discharge location in studies comparing expanded with standard preoperative assessments. </caption_mg>

```{r dc_loc}
#| eval: true
dc_loc_dat <- dichot_dat |>
  filter(if_any(starts_with("disch_"), ~ !is.na(.x))) |>
  mutate(
    arm_n = ifelse(!is.na(disch_update_arm_n), disch_update_arm_n, arm_n),
    disch_nper = n_per_fun(disch_inst_n, arm_n, n_sig_dig = 1),
    disch_per = disch_inst_n/arm_n
  ) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  mutate(design_surg = paste0(design_f_lab, " — ", surgs_noabbr_f)) |>
  select(refid, refid, arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, design_surg, country, starts_with("disch_")) |>
  select(-c(disch_inst_per:disch_inst_95high)) |> 
  arrange(refid, arm_id) |> 
  group_by(study) |> 
  mutate(
    ref_disch_n = ifelse(arm_id > 1, first(disch_inst_n), NA),
    ref_arm_n = ifelse(arm_id > 1, first(arm_n), NA),
    rr_ci = ifelse(!is.na(ref_disch_n), rr_ci_fun(disch_inst_n, arm_n, ref_disch_n, ref_arm_n), NA)) |> 
  select(-starts_with("ref_")) 
```

```{r dc_loc_gt}
dc_loc_dat |> 
  group_by(study_l) |>
  arrange(study, arm_id) |> 
  mutate(
    study_l = ifelse(row_number() == 1, study_l, NA),
    country = ifelse(row_number() == 1, country, NA),
    bar = case_when(
      str_detect(arm, "Neur") ~ bar_prop(disch_per * 100, "#A93226"),
      .default = bar_prop(disch_per * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  select(refid, study_l, arm_n, arm, age_table, country, disch_nper, bar, rr_ci, everything()) |> 
  group_by(design_surg) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial — Orthopedic")) |>
  cols_hide(c(refid, arm_id, study, disch_update_arm_n, asa_ps_incl, disch_inst_n, disch_per)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Arm",
    age_table        = "   Age",
    country          = "Country",
    disch_nper       = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  tab_spanner(label = "Discharge to Institution", columns = c(disch_nper:bar), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  # fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(50),
    age_table        ~ px(90),
    country          ~ px(80),
    disch_nper       ~ px(80),
    bar              ~ px(120),
    rr_ci            ~ px(120)
    ) |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, age_table, arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(rr_ci, country))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n, disch_nper))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, age_table, arm, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rr_ci, country))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(disch_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, arm, age_table, disch_nper), rows = str_detect(arm, "Neur"))) |> 
  tab_footnote("Gen: general; Neur: neuraxial; RR: risk ratio.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table)))

```

## **Mortality**

<!-- UPDATED: mortality 2023-11-08 -->

```{r mortality_data}
#| eval: true
mortality_dat <- dichot_dat |>
  filter(if_any(starts_with("mort"), ~ !is.na(.x))) |> 
  # filter(arm_n != mort_update_arm_n) |> 
  # select(refid, arm_n, mort_update_arm_n)
  mutate(
    # arm_n use mort_update_arm_n if different
    arm_n = ifelse(!is.na(mort_update_arm_n), mort_update_arm_n, arm_n)
  ) |> 
  select(refid, refid_c, arm_id, arm, year, study, study_l, design_f_lab, arm_n, matches("_n|per") & starts_with("mort"), -mort_update_arm_n) |> 
  pivot_longer(
    cols = starts_with("mort"),
    names_to = "estimand",
    values_to = "estimate",
    values_drop_na = TRUE
  ) |>
  mutate(
    mort_period = str_remove(estimand, "_.*"),
    estimand = str_replace(estimand, ".*_(.*)$", "\\1")
  ) |>
  pivot_wider(
    names_from = estimand,
    values_from = estimate
  ) |>
  mutate(
    mort_period = case_when(
      str_detect(mort_period, "hosp") ~ "Hospital",
      str_detect(mort_period, "mort30") ~ "30-day",
      str_detect(mort_period, "mort90") ~ "90-day",
      str_detect(mort_period, "mort1") ~ "1-year"
    ), 
    per = per/100
  ) |>
  rename(mort_n = n, mort_per_rep = per) |>
  # # for Park 2020 and Dai 2021 reported both in-hospital and 30-day
  # mutate(
  #   refid_c = ifelse(study %in% c("Park 2020", "Dai 2021") & mort_period == "30-day", paste0(refid_c, "-30"), refid_c)
  # ) |> 
  arrange(refid_c, arm_id) |>
  mutate(
    ref_arm_n = arm_n,
    ref_mort_n = mort_n
  ) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() > 1, NA, ref_mort_n)
  ) |>
  fill(ref_arm_n, ref_mort_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() == 1, NA, ref_mort_n)
  ) |>
  ungroup() |> 
  left_join(study_char_dat |> select(refid, surgs_single_f), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(asa_combine |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |> 
  mutate(mort_percent = mort_n/arm_n,
         mort_period = factor(mort_period, levels = c("Hospital", "30-day", "90-day", "1-year"))) |>
  select(refid, refid_c, arm_id, year, study, study_l, arm_n, arm, asa_ps_incl, age_table, design_f_lab, mort_n, mort_percent, ref_mort_n, ref_arm_n, mort_period, mort_per_rep, surgs_single_f)

```

<caption_mg> `r table_ref()` Reported in-hospital, 30-day, and 1-year mortality from randomized clinical trials.</caption_mg>

```{r mortality_rct_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  group_by(mort_period, study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(mort_percent * 100, "#969696"),
      .default = bar_prop(mort_percent * 100, "#A93226")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    # study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    # surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "—"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  arrange(year, refid_c, arm_id) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day", "1-year")) |>
  cols_label(
    study_l = "Study",
    arm_n = "N  ",
    arm = "Arm",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, arm, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, arm, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n, mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, arm, age_table, mort_n_percent), rows = str_detect(arm, "Neur|Block"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(65),
    arm ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Various: more that one procedure category.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table)))  
  # tab_footnote("Different lengths of follow-up from the same trial.", locations = cells_body(columns = study_l, rows = study %in% c("Su 2016", "Zhang 2019b"))) 

```

### *Pooled*

```{r mortality_hosp_30d_meta}
#| eval: true
mortality_rct_meta_dat <- mortality_dat |>
  filter(mort_period %in% c("Hospital", "30-day")) |>
  # exclude Shin 2020 hospital; retain 30-day
  filter(!(study == "Shin 2020" & mort_period == "Hospital")) |> 
  filter(refid != 16596) |> # exclude Neuman 2016
  mutate(
    delitotal_n = case_when(
      study == "Shin 2020" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), mort_n),
      .default = mort_n
    ),
    arm_n = case_when(
      study == "Shin 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), arm_n),
      .default = arm_n
    ),
  ) |>
  filter(!(study %in% c("Shin 2020") & arm_id %in% c(2))) |> 
  select(refid, study, arm, mort_n, arm_n, mort_period) 

pairwise_rct_mort_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_rct_meta_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

```

<caption_mg> `r figure_ref()` **Risk ratio** for hospital or 30-day mortality (regional versus general; randomized clinical trials). </caption_mg>

```{r mort_rct_meta, fig.dim = c(14, 7.7), fig.align = "center"}
mort_meta_dat <- pairwise_rct_mort_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |>
  mutate(
    year = str_extract(study, "\\d{4}"),
    surg_hip_oth = ifelse(refid %in% ortho_hipfx_only_refid, "Hip fx", "Other"),
    surgs_single = ifelse(surg_hip_oth == "Hip fx", "Hip fx", surgs_single)
  ) |>
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid, surg_hip_oth, surgs_single) 

# total_meta(mort_meta_dat)
# refid_meta_fun(mort_meta_dat)

mort_rct_meta <- metabin(event2, n2, event1, n1,
  data = mort_meta_dat,
  studlab = study,
  subgroup = surg_hip_oth,
  # cluster = refid,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = FALSE,
)

# summary(plac_meta)
forest(mort_rct_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Regional",
  label.c = "General",
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("RR", "(95% CI)", "Procedure"),
  just.addcols.right = "left",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  prediction.subgroup = TRUE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  # pscale = 10000,
  digits = 2, 
  print.pval.Q = FALSE,
  # xlim = c(0.1, 20),
  xlab = "Favors: Regional                      General     ",
  addrows.below.overall = 4
)
```
<foot_mg> Hartung-Knapp adjustment not applied above. Overall random effects estimate with adjustment RR 0.68 (95% CI, 0.43–1.07) </foot_mg> 

<caption_mg> `r figure_ref()` **Risk difference** for hospital or 30-day mortality (regional versus general; randomized clinical trials). </caption_mg>

```{r mort_rct_rd_meta, fig.dim = c(14, 7.7), fig.align = "center"}
mort_rct_meta <- update(mort_rct_meta, sm = "RD", hakn = TRUE)
forest(mort_rct_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Regional",
  label.c = "General",
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("RD", "(95% CI)", "Procedure"),
  just.addcols.right = "left",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  prediction.subgroup = TRUE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-50, 50),
  xlab = "Favors: Regional                      General     ",
  addrows.below.overall = 4
)

```

```{r mortality_hosp_90d_meta}
#| eval: true
mortality_rct_meta_dat <- mortality_dat |>
  filter(mort_period %in% c("90-day")) |>
  mutate(
    delitotal_n = case_when(
      study == "Shin 2020" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), mort_n),
      .default = mort_n
    ),
    arm_n = case_when(
      study == "Shin 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), arm_n),
      .default = arm_n
    )
  ) |>
  filter(!(study %in% c("Shin 2020") & arm_id %in% c(2))) |> 
  select(refid, study, arm, mort_n, arm_n, mort_period) 

pairwise_rct_mort_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_rct_meta_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)
```

<caption_mg> `r figure_ref()` **Risk ratio** for 90-day mortality (regional versus general; randomized clinical trials). </caption_mg>

```{r mort_rct_90d_meta, fig.dim = c(14, 3.1), fig.align = "center"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
mort_meta_dat <- pairwise_rct_mort_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |>
  mutate(
    year = str_extract(study, "\\d{4}"),
    surg_hip_oth = ifelse(refid %in% ortho_hipfx_only_refid, "Hip fx", "Other"),
    surgs_single = ifelse(surg_hip_oth == "Hip fx", "Hip fx", surgs_single)
  ) |>
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid, surg_hip_oth, surgs_single) 

# total_meta(mort_meta_dat)
# refid_meta_fun(mort_meta_dat)

mort_rct_meta <- metabin(event2, n2, event1, n1,
  data = mort_meta_dat,
  studlab = study,
  # cluster = refid,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = FALSE,
)

# summary(plac_meta)
forest(mort_rct_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Regional",
  label.c = "General",
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("RR", "(95% CI)", "Procedure"),
  just.addcols.right = "left",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  # pscale = 10000,
  digits = 2, 
  print.pval.Q = FALSE,
  # xlim = c(0.1, 20),
  xlab = "Favors: Regional                      General     ",
  addrows.below.overall = 4
)

```

<caption_mg> `r figure_ref()` **Risk difference** for 90-day mortality (regional versus general; randomized clinical trials). </caption_mg>

```{r mort_rct_rd_90dmeta, fig.dim = c(14, 3.1), fig.align = "center"}
mort_rct_meta <- update(mort_rct_meta, sm = "RD")
forest(mort_rct_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Regional",
  label.c = "General",
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("RD", "(95% CI)", "Procedure"),
  just.addcols.right = "left",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-50, 50),
  xlab = "Favors: Regional                      General     ",
  addrows.below.overall = 4
)
```

## **Risk of Bias**

<caption_mg> `r figure_ref()` Summary risk of bias assessments for randomized clinical trials (unweighted). </caption_mg>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_dat |>
  filter(!is.na(Study) & refid %in% kq3_refid) |> 
  left_join(study_char_dat |> select(refid, n_analyze), by = "refid") |>
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind", weighted = FALSE)
```

<caption_mg> `r figure_ref()` Summary risk of bias assessments for randomized clinical trials (weighted by sample size). </caption_mg>

```{r rob2_summary_overall_weighted, fig.height = 3, out.width = "60%"}
rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind", weighted = TRUE, Weight = n_analyze)
```

<caption_mg> `r figure_ref()` Risk of bias assessments for randomized clinical trials. </caption_mg>

```{r rob_overall_study, out.width = "55%", fig.height = 10}
rob_traffic_light(rob_temp_dat |> select(-n_analyze), psize = 4, tool = "ROB2", colour = "colourblind")
```

## **References** {#references}
