---
title: "Neuraxial versus General Anesthesia"
editor: source
toc-title: "**Neuraxial versus General Anesthesia**"
toc-location: "left"
toc-depth: 4
toc-expand: 4
toc_float: 
  collapsed: false
tbl-cap-location: "top"
page-layout: full
knitr: 
  opts_chunk:
    fig.align: left
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq3.bib"
csl: "bib/anesthesiology.csl"
link-citations: false
nocite: '@*'
---

```{r read_data}
#| include: false
source("code/load_data.R")
settings.meta(CIbracket = "(")
conflicts_prefer(dplyr::lag)

# temporary exclude 18672 Neuman 2022 duplicate
kq3_refid <- kq3_refid[!kq3_refid %in% c(18672)]

# verify trials with blocks excluded
block_refid <- study_arm_dat |> 
  filter(!(study == "Bielka 2021" & arm_id == 3)) |> 
  filter(!is.na(kq3_reg_block)) |> 
  pull(refid)

# print warning to console in red to console number of rows is not 0
if (length(block_refid) != 0) {cat(crayon::red("STOP", "BLOCK STUDIES INCLUDED"))}

kq3_refid <- kq3_refid[!kq3_refid %in% c(813, 16596)] # retrospective cohort and Neuman 2016
kq3_refid <- kq3_refid[!kq3_refid %in% block_refid] # exclude blocks

study_char_dat <- data_kq(study_char_dat, kq3_refid)

# ortho only hip fx ortho_hipfx_only_refid
ortho_hipfx_only_refid <- ortho_proc |> 
  filter(ortho == "HipFx") |> 
  pull(refid)

## VARIABLE: kq3_anesth_neur, kq3_anesth_reg, kq3_anesth_gen, kq3_anesth_neur_type, kq3_anesth_gen_type — anesthetic and type, no specifics recorded for regional
study_arm_dat <- data_kq(study_arm_dat, kq3_refid) |>
  # exclude Bielka 2021 arm 3 (block)
  filter(!(study == "Bielka 2021" & arm_id == 3)) |> 
  # delete anesthetic variables not relevant (avoid potential confusion)
  select(-c(inhalation:anes_ns)) |>
  mutate(arm = arm_kq3_reg_gen) |>
  relocate(arm, .before = arm_kq3_reg_gen) |>
  mutate(
    kq3_anesth_neur = ifelse(if_any(c(kq3_reg_spinal, kq3_reg_epidural, kq3_reg_cse), ~ !is.na(.x)), "Neuraxial", NA),
    kq3_anesth_gen = ifelse(!is.na(kq3_gen_type), "General", NA),
    kq3_anesth_neur_type =
      case_when(
        !is.na(kq3_reg_spinal) ~ "Spinal",
        !is.na(kq3_reg_epidural) ~ "Epidural",
        !is.na(kq3_reg_cse) ~ "CSE"
      ),
    kq3_anesth_gen_type = kq3_gen_type,
    arm = factor(arm, levels = c("general", "regional"), labels = c("Gen", "Neur"))
  ) |>
  relocate(kq3_anesth_neur:kq3_anesth_gen_type, .before = kq3_gen_type)

contin_dat <- data_kq(contin_dat, kq3_refid) |>
  filter(!(study == "Bielka 2021" & arm_id == 3)) |> # exclude Bielka 2021 arm 3 (block)
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id)

dichot_dat <- data_kq(dichot_dat, kq3_refid) |>
  filter(!(study == "Bielka 2021" & arm_id == 3)) |> # exclude Bielka 2021 arm 3 (block)
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id) |>
  # if incidence proportion for delirium not reported use the max of days
  mutate(
    delirium_inc_prop = !is.na(delitotal_n),
    delirium_day_max = pmax(delirium_n1, delirium_n2, delirium_n3, delilast_n, na.rm = TRUE),
    delitotal_n = ifelse(is.na(delitotal_n), delirium_day_max, delitotal_n),
  ) |>
  relocate(delirium_day_max, .after = delitotal_n)

likert_dat <- data_kq(likert_dat, kq3_refid) |>
  filter(!(study == "Bielka 2021" & arm_id == 3)) |> # exclude Bielka 2021 arm 3 (block)
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id)

```

```{r delirium_refids_check}
#| eval = FALSE
# any of delirium_dichot_refid, delirium_contin_refid, delirium_likert_refid 
kq3_refid[kq3_refid %in% delirium_refid]
kq3_refid[kq3_refid %in% cogfunc_refid]
kq3_refid[!kq3_refid %in% c(delirium_refid, cogfunc_refid)]
```

## Updates
::: {.callout-important collapse="true"}
### 2024-03-11

| Date       | Modification                                                                                                                                                                    |
|:-----------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| 2023-11-08 | Updated to most current included studies. Removed risk of bias tallies from forest plots where not pertinent to outcome. Used weighted risk of bias summary for delirium and added for overall. Added risk differences per 1000 to complications and mortality. |
| 2023-11-09 | Added balance tables (same as in the balance tables tab).|
| 2024-01-02 | Added [Figure 5](kq3.html#bubble-plot) to display potential dependence of effects on baseline (control arm event rate) for delirium. Updated balance tables.|
| 2024-01-03 | Added link under included studies section to updated [appendix](summary_kq3.html) that now includes a [primary outcomes table](summary_kq3.html#primary-outcomes). |
| 2024-01-06 | Added [pooled risk difference](kq3.html#risk-diff) to delirium. Updated balance tables. |
| 2024-03-11 | Added 2 new publications (1 new trial); [O'Brien 2023](https://doi.org/10.1002/alz.13132) dementia subgroups from Neuman 2021 and [Sciberras 2022](https://doi.org/10.2217/pmt-2021-0081).| 
| 2024-03-15 | Studies enrolling and corresponding number of patients with dementia added to delirium analyses. |
| 2024-03-16 | Dementia subgroup delirium results added; [Figure 1](kq3.html#pooled) footnote. |
|            | Fixed coding error when collapsing arms for Shin 2020, that resulted in an incorrect denominator for the general anesthesia arm with delirium and mortality outcomes. Was correct for complications.|
|            | Changed Li 2020 to exclude patients with preoperative delirium. |
|            | Changed prediction method to use Hartung-Knapp adjustment with 5 or more trials.|
|            | Included additional detail pertaining to meta-analysis methods where appropriate.|
|            | Added mean delirium incidence rates to plot of baseline risk and risk difference (assist interpreting risk difference).|
|            | Deleted Zhang 2019a (assessment on day 1) from table of delayed neurocognitive recovery. |
|            | Added table for Neuman et al 2021 inability to walk at 60d without human assistance to physical function. |
|            | Added Sciberras 2022 to physical function table and pooled result. |


```{r}
#| tbl-cap: Overview of changes to primary outcomes following search update.
#| eval: true
#| html-table-processing: none
reg_gen_dat <- readxl::read_excel("data/balance_tables_2023-09-14_mac_mg.xlsx", sheet = "RegionalGeneral", range = "A4:P21") |> # [, c(2:4, 10, 12, 13, 15:18)] |>
  # remove_empty(which = "cols") |>
  clean_names() |>
  mutate(
    across(everything(), ~ replace(.x, is.na(.x), "")),
    estimate_95_percent_ci = ifelse(estimate_95_percent_ci == "see Appendix", "see Below", estimate_95_percent_ci)
  )

reg_gen_dat |>
  gt(id = "one") |>
  cols_hide(c(exclude, grade_2, rct, events_reg:n, updated)) |>
  cols_label(
    outcome = "Outcome",
    rct_new = "RCT",
    grade = "GRADE",
    measure = "Effect",
    estimate_95_percent_ci = "Est (CI)",
    rct_new = md("New<br/> RCT"),
    prior_est = md("  Old<br/> Est (CI)"),
    grade_change = "GRADE Δ"
  ) |>
  cols_width(
    outcome ~ px(215),
    rct_new ~ px(50),
    grade ~ px(95),
    measure ~ px(75),
    estimate_95_percent_ci ~ px(125),
    rct_new ~ px(55),
    prior_est ~ px(120),
    grade_change ~ px(105),
  ) |>
  gt_theme_mg() |>
  tab_style(style = cell_text(size = "12px"), locations = cells_body(columns = everything())) |> 
  tab_style(style = cell_text(size = "11px"), locations = cells_column_labels(columns = everything())) |> 
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rct, rct_new, prior_est, grade_change))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(rct, rct_new, prior_est, grade_change))) |>
  tab_style(style = list(cell_text(color = riskdiff_color)), locations = cells_body(columns = c(estimate_95_percent_ci , measure, prior_est), rows = str_detect(measure, "RD"))) |>
  tab_footnote("RCT: randomized controlled trial; GRADE: Grading of Recommendations Assessment, Development and Evaluation; Est: effect estimate; CI: confidence interval; RR: risk ratio; MD: mean difference; RD: risk difference.") |> 
  tab_footnote("Changed after additional review.", locations = cells_body(columns = c(grade_change), rows = grade_change == "Very low → Low")) |>
  tab_footnote("Corrected Shin 2020.", locations = cells_body(columns = c(estimate_95_percent_ci), rows = estimate_95_percent_ci %in% c(" 0.66 (0.28–1.50)", "-5.4 (-12.3 to 1.5)", " 0.75 (0.34–1.64)", "-3.6 (-16.6 to 9.5)", " 0.20 (0.02–1.71)", "-8.8 (-21.1 to 3.6)", "1.12 (0.57–2.20)", "-3.1 (-15.4 to 9.1)"))) |>
  tab_footnote("Fixed coding error when collapsing arms for Shin 2020, that resulting in an incorrect denominator for the general anesthesia arm. Changed Li 2020 to exclude patients with preoperative delirium.", locations = cells_body(columns = c(estimate_95_percent_ci), rows = outcome == "Delirium"))
  # tab_footnote("Corrected model fitting parameter.", locations = cells_body(columns = prior_est, rows = outcome == "Mortality (in-hospital and 30-day)")) 

```

```{r}
#| tbl-cap: Changes to adverse events following search update.
#| eval: true
#| html-table-processing: none
reg_gen_dat <- readxl::read_excel("data/balance_tables_2023-09-14_mac_mg.xlsx", sheet = "RegionalGeneral", range = "B33:P52") |>
  # remove_empty(which = "cols") |>
  clean_names() |>
  mutate(
    across(everything(), ~ replace(.x, is.na(.x), "")),
    estimate_95_percent_ci = ifelse(estimate_95_percent_ci == "see Appendix", "see Below", estimate_95_percent_ci)
    ) 

reg_gen_dat |>
  gt(id = "one") |>
  cols_hide(c(rct:n, grade_2, updated)) |> 
  cols_label(
    outcome = "Outcome",
    rct_new = "RCT",
    grade = "GRADE",
    measure = "Effect",
    estimate_95_percent_ci = "Est (CI)",
    rct_new = md("New<br/> RCT"),
    prior_est = md("  Old<br/> Est (CI)"),
    grade_change = "GRADE Δ"
  ) |>
  cols_width(
    outcome ~ px(215),
    rct_new ~ px(50),
    grade ~ px(95),
    measure ~ px(75),
    estimate_95_percent_ci ~ px(125),
    rct_new ~ px(55),
    prior_est ~ px(120),
    grade_change ~ px(105),
  ) |>
  gt_theme_mg() |>
  tab_style(style = cell_text(size = "12px"), locations = cells_body(columns = everything())) |> 
  tab_style(style = cell_text(size = "11px"), locations = cells_column_labels(columns = everything())) |> 
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rct, rct_new))) |>
  tab_style(style = list(cell_text(color = riskdiff_color)), locations = cells_body(columns = c(estimate_95_percent_ci, measure, prior_est), rows = str_detect(measure, "RD"))) |>
  tab_footnote("RCT: randomized controlled trial; NRSI: non-randomized study of intervention; GRADE: Grading of Recommendations Assessment, Development and Evaluation; Est: effect estimate; CI: confidence interval; RR: risk ratio; OR: odds ratio; RD: risk difference.") |> 
  tab_footnote("Change to random effects.", locations = cells_body(columns = c(estimate_95_percent_ci), rows = prior_est  %in% c("-11.8 (-28.5 to 4.5)", "-3.7 (-10.6 to 3.3)", "-3.7 (-9.2 to 1.8)"))) |> 
  tab_footnote("Corrected to use Hartung-Knapp adjustment.", locations = cells_body(columns = c(estimate_95_percent_ci), rows = prior_est  %in% c("-11.8 (-28.5 to 4.5)")))

```

:::

## Key Question

Among older patients undergoing surgery and anesthesia, does neuraxial anesthesia as the primary anesthetic approach improve postoperative outcomes compared with general anesthesia?

## Balance Tables

<font size = 4> Benefits, harms, and strength of evidence (GRADE) for neuraxial versus general anesthesia. </font>

```{r reg_gen_balance}
kq3_balance_main() |> 
  text_replace("see Appendix", "see below", locations = cells_body()) |> 
  tab_footnote(md("RCT: randomized clinical trial; GRADE: Grades of Recommendation, Assessment, Development, and Evaluation; RR: risk ratio; SMD: standardized mean difference; MD: mean difference; RD/1000: risk difference per 1000.")) 
```

<font size = 4> Included complications and strength of evidence (GRADE) for neuraxial versus general anesthesia. </font>

```{r reg_gen_complications}
kq3_complications()
```

## Outcome Importance

<caption_mg> `r table_ref()` Rankings of the 5 most important outcomes (11 respondents). </caption_mg>

```{r outcome_priority}
#| include: true
#| eval: true
outcome_dat <- rankings("KQ3") 
outcome_tab(outcome_dat, 11)
```

## Outcomes Reported

<caption_mg> `r table_ref()` Publications reporting dichotomous or count outcomes (not necessarily unique studies).. </caption_mg>

```{r dichot_outcome_freq}
dichot_freq_fun(dichot_dat, "ADL: activities of daily living; DNCR: delayed neurocognitive recovery; PND: postoperative neurocognitive disorder; QoR: quality of recovery; ") |>
  tab_footnote("Number of publications, not unique trials (see inlcuded studies below).", locations = cells_column_labels(columns = stat_1))
```

<caption_mg> `r table_ref()` Publications reporting continuous outcomes (not necessarily unique studies). </caption_mg>

```{r cont_outcome_freq}
contin_freq_fun(contin_dat) |>
  tab_footnote("Number of publications, not unique trials (see inlcuded studies below).", locations = cells_column_labels(columns = stat_1)) 
```

<caption_mg> `r table_ref()` Publications reporting likert or ordinal outcomes (not necessarily unique studies). </caption_mg>

```{r likert_outcome_freq}
likert_freq_fun(likert_dat, "ADL: activities of daily living; DNCR: delayed neurocognitive recovery; PND: postoperative neurocognitive disorder; QoR: quality of recovery; ") |>
  tab_footnote("Number of publications, not unique trials (see inlcuded studies below).", locations = cells_column_labels(columns = stat_1))
```

## **Included Studies**

See [Appendix](summary_kq3.html) for detailed summary study and patient characteristics including primary outcomes.

<caption_mg> `r table_ref()` Number of included trials. </caption_mg>

```{r studies_design}
study_char_dat |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  cols_width(
    design_f_lab ~ px(240),
    total ~ px(100)
  ) |> 
  gt_theme_mg() |> 
  tab_style(style = list(cell_fill(color = "#E4F3FE"), cell_text(weight = "bold"), cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))), locations = cells_body(rows = design_f_lab == "Total")) |> 
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(design_f_lab))) |>
  tab_style(style = list(cell_text(align = "left")), locations = cells_body(columns = design_f_lab)) |> 
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(total))) |>
  tab_style(style = list(cell_text(align = "center")), locations = cells_body(columns = total)) |>  
  tab_footnote("One trial with three publications counted once.")
```

### Design, centers, country, and surgery

<caption_mg> `r table_ref()` Enrollment, centers, country, and surgical procedures (see [References](#references) for citations). </caption_mg>

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |>
  select(refid, starts_with("design"), study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi) |>
  left_join(surgs |> select(refid, surgs), by = "refid") |> # filter(surgs == "Other") # tabyl(surgs) |> arrange(desc(n)) 
  mutate(
    surgs = factor(surgs, levels = c("Ortho", "Urol", "GI/Abdominal", "Neuro", "Gyn", "Gyn|Ortho|Urol|Vasc", "Spine", "Vasc", "Various", "Other"))
  ) |>
  arrange(design_f, surgs, study_l) |>
  select(refid, design_f, study_l, centers, n_enroll, country, surgs, non_vh_hdi, year)

included_dat |>
  mutate(surgs_new = fct_expand(surgs, "Hip fracture") %>%
    replace(surgs == "Ortho" & refid %in% ortho_hipfx_only_refid, "Hip fracture"),
    surgs = fct_infreq(surgs_new)) |> 
  select(-surgs_new) |> 
  arrange(surgs, country, year) |> 
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_hide(c(non_vh_hdi, design_f, year)) |>
    fmt_markdown(columns = c(study_l)) |> 
  cols_width(
    refid ~ px(60),
    study_l ~ px(185),
    centers ~ px(60),
    n_enroll ~ px(60),
    country ~ px(110),
    surgs ~ px(150)
  ) |> 
  # opt_horizontal_padding(scale = 2) |>
  sub_missing(columns = everything(), missing_text = " — ") |>
  gt_theme_mg() |>
  tab_style(style = "padding-left:20px;", locations = cells_body(columns = c(country))) |>
  tab_style(style = "padding-left:20px;", locations = cells_column_labels(columns = c(country))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c("refid"))) |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(surgs))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(surgs))) |>
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote(footnote = md("Described as various or more than 4 different types of surgery."), locations = cells_body(columns = surgs, surgs == "Various")) |>
  # tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
  #              locations = cells_column_labels(columns = country)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))) |>
  # tab_footnote(footnote = "Only hip fracture repair.",  locations = cells_body(columns = surgs, rows = refid %in% ortho_hipfx_only_refid)) |>
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Urol: urological; Neuro: neurological; Vasc: vascular; Various: described as various/mixed or more than 4 different tyeps of procedures.") |> 
  tab_footnote("Loco-regional antiblastic perfusion with circulatory block.", locations = cells_body(columns = surgs, rows = surgs == "Other"))

```

### Country Summary

<caption_mg> `r table_ref()` Summary of trials by country where conducted. </caption_mg>

```{r country}
study_char_dat |>
  mutate(linked_references = ifelse(is.na(linked_references), refid, linked_references)) |> 
  slice(1, .by = linked_references) |> # only primary trial publication
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
    cols_width(
    5 ~ px(240),
    6 ~ px(100)
  ) |> 
  gt_theme_mg()

```

## **Comparators**

<caption_mg> `r table_ref()` Selected characteristics of randomized clinical trials comparing neuraxial to general anesthesia. </caption_mg>

```{r reg_gen_tab}
reg_gen_tab <- study_arm_dat |>
  select(refid, refid_c, arm_id, study, study_l, year, arm_n, arm, asa_ps_incl, kq3_reg_spinal, kq3_reg_epidural, kq3_reg_cse, kq3_reg_block, kq3_reg_ns, kq3_reg_sedation, kq3_gen_type, kq3_gen_desflurane:kq3_gen_inhaleother, cog_imp_n, cog_imp) |>
  left_join(study_char_dat |> select(refid, surg_ortho_tka, surg_ortho_tha, surg_ortho_hipfx, surg_ortho_other, surg_list, surgs), by = "refid") |>
  left_join(ortho_proc |> select(refid, ortho), by = c("refid")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  mutate(
    # volatile_spec = if_any(kq3_gen_desflurane:kq3_gen_inhaleother, ~ !is.na(.x), "\U2713", NA), # verifies kq3_gen_type
    volatile = ifelse(kq3_gen_type %in% c("inhalation", "tiva_inhal"), "\U25CF", NA),
    tiva = ifelse(kq3_gen_type %in% c("tiva", "tiva_inhal"), "\U25CF", NA),
    notrep = ifelse(kq3_gen_type == "notrep", "\U25CF", NA),
    kq3_reg_block = notna_to_x(kq3_reg_block, "\U25CF"),
    across(c(kq3_reg_spinal, kq3_reg_epidural, kq3_reg_cse, kq3_reg_ns), ~ ifelse(!is.na(.x), "\U25CF", NA)),
    surgs = str_replace(paste(surgs, ortho), " NA", ""),
    surgs = str_replace(surgs, " Other", ""),
    surgs = str_replace(surgs, "Ortho ", "Ortho — "),
    surgs = str_replace(surgs, "\\s{1}$", ""),
    cog_imp_nper = n_per_fun(cog_imp_n, arm_n),
    cog_imp_nper = ifelse(str_detect(cog_imp_nper, "NA"), "", cog_imp_nper),
  ) |>
  rename_with(~ str_replace(.x, "kq3_", "")) |>
  select(refid, refid_c, arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, pre_mmse, cog_imp_nper, volatile, tiva, notrep, reg_spinal, reg_epidural, reg_cse, reg_ns, reg_block, surgs, year, ortho) |>
  arrange(surgs, year, study, refid_c, arm)

# add dementia subgroup data for Li 2022
# a <- tribble(
#   ~refid, ~refid_c, ~arm_id, ~study, ~study_l, ~arm_n, ~arm, ~asa_ps_incl, ~age_table, ~pre_mmse, ~volatile, ~tiva, ~notrep, ~reg_spinal, ~reg_epidural, ~reg_cse, ~reg_ns, ~reg_block, ~surgs, ~year, ~ortho,
#   7490, "7490-2", 1, "Li 2022 (dementia)", "[Li 2022](evidence_tables.html#7490)", 190, "Gen", 1234, NA, NA, "●", "●", NA, NA, NA, NA, NA, NA, "Ortho — HipFx", 2022, "HipFx",
#   7490, "7490-2", 2, "Li 2022 (dementia)", "[Li 2022](evidence_tables.html#7490)", 182, "Neur", 1234, NA, NA, "●", "●", NA, NA, NA, NA, NA, NA, "Ortho — HipFx", 2022, "HipFx",
#   7490, "7490-1", 1, "Li 2022 (no dementia)", "[Li 2022](evidence_tables.html#7490)", 281, "Gen", 1234, NA, NA, "●", "●", NA, NA, NA, NA, NA, NA, "Ortho — HipFx", 2022, "HipFx",
#   7490, "7490-1", 2, "Li 2022 (no dementia)", "[Li 2022](evidence_tables.html#7490)", 289, "Neur", 1234, NA, NA, "●", "●", NA, NA, NA, NA, NA, NA, "Ortho — HipFx", 2022, "HipFx"
# )
# 
# reg_gen_tab <- rbind(reg_gen_tab, a) 

```

```{r reg_gen_gt}
reg_gen_tab |>
  # filter(refid_c %notin% c("7490-1", "7490-2", "18678-1", "18678-2")) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l), 
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    .by = study) |>
  mutate(
    surgs = ifelse(surgs == "Various TKA|THA|Other", "Various", surgs),
    study_l = ifelse(study_l == "", NA, study_l),
  ) |>
  group_by(surgs) |>
  gt(id = "one") |>
  row_group_order(groups = c("Ortho — HipFx", "Ortho — HipFx|Other", "Ortho — TKA|THA|HipFx|Other", "Ortho — TKA", "Ortho — THA", "Ortho", "Urol", "GI/Abdominal", "Neuro", "Gyn", "Gyn|Ortho|Urol|Vasc", "Spine", "Vasc", "Various", "Other")) |>
  cols_hide(c(refid, refid_c, arm_id, study, year, ortho, reg_ns, reg_block)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Arm",
    asa_ps_incl      = "PS",
    age_table        = "    Age",
    pre_mmse         = "MMSE",
    cog_imp_nper     = md("Dementia<br/>N (%)"),
    volatile         = "Vol",
    tiva             = "TIVA",
    notrep           = "NR",
    reg_spinal       = "Spinal",
    reg_epidural     = "Epid",
    reg_cse          = "CSE",
    # reg_ns           = "NR",
    # reg_block        = "Block"
  ) |>
  tab_spanner(label = "General", columns = c(volatile:notrep), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl), level = 1) |>
  tab_spanner(label = "Neuraxial", columns = c(reg_spinal:reg_cse), level = 1) |>
  # tab_spanner(label = "Regional", columns = c(reg_spinal:reg_block), level = 2) |>
  fmt_markdown(columns = c(study_l, age_table, pre_mmse)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(175),
    arm_n ~ px(45),
    arm ~ px(55),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    pre_mmse ~ px(80),
    cog_imp_nper ~ px(80),
    volatile ~ px(40),
    tiva ~ px(40),
    notrep ~ px(40),
    reg_spinal ~ px(45),
    reg_epidural ~ px(40),
    reg_cse ~ px(40),
    reg_ns ~ px(40),
    # reg_block ~ px(45)
  ) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(asa_ps_incl, cog_imp_nper))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(arm))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(volatile:reg_cse, cog_imp_nper))) |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:reg_block), rows = str_detect(arm, "Neur"))) |>
  # tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(arm_n:reg_block), rows = str_detect(arm, "Block"))) |>
  tab_footnote(md("Gen: general; Neur: neuraxial; PS: physical stutus; Vol: volatile; TIVA: total intravenous anesthesia; NR: not reported; Epid: epidural; CSE: combined spinal and epidural; Ortho: orthopedic; Urol: urological; GI: gastrointestinal; Neuro: neurologic; Gyn: gynecologic; Vasc: vascular; Ophtho: opthalomogic; Fx: fracture; TKA: total knee arthroplasty; THA: total hip arthroplasty.")) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote("Not included in pooled results owing to size.", locations = cells_body(columns = study_l, rows = str_detect(study_l, "Neuman 2016"))) |> 
  tab_footnote("Diazepam.", locations = cells_body(columns = arm, rows = study == "Salonia 2006" & arm_id == 2)) |> 
  tab_footnote("Propofol.", locations = cells_body(columns = arm, rows = study == "Salonia 2006" & arm_id == 3)) |> 
  tab_footnote("Midazolam.", locations = cells_body(columns = arm, rows = study == "Salonia 2006" & arm_id == 4)) |> 
  tab_footnote("Ropivacaine.", locations = cells_body(columns = arm, rows = study == "Sellbrant 2021" & arm_id == 2)) |> 
  tab_footnote("Mepivacaine.", locations = cells_body(columns = arm, rows = study == "Sellbrant 2021" & arm_id == 3)) |> 
  tab_footnote("Analysis of Neuman 2021.", locations = cells_body(columns = study_l, rows = str_detect(study_l, "Neuman 2022"))) |> 
  tab_footnote("Analysis of Neuman 2021.", locations = cells_body(columns = study_l, rows = str_detect(study_l, "dementia"))) |> 
  tab_footnote("Blank if no information provided.", locations = cells_column_labels(columns = cog_imp_nper))
  
```

## **Delirium Incidence**

```{r delirium_meta_data}
#| eval: true
# compared and reconciled reported and calculated % # mutate(calc_per = delitotal_n / arm_n * 100, per_diff = calc_per - delitotal_perc) |> filter(per_diff > 0.5)
delirium_meta_dat <- dichot_dat |>
  mutate(
    arm_n = ifelse(!is.na(deli_update_arm_n), deli_update_arm_n, arm_n),
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
  ) |> 
  filter(!is.na(delitotal_n)) |> # 
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  rename(surg_f = surgs_single_f) |> 
  # add hipfx only surg
  mutate(
    surg_f = fct_recode(surg_f, "Hip Fx" = "Ortho"),
    surg_hip_oth = ifelse(refid %in% ortho_hipfx_only_refid, "Hip Fx", "Other"),
    surg_hip_oth = factor(surg_hip_oth, levels = c("Hip Fx", "Other"), labels = c("Hip Fx", "Other"))
  ) |> 
  select(refid, refid_c, study, study_l, arm_id, arm, year, design_f_lab, country, surg_f, surg_hip_oth, delitotal_n, arm_n, delirium_inc_prop, delitotal_time:delitotal_95high, deli_scale_cam:deli_scale_otherspec) 

# collapse arms delirium Shin 2020 tiva and volatile
delirium_meta_dat <- delirium_meta_dat |>
  mutate(
    delitotal_n = case_when(
      study == "Shin 2020" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), delitotal_n),
      .default = delitotal_n
    ),
    arm_n = case_when(
      study == "Shin 2020" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), arm_n),
      .default = arm_n
    ),
    delitotal_perc = ifelse(study == "Shin 2020" & arm_id == 1, delitotal_n / arm_n * 100, delitotal_perc), 
  ) |>
  filter(!(study %in% c("Shin 2020") & arm_id %in% c(2))) |> 
  arrange(refid_c, arm_id) 
  
# delirium_meta_dat |> select(refid) |> distinct() # 2023-12-01 n = 12

# add dementia subgroup data (2024-03-13 only includes Li 2022)
delirium_meta_dat <- rbind(delirium_meta_dat, readxl::read_xlsx("data/dementia_subgroup.xlsx"))

```

```{r reg_gen_delirium_tab}
# referent values for calculating rr and ci; rr_ci
delirium_rr_ref <- delirium_meta_dat |>
  select(refid, refid_c, arm_id, delitotal_n, arm_n) |>
  filter(!is.na(delitotal_n)) |>
  arrange(refid_c, arm_id) |>
  rename(ref_deli_n = delitotal_n, ref_arm_n = arm_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() > 1, NA, ref_deli_n),
    .by = refid_c
  ) |>
  fill(ref_arm_n, ref_deli_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() == 1, NA, ref_deli_n),
    .by = refid_c
  ) 

# to add proportion with dementia
cog_imp_dat <- reg_gen_tab |> 
  select(refid_c, arm_id, cog_imp_nper)

reg_gen_delirium_tab <- delirium_meta_dat |>
  mutate(
    across(starts_with("deli_"), ~ str_remove_all(.x, "scale_")),
    across(starts_with("deli_"), ~ str_remove_all(.x, "deli_")),
    across(deli_scale_cam:deli_scale_icdsc, ~ toupper(.x)),
  ) |>
  rename_with(~ gsub("scale_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("deli_", "", .x, fixed = TRUE)) |>
  left_join(delirium_rr_ref |> select(-refid), by = c("refid_c", "arm_id")) |>
  mutate(
    # other = ifelse(str_detect(otherspec, "AMT"), "AMT", other),
    # other = ifelse(str_detect(otherspec, "Psychiatrist consultation"), "Psych", other),
    # other = ifelse(str_detect(otherspec, "Chinese"), "Note", other),
    # other = ifelse(other == "other", NA_character_, other),
    calc_percent = delitotal_n / arm_n * 100,
    n_percent = n_per_fun(delitotal_n, arm_n, 1),
    rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(delitotal_n, arm_n, ref_deli_n, ref_arm_n), "—")
  ) |>
  relocate(calc_percent, .after = delitotal_perc) |>
  unite(scale_delirium, cam:other, remove = TRUE, sep = "/", na.rm = TRUE) |>
  mutate(
    scale_delirium = ifelse(scale_delirium == "unspec", "NR", scale_delirium),
    scale_delirium = ifelse(scale_delirium == "DELIRIUM INDEX (DI)", "DI", scale_delirium)
  ) |>
  select(year, refid, refid_c, design_f_lab, study, study_l, arm_id, delitotal_n, arm_n, arm, scale_delirium, delitotal_time, n_percent, calc_percent, rr_ci, surg_f, surg_hip_oth) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  relocate(pre_mmse, .before = scale_delirium) |>
  relocate(age_table, .after = arm_n) |> 
  # delete mmse from Li 2022 subgroups
  mutate(
    pre_mmse = ifelse(study %in% c("Li 2022 (dementia)", "Li 2022 (no dementia)"), "", pre_mmse)
  ) |> 
  left_join(cog_imp_dat, by = c("refid_c", "arm_id")) |> 
  mutate(
    cog_imp_nper = ifelse(str_detect(study, "\\(dementia\\)"), paste(delitotal_n, "(100)"), cog_imp_nper),
    cog_imp_nper = ifelse(str_detect(study, "\\(no dementia\\)"), "  0 (0)", cog_imp_nper),
    cog_imp_nper = ifelse(study == "Shin 2020" & arm_id == 1, "22 (18.6)", cog_imp_nper)
    ) |> 
  relocate(cog_imp_nper, .after = pre_mmse)

# update for delirium now as correct "  0 (0)" to select for meta-analysis (note better fixed in data to avoid this fix)
cog_imp_delirium_dat <- reg_gen_delirium_tab |> 
  select(refid_c, arm_id, cog_imp_nper)

```

<caption_mg> `r table_ref()` Delirium incidence and ascertainment during hospitalization in randomized clinical trials comparing neuraxial to general anesthesia. </caption_mg>

```{r reg_gen_delirium_gt}
reg_gen_delirium_tab |>
    arrange(year, study, arm) |>
    mutate(
      delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
      delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time),
      study_l = ifelse(row_number() > 1, "", study_l),
      delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
      scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
      bar = case_when(
        str_detect(study, "\\(dementia\\)") & str_detect(arm, "Neur") ~ bar_prop(calc_percent, color_4),
        str_detect(study, "\\(dementia\\)") & str_detect(arm, "Gen") ~ bar_prop(calc_percent, color_3),
        str_detect(arm, "Neur") ~ bar_prop(calc_percent, color_2),
        .default = bar_prop(calc_percent, "#969696")),
      .by = refid_c
    ) |>
    group_by(surg_f) |>
    gt(id = "one") |>
    row_group_order(groups = c("Hip Fx", "GI/Abd", "Spine", "Various")) |>
    cols_hide(c(year, refid, refid_c, arm_id, study, design_f_lab, age_table, calc_percent, surg_hip_oth, delitotal_n)) |>
    cols_label(
      study_l = "Study",
      arm_n = " N",
      # age_table = "  Age",
      arm = md("Arm"),
      pre_mmse = md("  MMSE<br/>(preop)"),
      cog_imp_nper = md("Dementia<br/>N (%)"),
      scale_delirium = "Scale",
      delitotal_time = "Day(s)",
      n_percent = "N (%)",
      bar = "0 – 100%",
      rr_ci = "RR (95% CI)"
    ) |>
    fmt_markdown(columns = c(study_l, pre_mmse, bar)) |>
    tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, arm, scale_delirium))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, delitotal_time, n_percent, rr_ci, cog_imp_nper))) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(arm, scale_delirium, bar))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, rr_ci, cog_imp_nper))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(n_percent))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(n_percent))) |>
    tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:n_percent), rows = str_detect(arm, "Neur"))) |>
    tab_style(style = list(cell_text(color = color_4)), locations = cells_body(columns = c(n_percent), rows = str_detect(arm, "Neur") & str_detect(study, "\\(dementia\\)"))) |>
    sub_missing(columns = delitotal_time, missing_text = "Note") |>
    gt_theme_mg() |>
    cols_width(
      study_l ~ px(175),
      arm_n ~ px(45),
      # age_table ~ px(100),
      arm ~ px(80),
      pre_mmse ~ px(95),
      cog_imp_nper ~ px(80),
      scale_delirium ~ px(105),
      delitotal_time ~ px(55),
      n_percent ~ px(90),
      bar ~ px(100),
      rr_ci ~ px(140)
    ) |> 
  tab_footnote("Gen: general anesthesia; Neur: neuraxial; RR: risk ratio; MMSE: Mini-Mental State Examination; CAM: Confusion Assessment Method; DRS: Delirium Rating Scale; DSM: Diagnostic and Statistical Manual of Mental Disorders; NR: not reported.") |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Day(s) over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |>
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
  tab_footnote("Included patients with dementia (O'Brien 2023 report of Neuman 2021; 16.5% of patients in Shin 2020 had dementia, but subgroup results were unreported).",  locations = cells_body(columns = study_l, rows = study %in% c("Shin 2020", "Li 2022", "Neuman 2021") & study_l != ""), placement = "right") |> 
  tab_footnote("Adjusted for sex, fracture type and country.",  locations = cells_body(columns = rr_ci, str_detect(rr_ci, "1.04 \\(0.84-1.30\\)"))) |> 
  tab_footnote("Odds ratio adjusted for sex, fracture type and country 1.01 (95% CI, 0.69–1.50).",  locations = cells_body(columns = rr_ci, str_detect(rr_ci, "1.01 \\(0.72-1.40\\)"))) |> 
  tab_footnote("Odds ratio adjusted for sex, fracture type and country 1.08 (95% CI, 0.72–1.62).",  locations = cells_body(columns = rr_ci, str_detect(rr_ci, "1.04 \\(0.79-1.38\\)"))) |> 
  tab_footnote("Blank if no information provided.", locations = cells_column_labels(columns = cog_imp_nper))

```

```{r delirium_meta}
no_cogimpair_refid_c <- cog_imp_delirium_dat |> filter(cog_imp_nper == "  0 (0)") |> select(refid_c) |> distinct() |> arrange(refid_c) |> pull(refid_c)

delirium_meta_dat <- delirium_meta_dat |> 
  arrange(year, study, arm) 

pairwise_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = delirium_meta_dat, 
  sm = "RR") |> 
  select(refid_c, studlab:country, surg_hip_oth) 

del_meta_dat <- pairwise_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid_c, study, year, event2, n2, event1, n1, D1:Overall, surg_hip_oth) |>
  mutate(
    sample_size = n1 + n2,
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  )

gen_reg_delirium_meta <- metabin(event2, n2, event1, n1,
  data = del_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "HK",
  method.predict = "HK",
  prediction = TRUE,
  allstudies = FALSE,
  # subset = surg_hip_oth == "Hip Fx"
  subset = !str_detect(study, "dementia"),
  subgroup = surg_hip_oth
)

# gen_reg_delirium_meta_dementia <- update(gen_reg_delirium_meta, random = FALSE, subset = str_detect(study, "\\(dementia\\)"))
# gen_reg_delirium_meta_nodementia <- update(gen_reg_delirium_meta, method.random.ci = "HK", method.predict = "HK", subset = refid_c %in% no_cogimpair_refid_c)
# soe_meta_result_rr_or(gen_reg_delirium_meta_dementia, effect = "RR", digits = 2) |> str_remove("; PI  NA– NA\\)")
# soe_meta_result_rr_or(gen_reg_delirium_meta_nodementia, effect = "RR", digits = 2)
# summary(gen_reg_delirium_meta_nodementia)
# summary(gen_reg_delirium_meta_dementia)
# summary(gen_reg_delirium_meta)

gen_reg_delirium_meta_hip <- update(gen_reg_delirium_meta, subgroup = NULL, subset = (surg_hip_oth == "Hip Fx" & !str_detect(study, "dementia")))
gen_reg_delirium_meta_nohip <- update(gen_reg_delirium_meta, method.random.ci = "classic", subgroup = NULL, subset = (surg_hip_oth != "Hip Fx" & !str_detect(study, "dementia")))
gen_reg_delirium_baseline_meta <- metaprop(event1, n1, data = del_meta_dat, studlab = study, method = "Inverse", random = FALSE, prediction = TRUE, allstudies = TRUE, subset = !str_detect(study, "dementia"), subgroup = surg_hip_oth)

# no subgroup
gen_reg_delirium_meta_nosub <- update(gen_reg_delirium_meta, subgroup = NULL)

# risk difference
gen_reg_delirium_meta_rd <- update(gen_reg_delirium_meta, sm = "RD")

# small study effects; here to have result of Harbord test
temp_meta <- update(gen_reg_delirium_meta, subgroup = NULL, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# cumulative meta
gen_reg_delirium_cummeta <- metacum(gen_reg_delirium_meta, pooled = "random", sortvar = n.e + n.c)

```

<a id="figs_1-6"></a>

### *Pooled*

<caption_mg> `r figure_ref()` Delirium incidence for neuraxial versus general anesthesia. </caption_mg>

```{r delirium_meta_forest}
#| echo: false
#| include: false
png("assets/kq3_delirium_meta_forest.png", width = 9.95, height = 5.8, units = "in", res = 300)
forest(gen_reg_delirium_meta,
  allstudies = FALSE,
  common = TRUE,
  label.e = "Neuraxial",
  label.c = "General",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  subgroup = FALSE,
  prediction.subgroup = TRUE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 10),
  xlab = "Favors: Neuraxial                                 General            ",
  addrows.below.overall = 4,
  fs.test.subgroup = 10,
  fs.hetstat = 10,
  text.addline1 = "Hip fracture: 1.08 (95% CI, 0.87–1.35; prediction interval 0.86–1.37)",
  text.addline2 = "Other: 0.74 (95% CI, 0.35–1.57; prediction interval 0.04–13.53)"
)
dev.off()
```

![](assets/kq3_delirium_meta_forest.png){#fig-delirium-main fig.align="left" width="71%"}

<foot_mg>RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> 
Risk of bias ratings: low +, some concerns ?, high -- . <br/> 
Random effects pooled estimate weights — Neuman 2021 (63.6%), Brown 2021 (11.9%), Li 2022 (9.4%), and Shin 2020 (5.1%).<br/> 
`r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> 
`r paste0("Delirium was designated a primary or secondary outcome in ", prim_sec_out_fun(prim_delirium, delirium_meta_dat$refid), " and ", prim_sec_out_fun(sec_delirium, delirium_meta_dat$refid), " of trials, respectively.")`<br/>
In subgroups from O'Brien 2023 (Neuman 2021) and Li 2022 of patients with dementia RR 1.08 (95% CI, 0.83–1.39; common effects model).<br/>
In 8 studies including or reporting results for patients without dementia RR 1.03 (95% CI, 0.67–1.57; prediction interval 0.54–1.97).
</foot_mg>  

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### Meta-analysis methods detail.

```{r}
#| include: false  
temp <- print(gen_reg_delirium_meta) |> 
  str_replace_all("\\n", "<br/> ") |>
  str_remove("<br/> Details on meta-analytical method:<br/> ") |> 
  str_replace_all("tau\\^2", "tau<sup>2</sup>") |> 
  str_replace_all("tau", "&tau;")
```

<foot_mg> `r temp` </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Neuraxial versus general anesthesia (risk difference per 100). </caption_mg> <a id="risk-diff"></a>

```{r delirium_meta_forest_rd}
#| echo: false
#| include: false
png("assets/kq3_delirium_meta_forest_rd.png", width = 9.82, height = 7.05, units = "in", res = 300)
forest(gen_reg_delirium_meta_rd,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Neuraxial",
  label.c = "General",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RD", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 1,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  # sortvar = year,
  prediction = TRUE,
  subgroup = TRUE,
  prediction.subgroup = TRUE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(-20, 20),
  pscal = 100,
  xlab = "Favors: Neuraxial                          General",
  # label.right = "General",
  # label.left = "Favors: Neuraxial",
  addrows.below.overall = 4,
  fs.test.subgroup = 10,
  fs.hetstat = 10
)
dev.off()
```
![](assets/kq3_delirium_meta_forest_rd.png){fig.align="left" width="75%"}

<foot_mg> Pooled incidence of postoperative delirium with general anesthesia (common effects models): <br/> 
Overall 14.7 per 100 (95% CI, 13.0 to 16.6)<br/> 
Hip fracture 15.1 per 100 (95% CI, 13.1 to 17.4)<br/> 
Other 13.3 per 100 (95% CI, 10.5 to 17.3) </foot_mg> 

:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Neuraxial versus general anesthesia cumulative meta-analysis by study size. </caption_mg>

```{r delirium_meta_forest_cum}
#| warning: true
#| echo: false
#| include: false

png("assets/kq3_delirium_cummeta.png", width = 8.17, height = 3.2, units = "in", res = 300, pointsize = 10)
forest(gen_reg_delirium_cummeta,
  # common = TRUE,
  label.e = "Neuraxial",
  label.c = "General",
  rightcols = c("effect", "ci", "pval", "tau2", "I2"),
  rightlabs = c("RR", "(95% CI)  ", "P  ", "\U03C4 ²", "I²"),
  # just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 2,
  digits.tau = 2,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  colgap.right = "5mm",
  colgap.forest.left = "5mm",
  colgap.forest.right = "5mm",
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.2, 4),
  xlab = "Favors: Neuraxial                          General",
  addrows.below.overall = 4
)
dev.off()
```

![](assets/kq3_delirium_cummeta.png){fig.align="left" width="63%"}
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Neuraxial versus general anesthesia small study effects. </caption_mg>

```{r delirium_funnel_limit} #, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
#| echo: false
#| include: false

temp_limit_meta <- limitmeta(temp_meta)

png("assets/kq3_delirium_funnel_limit.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(mar = c(4, 4, 2, 1))
limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")
# text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
par(bty = "n", xaxt = "s", yaxt = "s")
funnel(temp_limit_meta,  pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")
legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
dev.off()

```

![](assets/kq3_delirium_funnel_limit.png){width="75%"}

<foot_mg> Estimates (odds ratios and 95% CIs) from random effects models. Limit meta-analysis shown in light grey --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` General anesthesia event rate (control arm/baseline risk) and risk ratios. </caption_mg> <a id="bubble-plot"></a>
```{r bubble_plot_delirium}
#| echo: false
#| include: false

hipfx_study <- study_char_dat |> 
  select(refid, study) |> 
  filter(refid %in% ortho_hipfx_only_refid) |> 
  pull(study)

temp <- bubble_plot_data(gen_reg_delirium_meta) |> 
  mutate(slab = ifelse(slab %in% hipfx_study, paste0(slab, "*"), slab))

fitted_meta <- metafor::rma(yi = yi_meta, sei = sei_meta, mods = ~ control_event_rate, slab = slab, data = temp)

png("assets/kq3_delirium_meta_bubble.png", width = 8, height = 6, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
metafor::regplot(fitted_meta,
  xlab = "General anesthesia event rate (baseline risk)",
  ylab = "RR (risk ratio)", 
  xlim = c(-0.015, 0.3),
  at = log(c(0.2, 0.4, 0.7, 0.97, 2, 4, 8)),
  predlim = c(0, 0.30),
  atransf = exp,
  labsize = 0.7, 
  las = 1,
  label = TRUE,
  offset = c(0.4),
  lwd = 0.5,
)

abline(log(0.97), 0, col = "red", lty = 2, lwd = 0.75)
dev.off()

rm(hipfx_study, temp, fitted_meta)

```

![](assets/kq3_delirium_meta_bubble.png){width="75%"}

<foot_mg> No suggestion for RR dependence on baseline risk. Asterisks indicate trials limited to hip fracture repair. <br/> 
The overall pooled incidence of postoperative delirium (common effect model) with general anesthesia was 14.7 per 100 (95% CI, 13.0 to 16.6), following hip fracture was 15.1 per 100 (95% CI, 13.1 to 17.4), and for other surgical procedures 13.3 per 100 (95% CI, 10.5 to 17.3).</foot_mg> 

:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Summary risk of bias from randomized clinical trials reporting delirium (weighted). </caption_mg>

```{r rob2_summary_delirium, fig.height = 3, out.width = "60%"}
rob_summary_meta_weighted_subset_fun(gen_reg_delirium_meta)
# rob_summary_fun(delirium_meta_dat$refid)
```
:::

## **Neurocognitive Disorder<br/> <30 days**

```{r dncr_ncd_dat}
#| eval: true
dncr_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x <= 30)) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    neurocog_n1 = ifelse(neurocog_time1 > 30, NA, neurocog_n1),
    neurocog_n2 = ifelse(neurocog_time2 > 30, NA, neurocog_n2),
    neurocog_n3 = ifelse(neurocog_time3 > 30, NA, neurocog_n3),
    neurocog_last_n = ifelse(neurocog_last_time > 30, NA, neurocog_last_n),
    neurocog_total_n = ifelse(neurocog_total_time > 30, NA, neurocog_total_n),
    neurocog_time1 = ifelse(neurocog_time1 > 30, NA, neurocog_time1),
    neurocog_time2 = ifelse(neurocog_time2 > 30, NA, neurocog_time2),
    neurocog_time3 = ifelse(neurocog_time3 > 30, NA, neurocog_time3),
    neurocog_last_time = ifelse(neurocog_last_time > 30, NA, neurocog_last_time),
    neurocog_total_time = ifelse(neurocog_total_time > 30, NA, neurocog_total_time),
    dncr_time = pmax(neurocog_time1, neurocog_time2, neurocog_time3, neurocog_last_time, neurocog_total_time, na.rm = TRUE),
    neurocog_total_n = case_when(
      neurocog_time1 == dncr_time ~ neurocog_n1,
      neurocog_time2 == dncr_time ~ neurocog_n2,
      neurocog_time3 == dncr_time ~ neurocog_n3,
      neurocog_last_time == dncr_time ~ neurocog_last_n,
      neurocog_total_time == dncr_time ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n/arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  left_join(study_char_dat |> select(refid, country, neuro_threshold), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |> 
  rename(surg_f = surgs_single_f) |>
  arrange(refid, arm_id) |>
  mutate(
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(neurocog_prop * 100, "#969696"),
      str_detect(arm, "Neur|Block") ~ bar_prop(neurocog_prop * 100, color_2),
      .default = bar_prop(neurocog_prop * 100, color_1)),
    year = as.numeric(str_extract(study, "\\d{4}")),
    # arm_reg = fct_collapse(arm, "Reg" = c("Neur", "Block")),
    arm_reg = arm,
    across(c(design_f_lab, surg_f), ~ fct_drop(.x)),
    scale_mmse = ifelse(!is.na(neurocog_scale_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_scale_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |>
  select(refid, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, arm, arm_reg, pre_mmse, dncr_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf, neuro_threshold)

## add referents for rr calculation ------------------- (2023-06-02 06:30) @----
dncr_rr_ref <- dncr_dat |>
  select(refid, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  ) 

neurocog_meta_dat <- dncr_dat |>
  filter(dncr_time >= 3) |> 
  select(refid, study, design_f_lab, year, arm_id, arm_reg, neurocog_total_n, arm_n) 

dncr_dat <- dncr_dat |>
  left_join(dncr_rr_ref, by = c("refid", "arm_id")) |>
  left_join(reg_gen_tab |> select(refid, cog_imp_nper, arm_id), by = c("refid", "arm_id")) |>
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |>
  select(refid, year, study, study_l, arm_id, arm_n, arm_reg, cog_imp_nper, pre_mmse, scale_mmse:scale_other_tf,  neuro_threshold, dncr_time, neurocog_nper, bar, rr_ci)

rm(dncr_rr_ref)
```

<caption_mg> `r table_ref()` Neurocognitive disorder <30 days incidence and ascertainment. </caption_mg>

```{r dncr_gt}
#| eval: true

# create footnotes for thresholds
# dncr_dat |>
#   select(refid, study, scale_mmse, scale_dst, scale_moca, neuro_threshold) |>
#   slice(1, .by = refid) |>
#   mutate(
#     neuro_threshold = str_replace(neuro_threshold, "≤-", "≥"),
#     footnotes = case_when(
#     !is.na(scale_mmse) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == '", study, "')) |>"),
#     !is.na(scale_dst) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == '", study, "')) |>"),
#     !is.na(scale_moca) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == '", study, "')) |>")
#   ),
#   footnotes = ifelse(row_number() == n(), str_remove(footnotes, ".{2}$"), footnotes)) |>
#   filter(!is.na(footnotes)) |>
#   pull(footnotes) |>
#   noquote()

dncr_dat |>
  filter(study != "Zhang 2019a") |> 
  arrange(year, study) |>
  mutate(study_l = ifelse(row_number() > 1, NA, study_l),
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         dncr_time = ifelse(row_number() > 1, NA, dncr_time),
         .by = study) |>
  gt(id = "one") |>
  cols_hide(c(refid, year, arm_id, study, scale_other, neuro_threshold)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm_reg          = "Arm",
    cog_imp_nper     = "Dementia",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA",
    scale_other_tf   = "Other",
    dncr_time        = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  gt_theme_mg() |>
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |>
  fmt_number(dncr_time, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Neurocognitive Disorder <30 days", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(150),
    arm_n            ~ px(45),
    arm_reg           ~ px(70),
    cog_imp_nper     ~ px(80),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    dncr_time        ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm_reg))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, dncr_time, neurocog_nper, rr_ci, cog_imp_nper))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm_reg, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), dncr_time, rr_ci, cog_imp_nper))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm_reg, "Reg"))) |>
  # tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm_reg, "Gen"))) |>
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Gen: general anesthesia.") |>
  tab_footnote("Day of assessment (excluded Zhang 2019a conducting assessment at day 1).",                   locations = cells_column_labels(columns = c(dncr_time))) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Not reported.", locations = cells_body(columns = c(scale_other_tf), rows = is.na(scale_other_tf) & str_detect(study_l, "Wang 2016"))) |> 
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Silbert 2014')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Rasmussen 2003')) |>                    
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2019a')) |>              
  tab_footnote('Difference from baseline >2 points.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Casati 2003')) |>
  tab_footnote("Blank if no information provided.", locations = cells_column_labels(columns = cog_imp_nper)) |> 
  tab_footnote("Did not state excluding patients with dementia, but peformed neuropsycholgical testing prior to surgery", locations = cells_body(columns = c(cog_imp_nper), rows = study == "Wang 2016")) 
```

```{r dncr_ncd_likert_dat}
#| eval: false
# to inspect 
temp_dat <- likert_dat |>
  filter(if_any(c(cog_func_cdr, cog_func_cfq, cog_func_dst, cog_func_mmse, cog_func_moca, cog_func_trail, cog_func_other), ~ !is.na(.x))) |> 
  select(refid, study, starts_with(c("cfq", "cdr", "digit", "mmse", "moca", "trail", "othercog"))) |> 
  select(refid, study, starts_with("mmse")) |> 
  remove_empty(which = "cols")

writexl::write_xlsx(temp_dat, "/Users/mgrant/Desktop/temp_dat.xlsx")
```

<a id="fig-7"></a>

### *Pooled*

<caption_mg> `r figure_ref()` Delayed neurcognitive recovery. </caption_mg>

```{r dncr_meta} 
#| echo: false
#| include: false

trts <- neurocog_meta_dat$arm_reg

pairs_dat <- pairwise(
  treat = arm_reg,
  event = neurocog_total_n,
  n = arm_n,
  studlab = study,
  data = neurocog_meta_dat,
  sm = "RR"
)

dncr_meta_dat <- pairs_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall) |>
  mutate(
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  ) |>
  arrange(year, study)

gen_reg_dncr_meta <- metabin(event2, n2, event1, n1,
  data = dncr_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "classic",
  hakn = FALSE,
  prediction = TRUE
)

png("assets/kq3_gen_reg_dncr.png", width = 9.85, height = 3.4, units = "in", res = 300)
forest(gen_reg_dncr_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Neuraxial     ",
  label.c = "General  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)   ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Neuraxial               General",
  addrows.below.overall = 4,
  text.addline1 = "Too few studies to examine small study effects."
)
dev.off()

```

![](assets/kq3_gen_reg_dncr.png){width="72%"}
 
::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### Meta-analysis methods detail.

```{r}
#| include: false  

temp <- print(gen_reg_dncr_meta) |> 
  str_replace_all("\\n", "<br/> ") |>
  str_remove("<br/> Details on meta-analytical method:<br/> ") |> 
  str_replace_all("tau\\^2", "tau<sup>2</sup>") |> 
  str_replace_all("tau", "&tau;")

```

<foot_mg> `r temp` </foot_mg>

:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Summary risk of bias from randomized clinical trials reporting delayed neurocognitive recovery (weighted). </caption_mg>

```{r rob2_summary_dncr, fig.height = 3, out.width = "60%"}
rob_summary_meta_weighted_fun(gen_reg_dncr_meta)
# rob_summary_fun(delirium_meta_dat$refid)
```
:::

<foot_mg> `r temp` </foot_mg>
 
## **Neurocognitive Disorder<br/> ≥30 days to 1 year**

<caption_mg> `r table_ref()` Neurocognitive disorder ≥30 days incidence and ascertainment in a randomized clinical trial comparing neuraxial to general anesthesia.</caption_mg>

```{r ncd_dat}
ncd_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x > 30)) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    ncd_time = case_when(
      neurocog_time1 > 30 ~ neurocog_time1,
      neurocog_time2 > 30 ~ neurocog_time2,
      neurocog_time3 > 30 ~ neurocog_time3,
      neurocog_last_time > 30 ~ neurocog_last_time,
      neurocog_total_time > 30 ~ neurocog_total_time,
      .default = NA
    ),
    neurocog_total_n = case_when(
      neurocog_time1 > 30 ~ neurocog_n1,
      neurocog_time2 > 30 ~ neurocog_n2,
      neurocog_time3 > 30 ~ neurocog_n3,
      neurocog_last_time > 30 ~ neurocog_last_n,
      neurocog_total_time > 30 ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n / arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  rename(surg_f = surgs_single_f) |>
  arrange(refid, arm_id) |>
  mutate(
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(neurocog_prop * 100, "#969696"),
      str_detect(arm, "Neur|Block") ~ bar_prop(neurocog_prop * 100, color_2),
      .default = bar_prop(neurocog_prop * 100, color_1)),
    year = as.numeric(str_extract(study, "\\d{4}")),
    # arm_reg = fct_collapse(arm, "Reg" = c("Neur", "Block")),
    arm_reg = arm,
    scale_mmse = ifelse(!is.na(neurocog_scale_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_scale_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |>
  select(refid, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, arm_reg, pre_mmse, ncd_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf)

ncd_rr_ref <- ncd_dat |>
  select(refid, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  )

ncd_dat <- ncd_dat |>
  left_join(ncd_rr_ref, by = c("refid", "arm_id")) |>
  left_join(reg_gen_tab |> select(refid, cog_imp_nper, arm_id), by = c("refid", "arm_id")) |>
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |>
  select(refid, year, design_f_lab, study, study_l, arm_id, arm_n, arm_reg, cog_imp_nper, pre_mmse, scale_mmse:scale_other_tf, ncd_time, neurocog_nper, bar, rr_ci)
```

```{r ncd_gt}
#| eval: true
ncd_dat |>
  arrange(year, study) |>
  mutate(study_l = ifelse(row_number() > 1, NA, study_l),
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         ncd_time = ifelse(row_number() > 1, NA, ncd_time),
         .by = study) |>
  group_by(design_f_lab) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm_reg          = "Arm",
    cog_imp_nper     = "Dementia",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA",
    scale_other_tf   = "Other",
    ncd_time         = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  gt_theme_mg() |>
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |>
  fmt_number(ncd_time, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Postoperative Neurocognitive Disorder", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(150),
    arm_n            ~ px(45),
    arm_reg          ~ px(70),
    cog_imp_nper     ~ px(80),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    ncd_time         ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm_reg))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, ncd_time, rr_ci, cog_imp_nper))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm_reg, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), ncd_time, rr_ci, cog_imp_nper))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm_reg, "Reg"))) |>
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Gen: general anesthesia.") |>
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(ncd_time))) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |> 
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Rasmussen 2003'))
```

## **Physical Function**

<caption_mg> `r table_ref()` Neuman et al 2021 primary outcome — unable to walk without human assistance at 60 days. </caption_mg>

```{r walk_neuman}
tribble(
  ~study_l, ~arm_n, ~arm, ~percent, ~n_per, ~rr_ci,
  "[Neuman 2021](evidence_tables.html#8117)", 701, "Gen", 14.4, "101 (14.4)", "",
  "", 684, "Neur", 15.2, "104 (15.2)", "1.05 (0.82–1.36)"
) |>
  mutate(
    bar = case_when(
      str_detect(arm, "Neur") ~ bar_prop(percent, color_2),
      .default = bar_prop(percent, "#969696")
    ),
  ) |>
  relocate(bar, .after = n_per) |>
  gt(id = "one") |>
  cols_hide(percent) |>
  cols_label(
    study_l     = "Study",
    arm_n       = "N",
    arm         = "Arm",
    n_per       = md("Unable to  <br/> Walk N (%)"),
    bar         = "0 — 100%",
    rr_ci       = "RR (95% CI)"
  ) |>
  cols_width(
    study_l ~ px(150),
    arm_n ~ px(45),
    arm ~ px(70),
    n_per ~ px(120),
    bar ~ px(100),
    rr_ci ~ px(140),
  ) |>
  gt_theme_mg() |>
  fmt_markdown(columns = c(study_l, bar)) |>
  # tab_spanner(label = "General Anesthesia", columns = c(n_walk, n_walk_p), level = 1) |>
  # tab_spanner(label = "Neuraxial Anesthesia", columns = c(n_walk_g, n_walk_g_p), level = 1) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, n_per, rr_ci))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(n_per, rr_ci))) |>
  tab_footnote("Inability to walk without human assistance at 60 days.", locations = cells_column_labels(columns = n_per)) |>
  tab_footnote("Gen: general anesthesia; Neur: neuraxial anesthesia.", locations = cells_column_labels(columns = arm)) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:rr_ci), rows = str_detect(arm, "Neur"))) |> 
  tab_footnote("Equivalent standardized mean difference: 0.04 (95% CI, -0.13 to 0.20).", locations = cells_body(columns = c(rr_ci), rows = arm == 'Neur'))

# calculate smd
# or2smd(or_ln_te_fun(104, 684, 101, 701), or_ln_se_fun(104, 684, 101, 701))

```

<caption_mg> `r table_ref()` Physical functional status and instrument in randomized clinical trials comparing neuraxial to general anesthesia. </caption_mg>

```{r exp_std_adl}
#| include: true
#| eval: true
#| warning: false

## main data ------------------------------------------ (2023-07-13 10:05) @----
adl_likert_dat <- likert_dat |> 
  # filter(refid == 17971) |> # debug Sciberras 2022
  # filter(!study %in% c("Tzimas 2018", "Neuman2021", "Wang2020b")) |> 
  mutate(
    # adl_koos, adl_sf36, adl_womac_func, adl_womac_stiff, adl_qlq_func, adl_other
    adl_scale = coalesce(adl_koos, adl_sf36, adl_womac_func, adl_womac_stiff, adl_qlq_func, adl_other),
    adl_scale = case_when(
      adl_scale == adl_sf36 ~ "SF-36 physical",
      str_detect(adl_other_spec, "Bar?thel") ~ "Barthel Index",
      adl_other_spec ==  "Short Performance Physical Battery" ~ "SPPB",
      str_detect(adl_other_spec, "Groningen") ~ "GARS"
    )
  ) |> 
  filter(!is.na(l_adl)) |> 
  relocate(adl_scale, .after = arm) |> 
  select(refid, study_l, study, arm_id, arm, arm_n, adl_scale, adl_koos:adl_other_spec, matches("sf36_pcs|womac_func|qlq_fs|adl")) |> 
  # select(refid, study, arm, adl_scale, matches("otheradl")) |> 
  rename_with(~ str_replace(., "_95", "ci95")) |> 
  rename_with(~ str_replace(., "other", "other_")) %>%
  mutate(
    time1       = coalesce(!!!select(., contains("time1"))),
    m1          = coalesce(!!!select(., contains("m1"))),
    sd1         = coalesce(!!!select(., contains("sd1"))),
    ci95l1      = coalesce(!!!select(., contains("ci95l1"))),
    ci95u1      = coalesce(!!!select(., contains("ci95u1"))),
    med1        = coalesce(!!!select(., contains("med1"))),
    rl1         = coalesce(!!!select(., contains("rl1"))),
    ru1         = coalesce(!!!select(., contains("ru1"))),
    iqrl1       = coalesce(!!!select(., contains("iqrl1"))),
    iqru1       = coalesce(!!!select(., contains("iqru1"))),
    diff1       = coalesce(!!!select(., contains("diff1"))),
    diffsd1     = coalesce(!!!select(., contains("diffsd1"))),
    diff95low1  = coalesce(!!!select(., contains("diff95low1"))),
    diff95high1 = coalesce(!!!select(., contains("diff95high1"))),
    pval1in    = coalesce(!!!select(., contains("pval1_in"))),
    pval1betw  = coalesce(!!!select(., contains("pval1_betw"))),
    time2       = coalesce(!!!select(., contains("time2"))),
    sd2         = coalesce(!!!select(., contains("sd2"))),
    m2          = coalesce(!!!select(., contains("m2"))),
    ci95l2      = coalesce(!!!select(., contains("ci95l2"))),
    ci95u2      = coalesce(!!!select(., contains("ci95u2"))),
    med2        = coalesce(!!!select(., contains("med2"))),
    rl2         = coalesce(!!!select(., contains("rl2"))),
    ru2         = coalesce(!!!select(., contains("ru2"))),
    iqrl2       = coalesce(!!!select(., contains("iqrl2"))),
    iqru2       = coalesce(!!!select(., contains("iqru2"))),
    diff2       = coalesce(!!!select(., contains("diff2"))),
    diffsd2     = coalesce(!!!select(., contains("diffsd2"))),
    diff95low2  = coalesce(!!!select(., contains("diff95low2"))),
    diff95high2 = coalesce(!!!select(., contains("diff95high2"))),
    pval2in    = coalesce(!!!select(., contains("pval2_in"))),
    pval2betw  = coalesce(!!!select(., contains("pval2_betw"))),
    time3       = coalesce(!!!select(., contains("time3"))),
    m3          = coalesce(!!!select(., contains("m3"))),
    sd3         = coalesce(!!!select(., contains("sd3"))),
    ci95l3      = coalesce(!!!select(., contains("ci95l3"))),
    ci95u3      = coalesce(!!!select(., contains("ci95u3"))),
    med3        = coalesce(!!!select(., contains("med3"))),
    rl3         = coalesce(!!!select(., contains("rl3"))),
    ru3         = coalesce(!!!select(., contains("ru3"))),
    iqrl3       = coalesce(!!!select(., contains("iqrl3"))),
    iqru3       = coalesce(!!!select(., contains("iqru3"))),
    diff3       = coalesce(!!!select(., contains("diff3"))),
    diffsd3     = coalesce(!!!select(., contains("diffsd3"))),
    diff95low3  = coalesce(!!!select(., contains("diff95low3"))),
    diff95high3 = coalesce(!!!select(., contains("diff95high3"))),
    pval3in    = coalesce(!!!select(., contains("pval3_in"))),
    pval3betw  = coalesce(!!!select(., contains("pval3_betw"))),
  ) |> 
  select(refid, study_l, study, arm_id, arm, arm_n, adl_scale, !contains("_"), matches("adl_update_arm_n[1-3]")) |> 
  rename_with(~ paste0("adl_", .x), .cols = matches("[1-3]")) |> 
  rename_with(~ str_remove(.x, "adl_adl_"))  
  # remove_empty("cols") 

## adl_transpose -------------------------------------- (2023-07-13 10:06) @----
adl_transpose <- function(data, obs_number){
  obs_number <- as.character(obs_number)
  data |> 
  select(refid:adl_scale, matches(obs_number)) |> 
  rename_with(~ str_replace(.x, obs_number, ""))
}

## adl_long_dat --------------------------------------- (2023-07-13 10:06) @----
adl_long_dat <- bind_rows(
  adl_transpose(adl_likert_dat, 1),
  adl_transpose(adl_likert_dat, 2),
  adl_transpose(adl_likert_dat, 3)) |>
  # update arms at follow-up times
  mutate(arm_n = ifelse(!is.na(update_arm_n), update_arm_n, arm_n)) |>
  select(-update_arm_n) |>
  filter(!is.na(adl_time))

```

```{r exp_std_adl_estimates}
# add formatted m/med and imputed mean sd if missing
adl_mn_med_dat <- mean_med_table_adl(adl_long_dat, "adl_") |>
  filter(!is.na(adl_time)) |>
  select(-scale)

adl_long_dat <- left_join(adl_long_dat, adl_mn_med_dat, by = c("refid", "arm_id", "adl_time")) |> 
  rename_with(~ str_remove(.x, "adl_")) |> 
  mutate(
    study = paste0(study, "-", time),
    # TODO: fix in code so not to use later
    temp = str_extract(table, "\\d{1,2}\\.\\d\\)$"),
    temp = as.numeric(str_remove(temp, "\\)")),
    sd = ifelse(is.na(sd), temp, sd),
  ) |> 
  select(-temp)

# function to calculate means, sd, and create analytical data set
calc_mn_sd <- function(n_e, m_e, sd_e, md_e, q1_e, q3_e, min_e, max_e, study, tx, refid, data = NULL) {
  temp_dat <- data |> 
    select(all_of(c(n_e, m_e, sd_e, md_e, q1_e, q3_e, min_e, max_e, study, tx, refid))) %>%
    mutate(n_c = 20, m_c = 2, sd_c = 1, md_c = 3, q1_c = 2, q3_c = 3, min_c = 1, max_c = 5)
  names(temp_dat)[1:10] <- c("n_e", "m_e", "sd_e", "md_e", "q1_e", "q3_e", "min_e", "max_e", "study", "tx")

  temp <- metacont(
    n.e = n_e,
    n.c = n_c,
    comb.fixed = TRUE,
    mean.e = m_e,
    sd.e = sd_e,
    median.e = md_e,
    q1.e = q1_e,
    q3.e = q3_e,
    min.e = min_e,
    max.e = max_e,
    mean.c = m_c,
    sd.c = sd_c,
    median.c = md_c,
    q1.c = q1_c,
    q3.c = q3_c,
    min.c = min_c,
    max.c = max_c,
    sm = "SMD",
    studlab = study,
    data = temp_dat
  )

  temp <- as_tibble(temp[c("studlab", "n.e", "mean.e", "sd.e")])
  cbind(temp_dat$tx, temp) 
}

adl_scales_dat <- tribble(
  ~study, ~scale, ~metric,
  "Purwar 2015", "SF-36 physical", "0→100",
  "Neuman 2021", "WHODAS 2.0", "0←100",
  "Sciberras 2022", "WOMAC", "0←96",
)

adl_long_dat <- left_join(
  adl_long_dat, calc_mn_sd("arm_n", "m", "sd", "med", "iqrl", "iqru", "rl", "ru", "study", "arm", refid = "refid", data = adl_long_dat) |> rename(arm = "temp_dat$tx", study = studlab),
  by = c("study", "arm")
) |>
  # add calculable missing sd estimates, for Zhu 2022 sd_bwgrp_fun(51.7, 50.5, 85, 70, 0.522)[3]; Bakker use diff
  mutate(
    sd.e = ifelse(study == "Zhu 2022-21", 11.85844, sd.e),
    mean.e = ifelse(is.na(mean.e) & str_detect(study, "Bakker"), -diff, mean.e),
    study_time = study,
    study = str_remove(study_time, "-.*$"),
    year = str_extract(study, "\\d{4}"),
    period = case_when(
      time < 30 ~ "<30 days",
      time <= 90 ~ "30-90 days",
      time > 90 ~ ">90 days"
    )
  ) |>
  select(-scale) |>
  left_join(adl_scales_dat, by = "study") |>
  select(-c(ci95l:pvalbetw)) |>
  select(refid:study, study_time, arm_id, arm_n, arm, scale, metric, everything()) |>
  arrange(year, study_time, arm_id) |>
  filter(time != 0) |>
  mutate(
    smd = case_when(
      arm_id == 2 ~ suppressWarnings(smd_ci(n.e, mean.e, sd.e, lag(n.e), lag(mean.e), lag(sd.e))),
      arm_id == 1 ~ NA
    ),
    .by = study_time
  ) 

adl_meta_dat <- adl_long_dat |>
  mutate(
    mean.e = ifelse(study == "Purwar 2015", -mean.e, mean.e) # reverse scale
  ) |>
  select(study, arm, time, period, n.e, mean.e, sd.e) |>
  pivot_wider(names_from = arm, values_from = c(n.e, mean.e, sd.e)) |>
  rename_with(~ str_remove(.x, "\\.e"))

```

```{r exp_std_adl_gt}

adl_long_dat |>
  mutate(
    smd = ifelse(smd == "0.26 (-0.25 to 0.78)", "-0.26 (-0.78 to 0.25)", smd)
  ) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  relocate(age_table, .after = arm) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    scale = ifelse(row_number() > 1, "", scale),
    time = ifelse(row_number() > 1, "", time),
    metric = ifelse(row_number() > 1, "", metric),
    .by = study_time
  ) |>
  group_by(period) |>
  gt(id = "one") |>
  # row_group_order(groups = c("30-90 days")) |>
  cols_hide(c(refid, study, study_time, arm_id, m, sd, sd.e, n.e, mean.e, year, )) |>
  cols_label(
    study_l          = "Study",
    arm_n            = "N",
    arm              = "Arm",
    age_table        = "    Age",
    scale            = "Scale",
    metric           = "Range",
    time             = "Days",
    table            = "Rating",
    smd              = "SMD (95% CI)"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, age_table, table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  # fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  sub_missing(columns = everything(), missing_text = "") |>
  # replace relative effects calculated from studies with 0 events in one arm
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(135),
    arm_n ~ px(45),
    arm ~ px(50),
    age_table ~ px(90),
    scale ~ px(100),
    metric ~ px(70),
    time ~ px(40),
    table ~ px(90),
    smd ~ px(140)
  ) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:smd), rows = str_detect(arm, "Neur"))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(smd))) |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(arm))) |> 
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(smd, age_table, scale))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(arm))) |>
  tab_footnote("SMD: standardized mean difference; Gen: general; Neur: neuraxial.") |>
  tab_footnote("Arrow direction indicates better functional outcome.", locations = cells_column_labels(columns = scale)) |>
  tab_footnote("Composite WOMAC includes pain, stiffness, and physical function. Physical function accounts for 68 of the 96 points.", locations = cells_body(columns = scale, rows = scale == "WOMAC")) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, table))) |> 
  tab_footnote("Direction reversed so that lower favors neuraxial consistent with other scales.", locations = cells_body(columns = smd, rows = smd == "-0.26 (-0.78 to 0.25)")) |> 
  tab_footnote("Standard deviations derived from confidence intervals and appear small, but are consistent with reported statistical results.", locations = cells_body(columns = table, rows = study == "Sciberras 2022"))


```

<a id="fig-function"></a>

### *Pooled*

<caption_mg> `r figure_ref()` Pooled standardized mean differences for physical functional status at 30 to 90 days. Lower represents better with neuraxial anesthesia. </caption_mg>

```{r function_meta}
#| echo: false
#| include: false

# calculate smd and se from neuman 2021 primary result to include in sensitivity pooled analysis
neuman_walk <- or2smd(or_ln_te_fun(104, 684, 101, 701), or_ln_se_fun(104, 684, 101, 701))
neuman_walk <- data.frame(matrix(c("Neuman 2021", neuman_walk$TE.common, neuman_walk$seTE.common), nrow = 1, ncol = 3)) 
names(neuman_walk) <- c("study", "te", "se_te")
neuman_walk <- neuman_walk |> mutate(study = as.character(study), te = as.numeric(te), se_te = as.numeric(se_te)) |>  tibble()

# other data 
adl_meta_dat <- adl_meta_dat |> filter(time != 180) 

physical_meta <- metacont(
  mean.e = mean_Neur, sd.e = sd_Neur, n.e = n_Neur, mean.c = mean_Gen, sd.c = sd_Gen, n.c = n_Gen,
  data = adl_meta_dat,
  sm = "SMD",
  studlab = study,
  subset = time != 180,
)

# as odds ratio: smd2or(physical_meta)

study <- physical_meta$studlab
te <- physical_meta$TE
se_te <- physical_meta$seTE

physical_sens_dat <- bind_rows(
  tibble(study, te, se_te)[c(1, 3), ],
  neuman_walk
)

physical_sens_meta <- metagen(
  te,
  se_te,
  sm = "SMD",
  data = physical_sens_dat,
)

# smd2or(physical_sens_meta)

png("assets/kq3_function_meta.png", width = 8.68, height = 2.8, units = "in", res = 300)
forest(physical_meta,
  weight.study = "random",
  common =  FALSE,
  label.e = "Neuraxial",
  label.c = "General   ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 2,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  # digits.pval.Q = 2,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "left",
  print.pval.Q = FALSE,
  # sortvar = -TE,
  # xlim = c(-10, 10),
  # at = c(-80, -60, -40, -20, 0, 20, 40),
  rightcols = c("effect", "ci"),
  rightlabs = c("SMD", "(95% CI) "),
  xlab = "Favors: Neuraxial                                    General          ",
  # smlab = "Mean Difference (days)",
  addrows.below.overall = 4,
  text.addline1 = "If the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, or range."
)
dev.off()

```

![](assets/kq3_function_meta.png){fig.align="left" width="62%"}

<foot_mg> Equivalent OR 1.02 (95% CI, 0.50–2.14).<br/>
Using Neuman 2021 primary result from 1385 participants in a sensitivity analysis yield a pooled SMD -0.07 (95% CI, -0.25 to 0.12) and equivalent OR 0.89 (95% CI, 0.63–1.24).
</foot_mg> 


## **Complications**

```{r complications_check_missing}
#| eval: false
# create excel file to inspect
complication_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, study, arm_id, arm, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high"))
}

complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

# complication <- c("medical", "surg", "cardiac", "gastro", "neuro", "pulm", "thromb", "infect", "fall", "stroke", "othcomp", "asppneum", "atelec", "bronch", "cardarr", "myoinfarct", "ssi", "sepsis", "uti", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48", "kidneyinj", "nerveinj", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

adverse_events_dat <- map(complication_incl, complication_fun)

wb <- openxlsx::createWorkbook("kq3_complications")

for (i in 1:17) {
    temp_sheet <- adverse_events_dat[[i]]
    addWorksheet(wb, sheetName = complication_incl[i])
    setColWidths(wb, i, cols = c(1:12), widths = c(rep(15, 12)))
    writeData(wb, sheet = i, temp_sheet)
}

path <- glue::glue("/Users/mgrant/Desktop/temp.xlsx")
saveWorkbook(wb, "/Users/mgrant/Desktop/kq3.xlsx", overwrite = TRUE)

# reported based on results
complication_all <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "pulm", "pneum", "pulcongest", "pe")

```

<caption_mg> `r table_ref()` Complications reported for neuraxial versus general anesthesia --- cardiovascular, stroke, renal, pulmonary, and reintubation. </caption_mg>

```{r complications}
#| warning: false
#| eval: true
# included complications
complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

complication_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, year, study, arm_id, arm, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high")) |>
    mutate(complication = var_prefix) |>
    rename_with(~ str_replace(.x, "95", "ci_"), .cols = everything()) |>
    rename_with(~ str_replace(.x, "^.*_", ""), .cols = c(8:15)) |>
    arrange(complication, year, study, arm_id)
}

# adverse event data includes all reported complications in list
adverse_events_dat <- map_df(complication_incl, complication_fun) |>
  mutate(
    arm_n = ifelse(!is.na(comp_update_arm_n), comp_update_arm_n, arm_n),
    calc_per = n / arm_n * 100,
    n_per = n_per_fun(n, arm_n, 1),
    diff = per - calc_per
  )

adverse_meta_dat <- adverse_events_dat |> 
  select(refid, year, study, arm_id, arm, arm_n, n, complication)

adverse_events_dat <- adverse_events_dat |>
  left_join(cardiac_compl, by = c("refid", "complication")) |>
  left_join(renal_compl, by = c("refid", "complication")) |> 
  left_join(study_char_dat |> select(refid, study_l, surgs_single, design_f_lab), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  arrange(complication, surgs_single, year, study, arm_id) |>
  mutate(
    study_compl = paste0(study, complication),
    ref_arm_n = arm_n,
    ref_n = n
  ) |>
  group_by(study_compl) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |>
  mutate(
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 1), "—"),
    # or_ci = ifelse(!is.na(ref_n) & n != 0 & ref_arm_n != 0, or_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 2), "—"), # not if any Os
    # rr_ci = ifelse(!is.na(ref_n) & n != 0 & ref_arm_n != 0, rr_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 2), "—"), # not if any Os
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(calc_per, "#969696"),
      .default = bar_prop(calc_per, "#A93226"))) |>
  select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n, age_table, surgs_single, n_per, bar, rd_ci, complication, design_f_lab, detail_cardiac, detail_renal)

# for summary table
# adverse_events_dat |>
#   group_by(refid, arm_id) |>
#   slice(1) |> 
#   ungroup() |>
#   summarise(total = sum(arm_n))
# 
# adverse_events_dat |>
#   select(refid) |>
#   distinct() 
  
```

```{r complications_gt}
#| eval: true
adverse_events_gt_dat <- adverse_events_dat |>
  # filter(complication == "kidneyinj") |> 
  filter(complication %in% complication_incl) |> # tabyl(complication) |> pull(complication) |> toString()
    mutate(
    complication = fct(complication),
    complication = fct_recode(complication,
      "Other Cardiac" = "cardiac",
      "MI" = "myoinfarct",
      "Cardiac Arrest" = "cardarr",
      "Stroke" = "stroke",
      "AKI/Renal Failure" = "kidneyinj",
      "Pulmonary" = "pulm",
      "Pneumonia" = "pneum",
      "Pulmonary Congestion" = "pulcongest",
      "Pulmonary Embolism" = "pe",
      "Reintubation" = "intub"
    )
  ) 

adverse_events_gt_dat |> 
  # filter(complication == "AKI/Renal Failure") |> 
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         detail_cardiac = ifelse(row_number() > 1, "", detail_cardiac),
         detail_renal = ifelse(row_number() > 1, "", detail_renal),
         surgs_single = ifelse(row_number() > 1, "", surgs_single), .by = study_compl) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("MI", "Cardiac Arrest", "Other Cardiac", "Stroke", "AKI/Renal Failure", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "Pulmonary Embolism", "Reintubation")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab, detail_cardiac, detail_renal)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l          ~ px(140),
    arm_n            ~ px(45),
    arm              ~ px(60),
    age_table        ~ px(100),
    surgs_single     ~ px(80),
    n_per            ~ px(80),
    bar              ~ px(100),
    rd_ci            ~ px(140)
  ) |>
  tab_style(style = cell_text(align = "left"),          locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"),        locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"),          locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"),        locations = cells_body(columns = c(rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  # tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = list(cell_text(color = "black")),   locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Gen"))) |>
  # tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  # tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Plac|None"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Gen"))) |> 
  tab_footnote("Gen: general anesthesia; Neur: neuraxial; RD: risk difference; Ortho: orthopedic; GI: gastrointestinal; Abd: abdominal; PE: pulmonary embolism; Ophtho: ophthalmologic; AKI: acute kidney injury.") |> 
  tab_footnote("Bradycardia.",                          locations = cells_body(columns = c(study_l), rows = detail_cardiac == "bradycardia")) |> 
  tab_footnote("Unspecified adverse cardiac events.",   locations = cells_body(columns = c(study_l), rows = detail_cardiac %in% c("adverse cardiologic events unspecified", "unspecified"))) |> 
  tab_footnote("Arrhythmia.",                           locations = cells_body(columns = c(study_l), rows = detail_cardiac == "arrhythmia")) |> 
  tab_footnote("MI, heart failure, new onset arrhythmia.", locations = cells_body(columns = c(study_l), rows = detail_cardiac == "mI, heart failure, new onset arrhythmia")) |> 
  tab_footnote("Tachycardia.",                          locations = cells_body(columns = c(study_l), rows = detail_cardiac == "tachycardia")) |> 
  tab_footnote("Bradycardia or tachycardia.",           locations = cells_body(columns = c(study_l), rows = detail_cardiac == "bradycardia or tachycardia")) |>
  tab_footnote("Also reported hypo- (12.3% vs. 9.8%) or hypertension (3.8% vs. 12.8%), and left heart failure (0.9% vs. 0%).", locations = cells_body(columns = c(study_l), rows = !is.na(detail_cardiac) & study == "Li 2022" & arm_id == 1)) |>
  tab_footnote("AKI",                                   locations = cells_body(columns = c(study_l), rows = detail_renal == "AKI")) |>
  tab_footnote("Renal failure",                         locations = cells_body(columns = c(study_l), rows = detail_renal == "Renal failure")) |>
  tab_footnote("Verus combined general arms — RD 0.7% (-8.8 to 7.4), RR 0.90 (0.28–2.81).", locations = cells_body(columns = c(rd_ci), rows = rd_ci == c("0.2% (-8.8, 9.3)"))) |> 
  tab_footnote("With general arms combined RR 0.90 (95% CI, 0.29–2.81).", locations = cells_body(columns = c(rd_ci), rows = study_compl == "Shin 2020pulm" & arm_id == 3))
```

### *Pooled*

```{r adverse_events_meta}
adverse_meta_dat <- adverse_events_gt_dat |>
  filter(refid != 16596) |> # Neuman 2016
  select(refid, year, study, arm_id, arm, arm_n, n, complication, study_compl) |>
  mutate(
    arm = ifelse(arm == "Gen", "Gen", "Reg"),
    n = case_when(
      study_compl == "Shin 2020cardiac" & arm_id == 1 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Shin 2020cardiac", c(1, 2), n),
      study_compl == "Shin 2020pulm" & arm_id == 1 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Shin 2020pulm", c(1, 2), n),
      study_compl == "Liang 2017myoinfarct" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017myoinfarct", c(2, 3), n),
      # study_compl == "Bielka 2021cardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Bielka 2021cardiac", c(2, 3), n),
      study_compl == "Liang 2017pe" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017pe", c(2, 3), n),
      study_compl == "Liang 2017pneum" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017pneum", c(2, 3), n),
      # study_compl == "Bielka 2021pneum" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Bielka 2021pneum", c(2, 3), n),
      .default = n
    ),
    arm_n = case_when(
      study_compl == "Shin 2020cardiac" & arm_id == 1 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Shin 2020cardiac", c(1, 2), arm_n),
      study_compl == "Shin 2020pulm" & arm_id == 1 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Shin 2020pulm", c(1, 2), arm_n),
      study_compl == "Liang 2017myoinfarct" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017myoinfarct", c(2, 3), arm_n),
      # study_compl == "Bielka 2021cardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Bielka 2021cardiac", c(2, 3), arm_n),
      study_compl == "Liang 2017pe" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017pe", c(2, 3), arm_n),
      study_compl == "Liang 2017pneum" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Liang 2017pneum", c(2, 3), arm_n),
      # study_compl == "Bielka 2021pneum" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_events_gt_dat, "Bielka 2021pneum", c(2, 3), arm_n),
      .default = arm_n
    )
  ) |>
  filter(!(study_compl %in% c("Shin 2020cardiac") & arm_id  == 2)) |> 
  filter(!(study_compl %in% c("Shin 2020pulm") & arm_id  == 2)) |> 
  filter(!(study_compl %in% c("Liang 2017myoinfarct") & arm_id  == 3)) |> 
  # filter(!(study_compl %in% c("Bielka 2021cardiac") & arm_id  == 3)) |> 
  filter(!(study_compl %in% c("Liang 2017pneum") & arm_id  == 3)) |> 
  filter(!(study_compl %in% c("Liang 2017pe") & arm_id  == 3))
  # filter(!(study_compl %in% c("Bielka 2021pneum") & arm_id  == 3))
  
adverse_meta_wide_dat <- adverse_meta_dat |> 
  arrange(refid, complication) |> 
  pivot_wider(names_from = "arm", values_from = arm_n:n) |> 
  group_by(study_compl) |> 
  fill(arm_n_Gen:n_Reg) |> 
  slice(2) |> 
  ungroup() |> 
  arrange(complication, year, study) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |>
  mutate(
    surg_hip_oth = ifelse(refid %in% ortho_hipfx_only_refid, "Hip Fx", "Other"),
    surgs_single = ifelse(surg_hip_oth == "Hip Fx", "Hip Fx", surgs_single)
  ) 

```

```{r complication_functions}
complication_meta <- c("Cardiac", "MI", "Cardiac Arrest", "Stroke", "Renal", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Reintubation")

complication_meta_fun <- function(compl_label, use_hakn = "HK", predictive = TRUE){
meta_dat <- adverse_meta_wide_dat |> 
    filter(complication %in% compl_label)

complication_bin <- metabin(
  n_Reg, arm_n_Reg, n_Gen, arm_n_Gen,
  data = meta_dat,
  studlab = study,
  method = "MH",
  method.tau = "REML",
  sm = "RR",
  prediction = predictive,  
  method.random.ci = use_hakn,
  allstudies = FALSE,
)  
}

complication_forest_fun <- function(adverse_meta, addline = "", random = TRUE, predictive = TRUE, ...){
forest(adverse_meta,
  allstudies = TRUE,
  random = random,
  label.e = "Neuraxial ",
  label.c = "General ",
  just.addcols.right = "left",
  rightcols = c("effect", "ci"),
  rightlabs = c("RR", "(95% CI)"),
  # just.addcols.right = "left",
  print.subgroup.name = FALSE,
  pool.events = TRUE, 
  digits.TE = 3,
  digits.tau2 = 1,
  overall = TRUE,
  print.I2.ci = TRUE,
  prediction = predictive,
  fs.xlab = 11,
  fs.hetstat = 11,
  # pscale = 100,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  xlim = c(0.1, 10),
  xlab = "Favors: Neuraxial                             General",
  addrows.below.overall = 4,
  text.addline1 = addline, 
  ...
)
}

complication_meta_riskdiff_fun <- function(compl_label, use_hakn = "HK", predictive = TRUE){
meta_dat <- adverse_meta_wide_dat |> 
    filter(complication %in% compl_label)

complication_bin <- metabin(
  n_Reg, arm_n_Reg, n_Gen, arm_n_Gen,
  data = meta_dat,
  studlab = study,
  method = "MH",
  method.tau = "REML",
  sm = "RD",
  prediction = predictive,  
  method.random.ci = use_hakn,
  allstudies = FALSE,
)  
}

complication_forest_riskdiff_fun <- function(adverse_meta, addline = "", random = TRUE, predictive = TRUE){
forest(adverse_meta,
  allstudies = TRUE,
  random = random,
  label.e = "Neuraxial ",
  label.c = "General ",
  just.addcols.right = "left",
  rightcols = c("effect", "ci"),
  rightlabs = c("RD", "(95% CI)"),
  # just.addcols.right = "left",
  print.subgroup.name = FALSE,
  pool.events = TRUE, 
  digits.TE = 3,
  digits.tau2 = 1,
  overall = TRUE,
  print.I2.ci = TRUE,
  prediction = predictive,
  fs.xlab = 11,
  fs.hetstat = 11,
  pscale = 1000,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-40, 40),
  xlab = "Favors: Neuraxial                             General",
  text.addline1 = addline, 
  addrows.below.overall = 4
)
}
```

<a id="fig-myocardial-infarction"></a>

#### Myocardial Infarction

<caption_mg> `r figure_ref()` **Risk ratio** for myocardial infarction. </caption_mg>

```{r complication_mi}
#| echo: false
#| include: false

png("assets/kq3_complication_mi.png", width = 8.1, height = 3.8, units = "in", res = 300)
temp_meta <- complication_meta_fun("MI")
complication_forest_fun(temp_meta, "Similar arms combined for Liang 2017.", text.addline2 = risk_diff_meta_rr())
dev.off()
```

![](assets/kq3_complication_mi.png){fig.align="left" width="58%"}

<a id="fig-bradycardia"></a>

#### Bradycardia

<caption_mg> `r figure_ref()` **Risk ratio** for bradycardia. </caption_mg>

```{r complication_bradycardia}
#| echo: false
#| include: false

# get bradycardia definitions
bradycardia_footnote <- cardiac_compl |> 
    filter(!is.na(brady_defn) & refid %in% kq3_refid) |> 
    select(refid, brady_defn) |> 
    left_join(study_char_dat |> select(study, refid), by = "refid") |>
    mutate(
      brady_note = paste0(study, ": ", brady_defn)
    ) |> 
  pull(brady_note) |>
  toString() 

png("assets/kq3_complication_brady.png", width = 8.1, height = 3.2, units = "in", res = 300)
temp_meta <- complication_meta_fun("Other Cardiac")
temp_meta <- update(temp_meta, subset = study %in% c("Carron 2007", "Nishikawa 2007b", "Wongyingsinn 2020", "Bielka 2021"))
complication_forest_fun(temp_meta, predictive = FALSE, risk_diff_meta_subset_rr())
dev.off()

```

![](assets/kq3_complication_brady.png){fig.align="left" width="58%"}

<foot_mg> `r bradycardia_footnote`. <br/> Prediction interval not displayed due to limited events. </foot_mg> 

<a id="fig-stroke"></a>

#### Stroke

<caption_mg> `r figure_ref()` **Risk ratio** for stroke. </caption_mg>

```{r complication_stroke}
#| echo: false
#| include: false

png("assets/kq3_complication_stroke.png", width = 8.1, height = 3.0, units = "in", res = 300) 
temp_meta <- complication_meta_fun("Stroke", use_hakn = "classic", predictive = FALSE)
complication_forest_fun(temp_meta, predictive = FALSE, risk_diff_meta_rr())
dev.off()

# prediction interval (0.00; 593.55)
```

![](assets/kq3_complication_stroke.png){fig.align="left" width="58%"}

<a id="fig-renal"></a>

#### Acute Kidney Injury

<caption_mg> `r figure_ref()` **Risk ratio** for acute kidney injury. </caption_mg>

```{r complication_renal}
#| echo: false
#| include: false
 
png("assets/kq3_complication_renal.png", width = 8.1, height = 3.37, units = "in", res = 300)
temp_meta <- complication_meta_fun("AKI/Renal Failure", use_hakn = "classic", predictive = FALSE)
complication_forest_fun(temp_meta, predictive = TRUE, risk_diff_meta_rr())
dev.off()

```
![](assets/kq3_complication_renal.png){fig.align="left" width="58%"}

<a id="fig-pneumonia"></a>

#### Pneumonia

<caption_mg> `r figure_ref()` **Risk ratio** for pneumonia. </caption_mg>

```{r complication_pneumonia}
#| echo: false
#| include: false

png("assets/kq3_complication_pneumonia.png", width = 8.1, height = 4.2, units = "in", res = 300)
temp_meta <- complication_meta_fun("Pneumonia", use_hakn = "HK", predictive = FALSE)
# temp_meta <- update(temp_meta, subgroup = surg_hip_oth)
complication_forest_fun(temp_meta, "Similar arms combined for Liang 2017. Hip fracture studies only RR 0.48 (0.33–0.70).", text.addline2 = risk_diff_meta_rr())
dev.off()

```
![](assets/kq3_complication_pneumonia.png){fig.align="left" width="58%"}

<a id="fig-pulmonary-embolism"></a>

#### Pulmonary Embolism

<caption_mg> `r figure_ref()` **Risk ratio** for pulmonary embolism. </caption_mg>

```{r complication_pe}
#| echo: false
#| include: false

png("assets/kq3_complication_pe.png", width = 8.1, height = 4, units = "in", res = 300)
temp_meta <- complication_meta_fun("Pulmonary Embolism", use_hakn = "HK", predictive = TRUE)
complication_forest_fun(temp_meta, "Similar arms combined for Liang 2017.", text.addline2 = risk_diff_meta_rr())
dev.off()

```
![](assets/kq3_complication_pe.png){fig.align="left" width="58%"}

<br/>   

## **Patient Satisfaction**

<caption_mg> `r table_ref()` Patient satisfaction comparing higher versus lower categories according to neuraxial or general anesthesia. </caption_mg>

```{r pt_satisfaction}
satis_dat_gt <- dichot_dat |>
  select(refid, year, study, study_l, arm_id, arm_n, arm, design_f_lab, matches("satis"), notes_d) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = "refid") |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  filter(if_any(satis_n:satis_95high, ~ !is.na(.x))) |>
  select(!c(d_satisfaction, satis_pval:satis_95high)) |>
  mutate(
    arm_n = ifelse(!is.na(satis_update_arm_n), satis_update_arm_n, arm_n),
    n_percent = n_per_fun(satis_n, arm_n, n_sig_dig = 1),
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(satis_n / arm_n * 100, "#969696"),
      str_detect(arm, "Neur|Block") ~ bar_prop(satis_n / arm_n * 100, color_2)
    )
  ) |>
  arrange(year, study, arm_id) 

satis_dat_gt <- satis_dat_gt |>
  mutate(
    satis_n = case_when(
      study == "Xu 2020" & arm_id == 2 ~ collapse_dichot(satis_dat_gt, "Xu 2020", c(2, 3), satis_n),
      .default = satis_n
    ),
    arm_n = case_when(
      study == "Xu 2020" & arm_id == 2 ~ collapse_dichot(satis_dat_gt, "Xu 2020", c(2, 3), arm_n),
      .default = arm_n
    )
  ) |>
  filter(!(study %in% c("Xu 2020") & arm_id == 3)) |>
  mutate(
    ref_arm_n = arm_n,
    ref_n = satis_n
  ) |>
  group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |>
  mutate(
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(satis_n, arm_n, ref_n, ref_arm_n, digits = 1), "—")
  )
  
satis_dat_gt |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    # surgs_noabbr_f = ifelse(row_number() > 1, "", as.character(surgs_noabbr_f)),
    # surgs_noabbr_f = ifelse(str_detect(surgs_noabbr_f, "Gast"), "GI/Abdominal", surgs_noabbr_f),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    .by = study
  ) |>
  group_by(surgs_noabbr_f) |>
  gt(id = "one") |>
  cols_hide(c(refid, year, arm_id, study, design_f_lab, satis_update_arm_n, satis_n, satis_per, notes_d, ref_arm_n, ref_n)) |>
  row_group_order(groups = c("Orthopedic", "Urologic",  "Neurosurgical", "Vascular", "Other")) |> 
  cols_label(
    study_l          = "Study",
    arm_n            = "N",
    arm              = "Anesth",
    asa_ps_incl      = "PS",
    age_table        = "Age",
    # surgs_noabbr_f   = "Surgery",
    n_percent        = "N (%)  ",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl), level = 1) |>
  fmt_markdown(columns = c(study_l, age_table, bar)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    arm ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(80),
    # surgs_noabbr_f   ~ px(100),
    n_percent ~ px(100),
    bar ~ px(100),
    rd_ci ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(asa_ps_incl, age_table, rd_ci))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_column_labels(columns = c(n_percent))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_footnote("Mean (SD).", locations = cells_column_labels(columns = c(age_table))) |>
  tab_footnote("Gen: general; Neur: neuraxial; Anesth: anesthetic; ASA PS: ASA Physical Status; RD: risk difference.") |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:n_percent), rows = str_detect(arm, "Neur|Block"))) |>
  tab_footnote("Satisfied.", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Carron|Harsten|Salonia|Apan|Nesek"))), placement = "right") |>
  tab_footnote("Not specified", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Xu"))), placement = "right") |>
  tab_footnote("Very satisfied", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Nishikawa"))), placement = "right") |>
  tab_footnote("Excellent/good", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Meuret"))), placement = "right") |>
  tab_footnote("Very good", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Ornek"))), placement = "right") |> 
  tab_footnote("Satisfaction with all aspects of anesthesia care", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Neuman"))), placement = "right") 

```

<a id="fig-satisfaction"></a>

### *Pooled*

<caption_mg> `r figure_ref()` Risk ratio comparing higher versus lower categories of patient satisfaction. </caption_mg>

```{r satis_rct_meta}
#| echo: false
#| include: false

satis_meta_dat <- satis_dat_gt |> 
  select(refid, year, study, arm, satis_n, arm_n) |> 
  pivot_wider(names_from = "arm", values_from = satis_n:arm_n) |> 
  left_join(rob2_meta_dat, by = "refid") 

satis_meta <- metabin(satis_n_Neur, arm_n_Neur, satis_n_Gen, arm_n_Gen,
  data = satis_meta_dat,
  studlab = study,
  # cluster = refid,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "classic",
  prediction = TRUE,
  allstudies = FALSE,
)

# summary(plac_meta)
png("assets/kq3_satis_meta.png", width = 8.1, height = 4.6, units = "in", res = 300)
forest(satis_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Neuraxial     ",
  label.c = "General     ",
  rightcols = c("effect", "ci"),
  rightlabs = c("RR", "(95% CI)"),
  just.addcols.right = "left",
  colgap.right = "4mm",
  colgap.forest = "5mm",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  prediction = TRUE,
  xlim = c(0.8, 1.8),
  at = c(0.8, 1, 1.3, 1.8),
  xlab = "Favors: General                                 Neuraxial              ",
  addrows.below.overall = 4,
  text.addline1 = "Comparing higher versus lower categories (see table)."
)
dev.off()
```

![](assets/kq3_satis_meta.png){fig.align="left" width="60%"}

<foot_mg> Pooled effect weights dominated by Neuman 2022 (62%), Salonia (12%), and Xu 2020 (11%). </foot_mg> 

<br/>

## **Length of Stay**

<caption_mg> `r table_ref()` Length of stay according to procedure classification. </caption_mg>

```{r length_of_stay}
#| eval: true
contin_neuman_dat <- contin_dat |> 
  filter(refid == 8117) |> 
  mutate(
    refid = 8117001,
    arm_n = ifelse(arm == "Gen", 593, 585),
    los_med = ifelse(arm == "Gen", 3, 3),
    los_iqrl = ifelse(arm == "Gen", 3, 2),
    los_iqru = ifelse(arm == "Gen", 5, 5),
    country = "USA",
    study = "Neuman 2021 (USA)",
    study_l = "[Neuman 2021 (USA)](evidence_tables.html#8117)",
    surg_groups = "Orthopedic"
  ) 

contin_neuman_dat <- contin_dat |> 
  filter(refid == 8117) |> 
  mutate(
    refid = 8117002,
    arm_n = ifelse(arm == "Gen", 211, 210),
    los_med = ifelse(arm == "Gen", 6, 6),  
    los_iqrl = ifelse(arm == "Gen", 5, 4),
    los_iqru = ifelse(arm == "Gen", 10, 9),
    country = "Canada",
    study = "Neuman 2021 (Canada)",
    study_l = "[Neuman 2021 (Canada)](evidence_tables.html#8117)",
    surg_groups = "Orthopedic"
  ) |> 
  bind_rows(contin_neuman_dat)

los_neuman_tab <- contin_neuman_dat |>
  mutate(los_for_tables(contin_neuman_dat)) |> 
  filter(if_any(los_m:los_diff_pval, ~ !is.na(.))) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = c("refid")) |>
  # left_join(study_char_dat |> select(refid, country), by = "refid" ) |> 
  mutate(
    refid_arm_id = paste0(refid, "-", arm_id),
    mean_med = case_when(
      !is.na(los_m) ~ los_m,
      !is.na(los_med) ~ los_med
    ),
    calc_prop_20d = 100 * mean_med / 20,
    bar = case_when(
      str_detect(arm, "Neur|Block|Reg") ~ bar_prop(calc_prop_20d, "#A93226"),
      .default = bar_prop(calc_prop_20d, "#969696")
    )
  ) |>
  arrange(surg_groups, year, study, arm_id) |> 
  select(refid, refid_arm_id, arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, los_table, bar, surg_groups, country, year)

los_tab <- contin_dat |>
  mutate(los_for_tables(contin_dat)) |>
  filter(if_any(los_m:los_diff_pval, ~ !is.na(.))) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid" ) |> 
  mutate(
    refid_arm_id = paste0(refid, "-", arm_id),
    surg_groups = surgs_noabbr_f,
    mean_med = case_when(
      !is.na(los_m) ~ los_m,
      !is.na(los_med) ~ los_med
    ),
    calc_prop_20d = 100 * mean_med / 20,
    bar = case_when(
      str_detect(arm, "Neur|Block|Reg") ~ bar_prop(calc_prop_20d, "#A93226"),
      .default = bar_prop(calc_prop_20d, "#969696")
    )
  ) |>
  select(refid, refid_arm_id, arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, los_table, bar, surg_groups, country, year) |> 
  bind_rows(los_neuman_tab) |> 
  arrange(surg_groups, year, study, arm_id) |> 
  select(-year, -arm_id)

los_tab |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         country = ifelse(row_number() > 1, "", country),
         surg_groups = fct_drop(surg_groups),
         .by = refid) |> 
  # tabyl(surg_groups) |> arrange(desc(percent)) |> pull(surg_groups) |> toString()
  group_by(surg_groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Orthopedic", "Various", "Gastrointestinal/Abdominal", "Other", "Spine")) |> 
  cols_hide(c(refid, refid_arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = " N",
    arm = "Anesth",
    asa_ps_incl = "PS",
    age_table = "    Age",
    los_table = "    LOS",
    bar = "0 – 20 days",
    country = "Country"
  ) |>
  fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(60),
    arm ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120),
    country ~ px(100)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  sub_missing(columns = everything(), missing_text = "") |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(bar))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_column_labels(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table, arm))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, arm))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(arm, "Neur|Block"))) |> 
  tab_footnote(md("Anesth: anesthetic; NR: not reported.")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl)))
  
```

### *Pooled*

<caption_mg> `r figure_ref()` Mean difference in lengths of stay. </caption_mg>

```{r los_meta}
#| include: false
#| echo: false

los_meta_dat <- contin_dat |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  filter(refid != 8117) |> 
  bind_rows(contin_neuman_dat) |>
  filter(refid %in% los_tab$refid) |>
  select(refid, study, arm_id, arm, arm_n, los_m, los_sd, los_med, los_rl, los_ru, los_iqrl, los_iqru, los_95l, los_95u, country) |> 
  mutate(
    arm = ifelse(arm == "Gen", "Gen", "Reg"),
    los_m = ifelse(study == "Xu 2020" & arm_id == 2, 4.15, los_m),
    arm_n = ifelse(study == "Xu 2020" & arm_id == 2, 160, arm_n),
    los_sd = ifelse(study == "Xu 2020" & arm_id == 2, 1.0, los_sd),
    los_m = ifelse(study == "Shin 2020" & arm_id == 1, 6.913, los_m), #combine_contin(60, 58, 6.83, 7.0, 3.038, 3.041) used impute_sd
    arm_n = ifelse(study == "Shin 2020" & arm_id == 1, 118, arm_n),
    los_sd = ifelse(study == "Shin 2020" & arm_id == 1, 3.028, los_sd),
    los_m = ifelse(study == "Shin 2020" & arm_id == 3, 7.667, los_m),
    # arm_n = ifelse(study == "Shin 2020" & arm_id == 3, 58, arm_n),
    los_sd = ifelse(study == "Shin 2020" & arm_id == 3, 4.561, los_sd),
    los_sd = ifelse(study == "Tzimas 2018", 0.3816847, los_sd), # sd_bwgrp_fun(8.25, 8.21, 37, 33, .663)
    ) |> 
  filter(!(study == "Xu 2020" & arm_id == 3)) |> 
  filter(!(study == "Shin 2020" & arm_id == 2)) |>
  rename_with(~ str_remove(.x, "los_")) |> 
  select(!matches("95")) |> 
  pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  group_by(study) |> 
  fill(arm_n_Gen:iqru_Reg) |> 
  slice(2) |> 
  ungroup() |> 
  arrange(year) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  mutate(
    surgs_single = ifelse(str_detect(study, "Neuman"), "Ortho", surgs_single)
    ) |> 
  arrange(surgs_single, year)

los_meta <- metacont(
  # cluster = study,
  n.e = arm_n_Reg, 
  n.c = arm_n_Gen,
  common =  TRUE,
  mean.e = m_Reg,
  sd.e = sd_Reg,
  median.e = med_Reg,
  q1.e = iqrl_Reg,
  q3.e = iqru_Reg,
  min.e = rl_Reg,
  max.e = ru_Reg,
  mean.c = m_Gen,
  sd.c = sd_Gen,
  median.c = med_Gen,
  q1.c = iqrl_Gen,
  q3.c = iqru_Gen,
  min.c = rl_Gen,
  max.c = ru_Gen,
  data = los_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  studlab = study
)

png("assets/kq3_los_meta.png", width = 10.42, height = 5.2, units = "in", res = 300)
forest(los_meta,
  sortvar = country,
  weight.study = "random",
  common =  FALSE,
  label.e = "Neuraxial ",
  label.c = "General   ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  # digits.pval.Q = 2,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "left",
  print.pval.Q = FALSE,
  # sortvar = -TE,
  xlim = c(-10, 10),
  # at = c(-80, -60, -40, -20, 0, 20, 40),
  rightcols = c("effect", "ci", "surgs_single", "country"),
  rightlabs = c("MD ", "(95% CI)   ", "Procedure", "Country"),
  xlab = "Favors: Neuraxial                                    General          ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4,
  text.addline1 = "If the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, range, or between-arm p-value."
)
dev.off()
```

![](assets/kq3_los_meta.png){#fig-los fig.align="left" width="75%"}

<br/>

## **Discharge Location**

<caption_mg> `r table_ref()` Discharge location in studies comparing neuraxial with general anesthesia. </caption_mg>

```{r dc_loc}
#| eval: true
dc_loc_dat <- dichot_dat |>
  filter(if_any(starts_with("disch_"), ~ !is.na(.x))) |>
  mutate(
    arm_n = ifelse(!is.na(disch_update_arm_n), disch_update_arm_n, arm_n),
    disch_nper = n_per_fun(disch_inst_n, arm_n, n_sig_dig = 1),
    disch_per = disch_inst_n/arm_n
  ) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  mutate(design_surg = paste0(design_f_lab, " — ", surgs_noabbr_f)) |>
  select(refid, refid, arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, design_surg, country, starts_with("disch_")) |>
  select(-c(disch_inst_per:disch_inst_95high)) |> 
  arrange(refid, arm_id) |> 
  group_by(study) |> 
  mutate(
    ref_disch_n = ifelse(arm_id > 1, first(disch_inst_n), NA),
    ref_disch_n = ifelse(str_detect(study, "O'Brien") & arm_id == 3, NA, ref_disch_n),
    ref_arm_n = ifelse(arm_id > 1, first(arm_n), NA),
    rr_ci = ifelse(!is.na(ref_disch_n), rr_ci_fun(disch_inst_n, arm_n, ref_disch_n, ref_arm_n), NA)) |> 
  select(-starts_with("ref_")) 
```

```{r dc_loc_gt}
dc_loc_dat |> 
  group_by(study_l) |>
  arrange(study, arm_id) |> 
  mutate(
    study_l = ifelse(row_number() == 1, study_l, NA),
    country = ifelse(row_number() == 1, country, NA),
    bar = case_when(
      str_detect(arm, "Neur") ~ bar_prop(disch_per * 100, "#A93226"),
      .default = bar_prop(disch_per * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  select(refid, study_l, arm_n, arm, age_table, country, disch_nper, bar, rr_ci, everything()) |> 
  group_by(design_surg) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial — Orthopedic")) |>
  cols_hide(c(refid, arm_id, study, disch_update_arm_n, asa_ps_incl, disch_inst_n, disch_per)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Arm",
    age_table        = "   Age",
    country          = "Country",
    disch_nper       = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  tab_spanner(label = "Discharge to Institution", columns = c(disch_nper:bar), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  # fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l          ~ px(175),
    arm_n            ~ px(45),
    arm              ~ px(50),
    age_table        ~ px(90),
    country          ~ px(80),
    disch_nper       ~ px(80),
    bar              ~ px(120),
    rr_ci            ~ px(120)
    ) |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, age_table, arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(rr_ci, country))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n, disch_nper))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, age_table, arm, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rr_ci, country))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(disch_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, arm, age_table, disch_nper), rows = str_detect(arm, "Neur"))) |> 
  tab_footnote("Gen: general; Neur: neuraxial; RR: risk ratio.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table)))

```

<br/>

## **Mortality**

```{r mortality_data}
#| eval: true
mortality_dat <- dichot_dat |>
  filter(if_any(starts_with("mort"), ~ !is.na(.x))) |> 
  # filter(arm_n != mort_update_arm_n) |> 
  # select(refid, arm_n, mort_update_arm_n)
  mutate(
    # arm_n use mort_update_arm_n if different
    arm_n = ifelse(!is.na(mort_update_arm_n), mort_update_arm_n, arm_n)
  ) |> 
  select(refid, refid_c, arm_id, arm, year, study, study_l, design_f_lab, arm_n, matches("_n|per") & starts_with("mort"), -mort_update_arm_n) |> 
  pivot_longer(
    cols = starts_with("mort"),
    names_to = "estimand",
    values_to = "estimate",
    values_drop_na = TRUE
  ) |>
  mutate(
    mort_period = str_remove(estimand, "_.*"),
    estimand = str_replace(estimand, ".*_(.*)$", "\\1")
  ) |>
  pivot_wider(
    names_from = estimand,
    values_from = estimate
  ) |>
  mutate(
    mort_period = case_when(
      str_detect(mort_period, "hosp") ~ "Hospital",
      str_detect(mort_period, "mort30") ~ "30-day",
      str_detect(mort_period, "mort90") ~ "90-day",
      str_detect(mort_period, "mort1") ~ "1-year"
    ), 
    per = per/100
  ) |>
  rename(mort_n = n, mort_per_rep = per) |>
  # # for Park 2020 and Dai 2021 reported both in-hospital and 30-day
  # mutate(
  #   refid_c = ifelse(study %in% c("Park 2020", "Dai 2021") & mort_period == "30-day", paste0(refid_c, "-30"), refid_c)
  # ) |> 
  arrange(refid_c, arm_id) |>
  mutate(
    ref_arm_n = arm_n,
    ref_mort_n = mort_n
  ) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() > 1, NA, ref_mort_n)
  ) |>
  fill(ref_arm_n, ref_mort_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() == 1, NA, ref_mort_n)
  ) |>
  ungroup() |> 
  left_join(study_char_dat |> select(refid, surgs_single_f), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(asa_combine |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |> 
  mutate(mort_percent = mort_n/arm_n,
         mort_period = factor(mort_period, levels = c("Hospital", "30-day", "90-day", "1-year"))) |>
  select(refid, refid_c, arm_id, year, study, study_l, arm_n, arm, asa_ps_incl, age_table, design_f_lab, mort_n, mort_percent, ref_mort_n, ref_arm_n, mort_period, mort_per_rep, surgs_single_f)

```

<caption_mg> `r table_ref()` Reported in-hospital, 30-day, and 1-year mortality.</caption_mg>

```{r mortality_rct_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  group_by(mort_period, study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(arm, "Gen") ~ bar_prop(mort_percent * 100, "#969696"),
      .default = bar_prop(mort_percent * 100, "#A93226")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    # study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    # surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "—"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  arrange(year, refid_c, arm_id) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day", "1-year")) |>
  cols_label(
    study_l = "Study",
    arm_n = "N  ",
    arm = "Arm",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, arm, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, arm, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n, mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, arm, age_table, mort_n_percent), rows = str_detect(arm, "Neur|Block"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(65),
    arm ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Various: more that one procedure category.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table)))  
  # tab_footnote("Different lengths of follow-up from the same trial.", locations = cells_body(columns = study_l, rows = study %in% c("Su 2016", "Zhang 2019b"))) 

```

<a id="fig-mort-30d"></a>

### *Pooled*

```{r mortality_hosp_30d_meta}
#| eval: true
mortality_rct_meta_dat <- mortality_dat |>
  filter(mort_period %in% c("Hospital", "30-day")) |>
  # exclude Shin 2020 hospital; retain 30-day
  filter(!(study == "Shin 2020" & mort_period == "Hospital")) |> 
  mutate(
    mort_n = case_when(
      study == "Shin 2020" & arm_id == 1 ~ 3,
      .default = mort_n
    ),
    arm_n = case_when(
      study == "Shin 2020" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), arm_n),
      .default = arm_n
    ),
  ) |>
  filter(!(study %in% c("Shin 2020") & arm_id %in% c(2))) |> 
  select(refid, study, arm, mort_n, arm_n, mort_period) 

# NOTE allstudies = FALSE
pairwise_rct_mort_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = FALSE,
  data = mortality_rct_meta_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

```

```{r baseline_risk_plot}
#| eval: false
temp <- pairwise_rct_mort_dat |> 
  mutate(
    rr = exp(TE),
    baseline = mort_n2/arm_n2,
    size = arm_n2 + arm_n1
) |> 
  select(rr, baseline, size, TE)

# create plot of log(rr) vs baseline risk (logit scale) with symbols proportional to study size
ggplot(temp, aes(x = baseline, y = log(rr), size = size)) +
  geom_point(col = "red", pch = 16) +
  scale_size_area(max_size = 12) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_vline(xintercept = 0.01, linetype = "dashed") +
  # scale_y_continuous(limits = c(0.1, 5)) +
  labs(x = "Baseline risk", y = "Log(Risk ratio)") +
  theme_bw()

with(temp, plot(baseline, log(rr), cex = log(size/20), pch = 16, col = "red", xlab = "Baseline Risk", ylab = "Log(Risk ratio)", ylim = c(-1, 2), xlim = c(-0.0, 0.04)))

hipfx_study <- study_char_dat |> 
  select(refid, study) |> 
  filter(refid %in% ortho_hipfx_only_refid) |> 
  pull(study)

temp <- bubble_plot_data(mort_rct_meta) |> 
  mutate(slab = ifelse(slab %in% hipfx_study, paste0(slab, "*"), slab))

fitted_meta <- metafor::rma(yi_meta, vi_meta, mods = ~ control_event_rate, slab = slab, data = temp)

png("assets/gen_reg_delirium_meta_bubble.png", width = 8, height = 6, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
metafor::regplot(fitted_meta,
  xlab = "General anesthesia event rate (baseline risk)",
  ylab = "RR (risk ratio)", 
  # xlim = c(-0.015, 0.3),
  # at = log(c(0.2, 0.4, 0.7, 0.97, 2, 4, 8)),
  # predlim = c(0, 0.30),
  atransf = exp,
  labsize = 0.7, 
  las = 1,
  label = TRUE,
  offset = c(0.4),
  lwd = 0.5,
)

abline(log(0.97), 0, col = "red", lty = 2, lwd = 0.75)
dev.off()


```

<caption_mg> `r figure_ref()` **Risk ratio** for hospital or 30-day mortality. </caption_mg>

```{r mort_rct_meta}
#| echo: false
#| include: false

mort_meta_dat <- pairwise_rct_mort_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |>
  mutate(
    year = str_extract(study, "\\d{4}"),
    surg_hip_oth = ifelse(refid %in% ortho_hipfx_only_refid, "Hip Fx", "Other"),
    surgs_single = ifelse(surg_hip_oth == "Hip Fx", "Hip Fx", surgs_single)
  ) |>
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid, surg_hip_oth, surgs_single) 

# total_meta(mort_meta_dat)
# refid_meta_fun(mort_meta_dat)

mort_rct_30d_meta <- metabin(event2, n2, event1, n1,
  data = mort_meta_dat,
  studlab = study,
  subgroup = surg_hip_oth,
  # cluster = refid,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "HK",
  prediction = FALSE,
  allstudies = FALSE,
)

# summary(plac_meta)
png("assets/kq3_mort_rct_meta.png", width = 9.03, height = 4.85, units = "in", res = 300)
forest(mort_rct_30d_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Neuraxial",
  label.c = "General",
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("RR", "(95% CI)", "Procedure"),
  just.addcols.right = "left",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  prediction.subgroup = TRUE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  subgroup = FALSE,
  test.subgroup = FALSE,
  # pscale = 10000,
  digits = 2, 
  print.pval.Q = FALSE,
  # xlim = c(0.1, 20),
  xlab = "Favors: Neuraxial                      General     ",
  addrows.below.overall = 4
)
dev.off()

# subgroup data edit as needed 
# temp <- update(mort_rct_30d_meta, method.random.ci = "classic", subset = surgs_single != "Hip Fx", allstudies = FALSE, sm = "RD")
# forest(temp, pooled.events = TRUE, pscale = 1000)

```
![](assets/kq3_mort_rct_meta.png){fig.align="left" width="65%"}

<foot_mg> 
Hip fracture RR 0.75 (95% CI, 0.34–1.64) <br/>
Other RR 0.20 (95% CI, 0.02–1.71)
</foot_mg> 

<br/>

<caption_mg> `r figure_ref()` **Risk difference (per 1000)** for hospital or 30-day mortality. </caption_mg>

```{r mort_rct_rd_meta}
#| echo: false
#| include: false 

png("assets/kq3_mort_rct_rd_meta.png", width = 9.03, height = 4.85, units = "in", res = 300)
mort_rct_30d_rd_meta <- update(mort_rct_30d_meta, sm = "RD", method.random.ci = "HK")
forest(mort_rct_30d_rd_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Neuraxial",
  label.c = "General",
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("RD", "(95% CI)", "Procedure"),
  just.addcols.right = "left",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  prediction.subgroup = TRUE,
  print.subgroup.name = FALSE,
  subgroup = FALSE,
  test.subgroup = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-50, 50),
  xlab = "Favors: Neuraxial                      General     ",
  addrows.below.overall = 4
)
dev.off()

# subgroups
# update(mort_rct_meta, method.random.ci = "classic", subset = surgs_single != "Hip Fx", allstudies = FALSE, pscale = 1000)

```
![](assets/kq3_mort_rct_rd_meta.png){fig.align="left" width="65%"}

<a id="fig-mort-90d"></a>

<foot_mg>  
Hip fracture RD -3.6 (95% CI, -16.6 to 9.5)<br/>
Other RD -8.8 (95% CI, -21.1 to 3.6)
</foot_mg> 

<br/>

```{r mortality_hosp_90d_meta}
#| eval: true
mortality_rct_meta_90d_dat <- mortality_dat |>
  filter(mort_period %in% c("90-day")) |>
  mutate(
    delitotal_n = case_when(
      study == "Shin 2020" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), mort_n),
      .default = mort_n
    ),
    arm_n = case_when(
      study == "Shin 2020" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), arm_n),
      .default = arm_n
    )
  ) |>
  filter(!(study %in% c("Shin 2020") & arm_id %in% c(2))) |> 
  select(refid, study, arm, mort_n, arm_n, mort_period) 

# NOTE: allstudies = FALSE
pairwise_rct_mort_90d_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = FALSE,
  data = mortality_rct_meta_90d_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)
```

<caption_mg> `r figure_ref()` **Risk ratio** for 90-day mortality. </caption_mg>

```{r mort_rct_90d_meta}
#| echo: false
#| include: false

mort_meta_90d_dat <- pairwise_rct_mort_90d_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |>
  mutate(
    year = str_extract(study, "\\d{4}"),
    surg_hip_oth = ifelse(refid %in% ortho_hipfx_only_refid, "Hip Fx", "Other"),
    surgs_single = ifelse(surg_hip_oth == "Hip Fx", "Hip Fx", surgs_single)
  ) |>
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid, surg_hip_oth, surgs_single) 

# total_meta(mort_meta_dat)
# refid_meta_fun(mort_meta_dat)

mort_rct_90d_meta <- metabin(event2, n2, event1, n1,
  data = mort_meta_90d_dat,
  studlab = study,
  # cluster = refid,
  sm = "RR",
  method.random.ci = "classic",
  method.tau = "REML",
  prediction = TRUE,
  allstudies = FALSE,
)

# summary(plac_meta)

png("assets/kq3_mort_rct_90d_meta.png", width = 9, height = 3.05, units = "in", res = 300)
forest(mort_rct_90d_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Neuraxial",
  label.c = "General",
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("RR", "(95% CI)", "Procedure"),
  just.addcols.right = "left",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  # pscale = 10000,
  digits = 2, 
  print.pval.Q = FALSE,
  # xlim = c(0.1, 20),
  xlab = "Favors: Neuraxial                      General     ",
  addrows.below.overall = 4
)
dev.off()

```
![](assets/kq3_mort_rct_90d_meta.png){fig.align="left" width="65%"}

<caption_mg> `r figure_ref()` **Risk difference (per 1000)** for 90-day mortality. </caption_mg>

```{r mort_rct_rd_90dmeta}
#| echo: false
#| include: false

png("assets/kq3_mort_rct_rd_90dmeta.png", width = 8.93, height = 3, units = "in", res = 300)
mort_rct_90d_rd_meta <- update(mort_rct_90d_meta, sm = "RD")
forest(mort_rct_90d_rd_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Neuraxial",
  label.c = "General",
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("RD", "(95% CI)", "Procedure"),
  just.addcols.right = "left",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-50, 50),
  xlab = "Favors: Neuraxial                      General     ",
  addrows.below.overall = 4
)
dev.off()

```
![](assets/kq3_mort_rct_rd_90dmeta.png){fig.align="left" width="64%"}

<br/>

## **Risk of Bias**

<caption_mg> `r figure_ref()` Summary risk of bias assessments for randomized clinical trials (unweighted). </caption_mg>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_dat |>
  filter(!is.na(Study) & refid %in% kq3_refid) |> 
  left_join(study_char_dat |> select(refid, n_analyze), by = "refid") |>
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind", weighted = FALSE)
```

<caption_mg> `r figure_ref()` Summary risk of bias assessments for randomized clinical trials (weighted by sample size). </caption_mg>

```{r rob2_summary_overall_weighted, fig.height = 3, out.width = "60%"}
rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind", weighted = TRUE, Weight = n_analyze)
```

<caption_mg> `r figure_ref()` Risk of bias assessments for randomized clinical trials. </caption_mg>

```{r rob_overall_study, out.width = "55%", fig.height = 10}
#| warning: false
rob_traffic_light(rob_temp_dat |> select(-n_analyze), psize = 4, tool = "ROB2", colour = "colourblind")
```

<br/>

## **References** {#references}
