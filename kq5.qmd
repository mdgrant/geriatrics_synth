---
title: "Potentially Inappropriate Medications"
editor: source
toc-title: "**Potentially Inappropriate Medications**"
toc-location: "left"
toc-depth: 3
toc_float: 
  collapsed: true
tbl-cap-location: "top"
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq5.bib"
csl: "bib/anesthesiology.csl"
link-citations: false
nocite: '@*'
---

## **Key Question**

Among older patients undergoing surgery and anesthesia, do medications with potential central nervous system effects (i.e., benzodiazepines, antipsychotics, anticholinergics, ketamine, corticosteroids, gabapentin, or NSAIDs) administered during the perioperative period increase the risk of postoperative delirium or other adverse outcomes?

(Original Question: Among older patients undergoing surgery and anesthesia, do commonly used potentially inappropriate medications administered during the perioperative period increase the risk of postoperative delirium or other adverse outcomes?)

```{r, read_data}
#| label: read_data
#| include: false
source("code/load_data.R")

study_char_dat <- data_kq(study_char_dat, kq5_refid) |>
  mutate(across(matches("study"), ~ ifelse(refid %in% c(5163, 17131:17133), str_replace_all(.x, "Memtsoudis 2019\\w", "Memtsoudis 2019 THA"), .x))) |> 
  mutate(across(matches("study"), ~ ifelse(refid %in% c(17134:17139), str_replace_all(.x, "Memtsoudis 2019\\w", "Memtsoudis 2019 TKA"), .x))) |> 
  mutate(
    design_f = fct_recode(design_f, "cluster_crossover" = "crossover"),
    design_f_lab = fct_recode(design_f_lab, "Randomized Cluster Crossover Trial" = "Crossover Trial")
  )

study_arm_dat <- data_kq(study_arm_dat, kq5_refid) |>
  mutate(across(matches("study"), ~ ifelse(refid %in% c(5163, 17131:17133), str_replace_all(.x, "Memtsoudis 2019\\w", "Memtsoudis 2019 THA"), .x))) |> 
  mutate(across(matches("study"), ~ ifelse(refid %in% c(17134:17139), str_replace_all(.x, "Memtsoudis 2019\\w", "Memtsoudis 2019 TKA"), .x))) |> 
  mutate(
    design_f = fct_recode(design_f, "cluster_crossover" = "crossover"),
    design_f_lab = fct_recode(design_f_lab, "Randomized Cluster Crossover Trial" = "Crossover Trial")
  )

contin_dat <- data_kq(contin_dat, kq5_refid) |>
  mutate(across(matches("study"), ~ ifelse(refid %in% c(5163, 17131:17133), str_replace_all(.x, "Memtsoudis 2019\\w", "Memtsoudis 2019 THA"), .x))) |> 
  mutate(across(matches("study"), ~ ifelse(refid %in% c(17134:17139), str_replace_all(.x, "Memtsoudis 2019\\w", "Memtsoudis 2019 TKA"), .x))) |>   
  mutate(
    design_f = fct_recode(design_f, "cluster_crossover" = "crossover"),
    design_f_lab = fct_recode(design_f_lab, "Randomized Cluster Crossover Trial" = "Crossover Trial")
  )

dichot_dat <- data_kq(dichot_dat, kq5_refid) |> 
  mutate(across(matches("study"), ~ ifelse(refid %in% c(5163, 17131:17133), str_replace_all(.x, "Memtsoudis 2019\\w", "Memtsoudis 2019 THA"), .x))) |> 
  mutate(across(matches("study"), ~ ifelse(refid %in% c(17134:17139), str_replace_all(.x, "Memtsoudis 2019\\w", "Memtsoudis 2019 TKA"), .x))) |>   
  mutate(
    design_f = fct_recode(design_f, "cluster_crossover" = "crossover"),
    design_f_lab = fct_recode(design_f_lab, "Randomized Cluster Crossover Trial" = "Crossover Trial"),
    delirium_inc_prop = !is.na(delitotal_n), 
    delirium_day_max = pmax(delirium_n1, delirium_n2, delirium_n3, delilast_n, na.rm = TRUE),
    delitotal_n = ifelse(is.na(delitotal_n), delirium_day_max, delitotal_n),
  ) |> 
  relocate(delirium_day_max, .after = delitotal_n) 

likert_dat <- data_kq(likert_dat, kq5_refid) |> 
  mutate(across(matches("study"), ~ ifelse(refid %in% c(5163, 17131:17133), str_replace_all(.x, "Memtsoudis 2019\\w", "Memtsoudis 2019 THA"), .x))) |> 
  mutate(across(matches("study"), ~ ifelse(refid %in% c(17134:17139), str_replace_all(.x, "Memtsoudis 2019\\w", "Memtsoudis 2019 TKA"), .x)))

```

<!-- ## **Outcome Importance** -->

<!-- <font size = 4> `r table_ref()`</font> Rankings for the 5 most important outcomes (11 respondents). -->

<!-- ```{r outcome_priority} -->
<!-- #| include: true -->
<!-- #| eval: true -->
<!-- outcome_dat <- rankings("KQ5") -->
<!-- outcome_tab(outcome_dat, 11) -->
<!-- ``` -->

## **Outcomes Reported**

<font size = 4> `r table_ref()` Dichotomous and count outcomes. </font>

```{r dichot_outcome_freq}
#| label: dichot_outcome_freq
dichot_freq_fun(dichot_dat)
```

<font size = 4> `r table_ref()` Publications reporting continuous outcomes (not necessarily unique studies). </font>

```{r cont_outcome_freq}
#| label: cont_outcome_freq
contin_freq_fun(contin_dat)
```

<font size = 4> `r table_ref()` Likert and ordinal outcomes. </font>

```{r likert_outcome_freq}
#| label: likert_outcome_freq
likert_freq_fun(likert_dat)
```

## **Included Studies**

<font size = 4> `r table_ref()` Number of studies by design. </font>

```{r studies_design}
#| label: studies_design

study_char_dat |>
  filter(refid %in% kq5_refid) |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple publications from single study but only 1 if cloned
  slice(1) |> 
  ungroup() |> 
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(
    design_f_lab = "Design", 
    total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "2.5in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |>
  tab_style(
    style = list(
      cell_fill(color = "#E4F3FE"),
      cell_text(weight = "bold"),
      cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))
    ),
    locations = cells_body(
      rows = design_f_lab == "Total"
    )
  ) |> 
    tab_style(
    style = list(
      cell_text(align = "left")),
      locations = cells_body(
        columns = design_f_lab
      )
    ) |> 
  tab_footnote("Studies with multiple publications counted only once (applies to 3 trials with 2 publications [see next table]).")
```

## **Design, centers, country, surgery**

<font size = 4> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </font>

```{r drugs_by_study}
#| label: drugs_by_study
# DATA: drug_classes_by_study — refid, arm_up is pim drug class

## drug_classes_by_study concatenated; by study ------- (2023-09-29 13:12) @----
drug_classes_by_study <- study_arm_dat |>
  select(refid, design_f, study, arm_id, arm_n, kq5_antichol:kq5_benzo_shortlong) |>
  filter(if_any(starts_with("kq"), ~ !is.na(.))) |> # arms with relevant drugs; other all NA
  rename_all(~ str_replace(., "kq5_", "")) |>
  rename(benzo_agent = benzo_drug) |>
  mutate(
    benzo = case_match(
      benzo_shortlong,
      "short" ~ "Benzodiazepine (sa)",
      "long" ~ "Benzodiazepine (la)",
      "any" ~ "Benzodiazepine (any)",
      "ns" ~ "Benzodiazepine (ns)",
      "any_ns" ~ "Benzodiazepine (any/ns)",
    )
  ) |>
  unite(agents, c(antichol:nonbenzo, gabapentin_drug), na.rm = TRUE, sep = "|") |> # multiple PIMs
  mutate(
    agents = str_replace(agents, "antichol", "Anticholinergics"),
    agents = str_replace(agents, "antipsych", "Antipsychotics"),
    agents = str_replace(agents, "corticoster", "Corticosteroids"),
    agents = str_replace(agents, "nsaid", "NSAIDs"),
    agents = str_replace(agents, "h2antag", "H2 blockers"),
    agents = str_replace(agents, "nonbenzo", "Nonbenzodiazepine hypnotics"),
    agents = str_replace(agents, "benzo_any", "Benzodiazepines (any)"),
    agents = str_replace(agents, "gabapentin", "Gabapentin"),
  ) |>
  select(refid, study, agents) |>
  distinct() |>
  group_by(study) |>
  mutate(
    agents_up = paste0(agents, collapse = "|"),
    # clean up multiple categories consequence of data structure
    agents_up = str_replace(agents_up, "Benzodiazepine \\(any\\)\\|Benzodiazepine \\(sa\\)\\|Benzodiazepine \\(la\\)", "Benzodiazepine (sa)|Benzodiazepine (la)"),
    agents_up = ifelse(str_detect(study, "Memtsoudis"), "Benzodiazepine (any)|Benzodiazepine (sa)|Benzodiazepine (la)|Corticosteroids|NSAIDs", agents_up)
  ) |>
  slice(1) |>
  ungroup() |>
  select(-c(study, agents))

```

```{r included_studies}
#| label: included_studies

## table of included studies -------------------------- (2023-09-29 10:43) @----
included_dat <- study_char_dat |>
  select(refid, starts_with("design"), study, study_l, study_l_w_linked, year, n_enroll, n_analyze, centers, country, non_vh_hdi, surgs, year) |>
  mutate(surgs = ifelse(refid == 7722, "Non-cardiac", surgs)) |> # Duprey 2022
  select(refid, study, study_l, study_l_w_linked, design_f_lab, centers, n_enroll, country, non_vh_hdi, surgs, year) |>
  left_join(drug_classes_by_study, by = "refid") |>
  mutate(
    agents_up = str_replace_all(agents_up, "\\|", "<br/>"), # easier to see in table
    agents_up = ifelse(study == "Spence 2020", str_replace(agents_up, "<br/>", ""), agents_up), # both arms short-acting benzo
    surgs = str_replace_all(surgs, "\\|", "<br/>")
  ) |>
  relocate(agents_up, .before = surgs) |>
  arrange(agents_up, design_f_lab, year, surgs)

## included gt ---------------------------------------- (2023-09-29 10:44) @----
included_dat |>
  filter(!refid %in% c(17130:17133, 17135:17139)) |> # remove duplicate Memtsoudis 2019
  mutate(study_l = study_l_w_linked,
         study_l = str_replace(study_l, "\\[Memtsoudis 2019 THA\\]\\(evidence_tables.html#5163\\) \\(\\[Memtsoudis 2019 THA\\]\\(evidence_tables.html#17130\\)\\)", "[Memtsoudis 2019 THA](evidence_tables.html#5163)"),
         study_l = str_replace(study_l, "\\[Memtsoudis 2019 TKA\\]\\(evidence_tables.html#17134\\) \\(\\[Memtsoudis 2019 TKA\\]\\(evidence_tables.html#5163\\)\\)", "[Memtsoudis 2019 TKA](evidence_tables.html#17134)")) |> 
  select(-study_l_w_linked) |> 
  group_by(design_f_lab) |>
  gt(id = "one") |>
  row_group_order(c("Randomized Clinical Trial", "Randomized Cluster Crossover Trial", "Before-After/Time Series", "Nonrandomized Trial", "Prospective Cohort", "Retrospective Cohort", "Case-Control")) |> 
  cols_label(
    refid       = "ID",
    study_l     = "Study",
    n_enroll    = "Enrolled",
    country     = "Country",
    centers     = "Centers",
    agents_up   = "Drug Class",
    surgs       = "Surgery",
  ) |>
  cols_width(
    refid      ~ px(50),
    study_l    ~ px(235),
    n_enroll   ~ px(65),
    centers    ~ px(60),
    country    ~ px(90),
    agents_up  ~ px(210),
    surgs      ~ px(150)
    )  |>
  cols_hide(c(non_vh_hdi, year, study)) |>
  fmt_markdown(columns = c(study_l, agents_up, surgs)) |>
  fmt_number(columns = c(n_enroll, centers), use_seps = TRUE, drop_trailing_zeros = TRUE) |> 
  sub_missing(columns = everything(), missing_text = "") |>
  tab_footnote(
    footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."),
    locations = cells_column_labels(columns = country)
  ) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), locations = cells_body(columns = country, rows = !is.na(non_vh_hdi)))  |>
  tab_footnote(footnote = md("Described as various or more than 4 different types of surgery."), locations = cells_body(columns = surgs, surgs == "Various")) |>
  gt_theme_mg() |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c("refid"))) |>
  tab_style(style = cell_text(v_align = "top"), locations = cells_body(columns = c(everything()))) |>
  opt_footnote_marks(marks = "letters") |>
  tab_footnote("Antichol: anticholinergics; Antipsych: antipsychotics; la: long-acting; sa: short-acting; ns: not stated; GI: gastrointestinal; Ortho: orthopedic; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular.")

```

### Country Summary

<font size = 4> `r table_ref()` Summary of studies by country where conducted. </font>

```{r country}
#| label: country

## country table -------------------------------------- (2023-09-29 10:54) @----
study_char_dat |>
  mutate(linked_references = ifelse(is.na(linked_references), refid, linked_references)) |> 
  slice(1, .by = linked_references) |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
  gt_theme_mg()

```

```{r pim_drug}
#| label: pim_drug
#| include: false

## multiple categorization (old) ---------------------- (2023-09-29 13:11) @---- 
# drug_classes_by_study <- drug_classes_by_study |>
#   mutate(
#     agents_up = ifelse(refid == 7722, "Multiple", agents_up) # Duprey 7722
#     # agents_up = ifelse(str_count(agents_up, "\\|") > 0, "Multiple", agents_up),
#     # temp fix for Duprey until data entered
#   )

## get factor labels and levels for drugs ------------- (2023-01-10 16:20) @----
drug_f_levels <- read_csv("data/kq5_levels_labels.csv") |> pull(level)
drug_f_labels <- read_csv("data/kq5_levels_labels.csv") |> pull(label)

## kq5_drug_by_arm ------------------------------------ (2023-01-10 16:21) @----
# by arm pim and comparators -------------------------- (2023-01-15 15:24) @----
# CODE: 2023-09-29 11:48 verified and updated all _drug variable not missing (corrected Distiller)
drug_by_arm <- study_arm_dat |> 
  # filter(refid == 2730) |> 
  select(refid, year, design_f_lab, study, study_l, arm_id, arm_n, contains(c("kq5", "kq6")), starts_with("inapp"), anesth_type) |>
  filter(!(study == "Duprey 2022" & arm_id %in% c(1,2,3,4))) |> 
  # select(refid, contains("nsaid")) |> filter(if_any(contains("nsaid"), ~ !is.na(.x))) #verify by class drug category and drug entered:
  rename(
    control_desc_kq5 = kq5_control_desc,
    control_desc_kq6 = kq6_control_desc,
    interv_desc_kq5 = kq5_interv_desc,
    interv_desc_kq6 = kq6_interv_desc,
    none_kq5 = kq5_none,
    none_kq6 = kq6_none,
    other_spec_kq5 = kq5_other_spec,
    other_spec_kq6 = kq6_other_spec,
    notes_kq5 = kq5_notes,
    notes_kq6 = kq6_notes,
    arm_kq5 = arm_kq5_pim,
    arm_kq6 = arm_kq6_proph_meds
  ) |>
  mutate(
    none = coalesce(none_kq5, none_kq6),
    none = ifelse(str_detect(none, "other"), tolower(coalesce(other_spec_kq5, other_spec_kq6)), none)
  ) |>
  rename_with(~ str_replace(.x, "^kq[5-6]_", "")) |> # update kq5&6 study kq5 arms with kq6 data
  unite("arm_up", none, antichol, antipsych, any_cort_drug, nsaid, h2antag, benzo, nonbenzo, dexmed, ketamine, melatonin, ramelteon, gabapentin_drug, sep = "|", na.rm = TRUE, remove = TRUE) |>
  unite("drug", contains("drug"), sep = "|", na.rm = TRUE, remove = TRUE) |>
  unite("other_spec", contains("other_spec"), sep = "|", na.rm = TRUE, remove = TRUE) |>
  unite("control_desc", contains("control_desc"), sep = "|", na.rm = TRUE, remove = TRUE) |>
  mutate(
    control_desc = firstup(control_desc),
    arm_up = str_replace(arm_up, "kq[5-6]_", ""),
    arm_up = case_when(
      benzo_shortlong == "any" ~ str_replace(arm_up, "benzo", "benzo_any"),
      benzo_shortlong == "long" ~ str_replace(arm_up, "benzo", "benzo_long"),
      benzo_shortlong == "short" ~ str_replace(arm_up, "benzo", "benzo_short"),
      benzo_shortlong == "ns" ~ str_replace(arm_up, "benzo", "benzo_ns"),
      .default = arm_up
    ),
    drug_up = case_when(
      study == "Spence 2020" & arm_id == 1 ~ "Midazolam (restricted)",
      study == "Spence 2020" & arm_id == 2 ~ "Midazolam (liberal)",
      arm_up == "cort_any" ~ "Corticosteroid (any)",
      arm_up == "cort_dex" ~ "Dexamethasone",
      arm_up == "cort_methylpred" ~ "Methylprednisolone",
      arm_up == "dexmedetomidine" ~ "Dexmedetomidine",
      arm_up == "omeprazole" ~ "Omeprazole",
      arm_up == "gabapentin" ~ "Gabapentin",
      drug == "antichol_any" ~ "Anticholinergic (any)",
      drug == "antichol_other" ~ firstup(other_spec),
      drug == "antipsych_other" ~ firstup(other_spec),
      drug == "antipsych_any" ~ "Antipsychotic (any)",
      drug == "antipsych_halo" ~ "Haloperidol",
      drug == "antipsych_olan" ~ "Olanzapine",
      arm_up == "benzo_ns" & drug == "benzo_any" ~ "Benzodiazepine (ns sa/la)",
      arm_up == "benzo_any" & drug == "benzo_any" ~ "Benzodiazepine (any sa/la)",
      drug == "benzo_midaz" ~ "Midazolam",
      drug == "benzo_remimaz" ~ "Remimazolam",
      drug == "benzo_other" ~ firstup(other_spec),
      drug == "nonbenzo_zol" ~ "Zolpidem",
      drug == "nsaid_any" ~ "NSAID (any)",
      drug == "nsaid_celecox" ~ "Celocoxib",
      drug == "nsaid_flurbi" ~ "Flurbiprofen",
      drug == "nsaid_keto" ~ "Ketoprofen",
      arm_up == "benzo_long" & drug == "benzo_any" ~ "Benzodiazepine (any la)",
      arm_up == "benzo_short" & drug == "benzo_any" ~ "Benzodiazepine (any sa)",
      drug == "nsaid_other" & str_detect(other_spec, "cyclooxygenase") ~ "COX-2 inhibitor",
      drug == "h2antag_famo" ~ "Famotidine",
      drug == "nsaid_keto" ~ "Ketoprofen",
      drug == "h2antag_famo|benzo_midaz" ~ "Famotidine/Midzolam/Dexamethasone",
      drug == "gabapentin" ~ "Gabapentin",
      .default = firstup(arm_up)
    ),
  ) |>  
  select(refid, year, arm_id, study_l, arm_n, arm_up, drug_up, control_desc)

dosing_ps_anesth_age_mmse <- study_arm_dat |>
  select(refid, arm_id, contains(c("inapp_med_doseperday", "dose_measure", "per_day", "inapp_med_days", "inapp_med_dose"))) |> 
  rename_with(~ str_replace(.x, "^kq[5-6]_", "")) |> 
  mutate(
    per_day = case_when(
      inapp_med_doseperday == 1 ~ "qd",
      inapp_med_doseperday == 2 ~ "bid",
      inapp_med_doseperday == 3 ~ "tid",
      TRUE ~ NA_character_
    ),
    dose_sched = paste0(inapp_med_dose, dose_measure, " (", per_day, "×", inapp_med_days, "d)"),
    # remove missings
    dose_sched = str_replace_all(dose_sched, "×NAd|NA×|NAd|NA", ""),
    dose_sched = str_replace_all(dose_sched, "\\(\\)", ""),
    dose_sched = str_replace(dose_sched, "\\_", "/"),
    dose_sched = ifelse(str_detect(dose_sched, "dose"), "NR", dose_sched),
    dose_sched = ifelse(refid == 7522 & arm_id == 2, "0.5-1.0mg", dose_sched), # Leigheb 2022
    ) |> 
  select(refid, arm_id, dose_sched) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |> 
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid"))

timing <- study_arm_dat |> 
  select(refid, arm_id, arm_n, inapp_med_pre:inapp_med_unspec, design_f_lab) |> 
  rename_with( ~ str_remove(.x, "inapp_med_")) |> 
  mutate(
    pre_temp = pre, 
    # induct_temp = induct, 
    intra_temp = coalesce(induct, intra), # combine induction + intraop
    post_temp = post, 
    post = coalesce(post, postprev, posttreat),
    across(pre:unspec, ~ notna_to_x(.x, "▂")),
    across(pre_temp:post_temp, ~ ifelse(!is.na(.x), "\U2586", "\U2581")),
    # across(pre:post, ~ na_to_x(.x, "\U2581")),
    timing_all = paste0(pre_temp, intra_temp, post_temp),
    timing_all = ifelse(timing_all == "▁▁▁", NA, timing_all),
    timing_all = ifelse(refid == 9464 & arm_n == 41, paste0("\U2581", "\U2586", "\U2586"), timing_all),
    timing_all = ifelse(!is.na(unspec), "Unspecified", timing_all)
    ) |> 
  relocate(timing_all, .after = unspec) |> 
  select(-c(postprev, posttreat, pre_temp:post_temp, arm_n))

kq5_by_arm_tab <- drug_by_arm |>
  left_join(dosing_ps_anesth_age_mmse, by = c("refid", "arm_id")) |>
  left_join(timing, by = c("refid", "arm_id")) |>
  select(refid, year, arm_id, design_f_lab, study_l, arm_n, arm_up, drug_up, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose_sched, timing_all, surgs_single_f, pre, induct, intra, post, unspec, control_desc)

# get pim arms and arrange so that pims are last
pim_arm_up <- kq5_by_arm_tab |> 
   select(arm_up) |> 
   distinct() |> 
   pull(arm_up)

pim_arm_up <- pim_arm_up[-c(1,2,4,7,10,11,15)]

pim_order <- c("none", "placebo", "propofol", "dexmedetomidine", "ketamine", "melatonin", "omeprazole", "nonbenzo", "antichol", "antipsych", "benzo_short", "benzo_long", "benzo_any", "benzo_ns", "cort_dex", "cort_methylpred", "cort_any", "nsaid", "h2antag", "cort_dex|h2antag|benzo_short")

kq5_by_arm_tab <- kq5_by_arm_tab |>
  arrange(refid, factor(arm_up, levels = pim_order)) |>
  mutate(
    arm_id_pim = row_number(),
    .by = refid
  ) |>
  relocate(arm_id_pim, .after = arm_id) |> 
  arrange(year, refid, arm_id_pim)
```


```{r save_pim_drug}
#| label: save_pim_drug
#| eval: false

# RESUME: save pim arms for KQ6

# save file for use in KQ6
# write_csv(kq5_by_arm_tab |>
#   filter(refid %in% kq56_refid) |>
#   rename(agents_up = arm_up, drug_f = drug_up) |>
#   select(refid, arm_id, agents_up, drug_f, control_desc), "data/kq56_drug_by_arm.csv")

# data for analysis variables 
kq5_by_arm_tab <- kq5_by_arm_tab |> 
  mutate(arm_f = drug_f,
         arm = as.character(drug_f)) |> 
  select(refid, design_f_lab, agents_up, study_l, arm_id, arm, arm_f, arm_n, drug_f, drug_f_nopim, dose_sched, time_admin, arm_kq56) |> 
  rename(class = arm_kq56)

# NOTE: add arm variable in place of drug_f and arm class for all outcome types
study_arm_dat <- study_arm_dat |> 
  left_join(kq5_by_arm_tab |> select(refid, arm_id, arm, arm_f, class), by = c("refid", "arm_id")) |> 
  relocate(c(arm, arm_f), .after = arm_id)

dichot_dat <- dichot_dat |> 
  left_join(kq5_by_arm_tab |> select(refid, arm_id, arm, arm_f, class), by = c("refid", "arm_id")) |> 
  relocate(c(arm, arm_f), .after = arm_id)

contin_dat <- contin_dat |> 
  left_join(kq5_by_arm_tab |> select(refid, arm_id, arm, arm_f, class), by = c("refid", "arm_id")) |> 
  relocate(c(arm, arm_f), .after = arm_id)

likert_dat <- likert_dat |> 
  left_join(kq5_by_arm_tab |> select(refid, arm_id, arm, arm_f, class), by = c("refid", "arm_id")) |> 
  relocate(c(arm, arm_f), .after = arm_id)
  
```

<br/>

## **Drugs by Study**

```{r, kq5_drugs_tables_function}
# CODE: drugs by studies function for table
kq5_char_drugs_tab <- function(drugs, title) {
kq5_by_arm_tab |>
  group_by(refid) |>
  filter(any(arm_up %in% drugs)) |> 
  mutate(
    study_l = first_row(study_l),
    surgs_single_f = first_row(surgs_single_f)
    ) |> 
  ungroup() |> 
  select(-c(arm_id, pre:post, control_desc)) |>
  group_by(design_f_lab) |> 
  gt(id = "one") |>
  cols_hide(c(arm_id_pim, arm_up, year, refid, unspec)) |>
  tab_header(title = title) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_up = "Drug",
    asa_ps_incl = md("  PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    sedation_only_tab = "Sed",
    age_table = "  Age",
    pre_mmse = " MMSE",
    dose_sched = "Dosing",
    timing_all = "Timing",
    surgs_single_f = "Surgery"
  ) |>
    cols_width(
    study_l ~ px(160),
    arm_n ~ px(60),
    drug_up ~ px(170),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(30),
    tiva_tab ~ px(30),
    regional_tab ~ px(30),
    sedation_only_tab ~ px(30),
    age_table ~ px(85),
    pre_mmse ~ px(80),
    dose_sched ~ px(130),
    timing_all ~ px(80),
    surgs_single_f ~ px(75)
  ) |>
  gt_theme_mg() |> 
  fmt_markdown(columns = c(study_l, age_table, pre_mmse, timing_all)) |>
  fmt_number(columns = c(arm_n), drop_trailing_zeros = TRUE) |>
  sub_missing(columns = everything(), missing_text = "") |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:sedation_only_tab)) |>
  tab_style(style = cell_text(size = "10px"), locations = cells_column_labels(columns = c(tiva_tab, volatile_tab, regional_tab, sedation_only_tab))) |> 
  tab_style(style = cell_text(font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(align = "left"),         locations = cells_column_labels(columns = c("study_l", "drug_up", "dose_sched", "timing_all", "surgs_single_f"))) |>
  tab_style(style = cell_text(align = "center"),       locations = cells_column_labels(columns = c("age_table", "pre_mmse"))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c("study_l", "drug_up", "dose_sched", "timing_all", "surgs_single_f"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(drug_up:dose_sched), rows = arm_up %in% pim_arm_up)) |>
  tab_style(style = list(cell_text(color = "#DEA79C")), locations = cells_body(columns = c(timing_all), rows = arm_up %in% pim_arm_up)) |>
  # opt_horizontal_padding(scale = 3) |> # added to them scale = 2
  # tab_footnote(footnote) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote("Bars indicate adminstration times from left to right: preoperative, induction/intraoperative, and postoperative (includes PACU).", locations = cells_column_labels(columns = c(timing_all))) |> 
  tab_footnote("Not specified.", locations = cells_body(columns = c(timing_all), rows = !is.na(unspec)), placement = "left")
}

```

### Benzodiazepines

<font size = 4> `r table_ref()` Studies examining benzodiazepines, dose, and timing according to study design. </font>

```{r benzodiazepines_sa}
kq5_char_drugs_tab("benzo_short", "Benzodiazepines (short-acting)") |> 
  row_group_order(c("Randomized Clinical Trial", "Randomized Cluster Crossover Trial", "Prospective Cohort",  "Retrospective Cohort")) |> 
  tab_footnote("PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; Sed: sedation; MMSE: Mini-Mental State Exam; THA: total hip arthroplasty; TKA: total knee arthroplasty.") |> 
  tab_footnote("Mean intraoperative dose.", locations = cells_body(columns = c(dose_sched), rows = str_detect(dose_sched, "5.2|4.6|1.99"))) |> 
  tab_footnote("Liberal or restricted administration relevant to intraoperative period.", locations = cells_body(columns = c(drug_up), rows = str_detect(dose_sched, "5.2|4.6"))) |> 
  tab_footnote("Dose adjusted to maintain light sedation.", locations = cells_body(columns = c(dose_sched), rows = str_detect(refid, "742") & drug_up == "Midazolam")) 
  
```

```{r benzodiazepines_la}
kq5_char_drugs_tab("benzo_long", "Benzodiazepines (long-acting)") |> 
  tab_footnote("PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; Sed: sedation; MMSE: Mini-Mental State Exam.") 
```

```{r benzodiazepines_any}
kq5_char_drugs_tab(c("benzo_ns", "benzo_any"), "Benzodiazepine (any or not specified)") |>
  tab_footnote("PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; Sed: sedation; MMSE: Mini-Mental State Exam; THA: total hip arthroplasty; TKA: total knee arthroplasty.") |>
  tab_footnote("Reported only results from proportional hazards models.", locations = cells_body(columns = c(arm_n), rows = str_detect(refid, "7722")))
  
```

### Antipsychotics

<font size = 4> `r table_ref()` Studies examining antipsychotics, dose, and timing according to study design. </font>

```{r antipsychotics}
kq5_char_drugs_tab("antipsych", "Antipsychotics") |> 
  tab_footnote("PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; Sed: sedation; MMSE: Mini-Mental State Exam.") |> 
  tab_footnote("Reported only results from proportional hazards models.", locations = cells_body(columns = c(arm_n), rows = str_detect(refid, "7722")))

```

### Anticholinergics

<font size = 4> `r table_ref()` Studies examining anticholinergics, dose, and timing according to study design. </font>

```{r anticholinergics}
kq5_char_drugs_tab("antichol", "Anticholinergic drugs") |> 
  tab_footnote("PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; Sed: sedation; MMSE: Mini-Mental State Exam.") 
```

### Corticosteroids

<font size = 4> `r table_ref()` Studies examining corticosteroids, dose, and timing according to study design. </font>

```{r corticosteroids}
kq5_char_drugs_tab(c("cort_dex", "cort_dex", "cort_methylpred", "cort_any","cort_dex|h2antag|benzo_short"), "Corticosteroids") |> 
  tab_footnote("PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; Sed: sedation; MMSE: Mini-Mental State Exam.") |> 
  sub_values(values = "Methylprednisolone", rows = refid == 9977 & arm_id_pim == 1, replacement = "Methylprednisolone > 72h") |> 
  sub_values(values = "Methylprednisolone", rows = refid == 9977 & arm_id_pim == 2, replacement = "Methylprednisolone ≤ 72h") 
```

### NSAIDs

<font size = 4> `r table_ref()` Studies examining NSAIDs, dose, and timing according to study design. </font>

```{r nsaids}
kq5_char_drugs_tab("nsaid", "NSAIDs") |> 
  tab_footnote("PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; Sed: sedation; MMSE: Mini-Mental State Exam.") 
```

<!-- ### Multiple -->
<!-- <font size = 4> `r table_ref()` Studies examining multiple drugs, dose, and timing according to study design. </font> -->
<!-- ```{r various} -->
<!-- kq5_char_drugs_tab("Multiple", "PIM: potentially inappropriate medication; Preop:preopertive; Postop: postoperative.") -->
<!-- ``` -->

### Gabapentin

<font size = 4> `r table_ref()` Studies examining gabapentin, dose, and timing according to study design. </font>

```{r gabapentin}
kq5_char_drugs_tab("gabapentin", "Gabapentin") |> 
  tab_footnote("PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; Sed: sedation; MMSE: Mini-Mental State Exam.") 
```

## **Delirium Incidence**

```{r delirium}
#| eval: false
# to verify 
refid_del_dichot <- dichot_dat |> 
  filter(!is.na(d_delirium)) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

temp <- dichot_dat |>
  filter(refid %in% refid_del_dichot) |>
  rename_with(~ str_replace(.x, "delirium", "deli")) |>
  rename_with(~ stringi::stri_replace_all_regex(.x,"deli([a-z])", "deli_$1")) |>
  select(refid, design_f_lab, study, study_l, year, arm_id, arm_n, contains("deli"), notes_d) |>
  left_join(kq5_by_arm_tab |> select(refid, arm_id, arm_id_pim, drug_up), by = c("refid", "arm_id")) |>
  relocate(drug_up, .after = arm_id) |>
  remove_empty(which = "cols")

writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")

```

```{r delirium_meta_data}
# NOTE: compared and reconciled reported and calculated % # mutate(calc_per = delitotal_n / arm_n * 100, per_diff = calc_per - delitotal_perc) |> filter(per_diff > 0.5)
# arm_up is drug class
# arm_id_pim 1 is referent

delirium_meta_dat <- dichot_dat |>
  mutate(
    arm_n = ifelse(!is.na(deli_update_arm_n), deli_update_arm_n, arm_n),
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
  ) |> 
  filter(!is.na(delitotal_n | study == "Duprey 2022")) |> 
  filter(!(study == "Duprey 2022" & arm_id %in% c(1,2,3,4))) |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(kq5_by_arm_tab |> select(refid, arm_id, arm_id_pim, arm_up, drug_up), by = c("refid", "arm_id")) |> 
  rename(surg_f = surgs_single_f) |> 
  select(refid, study, arm_id, arm_id_pim, arm_up, drug_up, year, design_f_lab, surg_f, delitotal_n, arm_n, delirium_inc_prop, delitotal_time:delitotal_95high, deli_scale_cam:deli_scale_otherspec) 

# write to csv for nma w/kq5 data
# write_csv(delirium_meta_dat |> select(refid:arm_n), "data/delirium_meta_kq5_dat.csv")
# write_csv(delirium_meta_dat |> select(refid:arm_n), "/Users/mgrant/Desktop/delirium_meta_kq5_dat.csv")

## collapse arms code from kq3 ------------------------ (2023-10-02 09:30) @----
# NOTE: collapse arms code from kq3
# delirium_meta_dat <- delirium_meta_dat |>
#   mutate(
#     delitotal_n = case_when(
#       # study == "Shin 2020" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), delitotal_n),
#       # study == "Bielka 2021" & arm_id == 1 ~ collapse_dichot(dichot_dat, "Bielka 2021", c(1, 3), delitotal_n),
#       .default = delitotal_n
#     ),
#     arm_n = case_when(
#       study == "Shin 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Shin 2020", c(1, 2), arm_n),
#       study == "Bielka 2021" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Bielka 2021", c(1, 3), arm_n),
#       .default = arm_n
#     )
#   ) |>
#   filter(!(study %in% c("Shin 2020") & arm_id %in% c(2))) |>
#   filter(!(study %in% c("Bielka 2021") & arm_id %in% c(3))) |> 
#   mutate(arm = ifelse(study == "Bielka 2021" & arm_id == 2, "Neur/Block", as.character(arm)),
#          arm = factor(arm, levels = c("Gen", "Neur", "Neur/Block", "Block"))
#   )

# delirium_meta_dat |> select(refid) |> distinct() # 2023-04-24 n = 14
```

```{r delirium_tab}
#| eval: true
# referent values for calculating rr and ci; rr_ci
delirium_rr_ref <- delirium_meta_dat |>
  select(refid, refid, arm_id_pim, delitotal_n, arm_n) |>
  filter(!is.na(delitotal_n)) |>
  arrange(refid, arm_id_pim) |>
  rename(ref_deli_n = delitotal_n, ref_arm_n = arm_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() > 1, NA, ref_deli_n),
    .by = refid
  ) |>
  fill(ref_arm_n, ref_deli_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() == 1, NA, ref_deli_n),
    .by = refid
  ) 

delirium_tab <- delirium_meta_dat |>
  # select(refid, refid, year, arm_id_pim, design_f_lab, study, study_l, arm_n, delitotal_time:delitotal_95high, deli_scale_cam:deli_scale_otherspec) |>
  mutate(
    across(starts_with("deli_"), ~ str_remove_all(.x, "scale_")),
    across(starts_with("deli_"), ~ str_remove_all(.x, "deli_")),
    across(deli_scale_cam:deli_scale_icdsc, ~ toupper(.x)),
  ) |>
  rename_with(~ gsub("scale_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("deli_", "", .x, fixed = TRUE)) |>
  left_join(delirium_rr_ref, by = c("refid", "arm_id_pim")) |>
  left_join(study_char_dat |> select(refid, study_l), by = c("refid")) |>
  mutate(
    # other = ifelse(str_detect(otherspec, "AMT"), "AMT", other),
    # other = ifelse(str_detect(otherspec, "Psychiatrist consultation"), "Psych", other),
    # other = ifelse(str_detect(otherspec, "Chinese"), "Note", other),
    # other = ifelse(other == "other", NA_character_, other),
    calc_percent = delitotal_n / arm_n * 100,
    n_percent = n_per_fun(delitotal_n, arm_n, 1),
    rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(delitotal_n, arm_n, ref_deli_n, ref_arm_n), "—")
  ) |>
  relocate(calc_percent, .after = delitotal_perc) |>
  unite(scale_delirium, cam:other, remove = TRUE, sep = "/", na.rm = TRUE) |>
# VARIABLE: changed delirium index variable name  
  mutate(
    scale_delirium = ifelse(scale_delirium == "unspec", "NR", scale_delirium),
    scale_delirium = ifelse(scale_delirium == "DELIRIUM INDEX (DI)", "DI", scale_delirium),
    scale_delirium = ifelse(str_detect(scale_delirium, "DOS"), "DOS", scale_delirium)
  ) |>
  select(year, refid, refid, design_f_lab, study, study_l, arm_id, arm_id_pim, arm_n, arm_up, drug_up, scale_delirium, delitotal_time, n_percent, calc_percent, rr_ci, surg_f) |>
  # arrange(year, study, refid, desc(arm)) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  relocate(pre_mmse, .before = scale_delirium) |>
  relocate(age_table, .after = arm_n)

```

```{r pim_delirium_gt}
#| eval: true
# function by class
delirium_tab_fun <- function(drugs, title, design, rr_format){
delirium_tab |>
  arrange(year, study, arm_id_pim) |>
  group_by(refid) |>
  filter(any(arm_up %in% drugs)) |> 
  mutate(
    study_l = first_row(study_l),
    surg_f = first_row(surg_f)
    ) |> 
  ungroup() |> 
  filter(str_detect(design_f_lab, design)) |> 
    mutate(
      scale_delirium = ifelse(scale_delirium == "neech", "NEECHAM", scale_delirium),
      scale_delirium = ifelse(scale_delirium == "other", "Other", scale_delirium),
      delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
      delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time),
      study_l = ifelse(row_number() > 1, "", study_l),
      delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
      scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
      bar = case_when(
        arm_id_pim == 1 ~ bar_prop(calc_percent, "#969696"),
        !arm_up %in% drugs ~ bar_prop(calc_percent, "#90B0C5"),
        .default = bar_prop(calc_percent, "#A93226")),
      .by = study
    ) |>
    mutate(
      bar = ifelse(study == "Duprey 2022", "", bar)
    ) |> 
  group_by(design_f_lab) |> 
    gt(id = "one") |>
    tab_header(title = title) |>
    # row_group_order(groups = c("Ortho", "GI/Abd", "Headneck", "Spine", "Various")) |>
    cols_hide(c(year, refid, design_f_lab, study, arm_id, arm_id_pim, age_table, pre_mmse, calc_percent, arm_up)) |>
    cols_label(
      study_l = "Study",
      arm_n = " N",
      # age_table = "  Age",
      drug_up = md("Arm"),
      # pre_mmse = md("  MMSE<br/>(preop)"),
      surg_f = "Surgery",
      scale_delirium = "Scale",
      delitotal_time = "Day(s)",
      n_percent = "N (%)",
      bar = "0 – 100%",
      rr_ci = md(rr_format),
    ) |>
    cols_width(
      study_l ~ px(165),
      arm_n ~ px(75),
      # age_table ~ px(100),
      drug_up ~ px(170),
      # pre_mmse ~ px(95),
      surg_f ~ px(80),
      scale_delirium ~ px(105),
      delitotal_time ~ px(55),
      n_percent ~ px(90),
      bar ~ px(100),
      rr_ci ~ px(140)
    ) |>
    gt_theme_mg() |>
    fmt_markdown(columns = c(study_l, pre_mmse, bar, rr_ci)) |>
    fmt_number(columns = c(arm_n), drop_trailing_zeros = TRUE) |>
    tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_up, scale_delirium))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(delitotal_time, n_percent, rr_ci))) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_up, scale_delirium, bar))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, rr_ci))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(n_percent))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(n_percent))) |>
    tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:rr_ci), rows = !drug_up %in% c("None", "Placebo"))) |>  
    sub_missing(columns = delitotal_time, missing_text = "Note") |> 
    tab_footnote("Day(s) over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |>
    tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note"))
}  

delirium_tab_fun_sa_benzo <- function(drugs, title, design, rr_format){
delirium_tab |>
  arrange(year, study, arm_id_pim) |>
  group_by(refid) |>
  filter(any(arm_up %in% drugs)) |> 
  mutate(
    study_l = first_row(study_l),
    surg_f = first_row(surg_f)
    ) |> 
  ungroup() |> 
  filter(str_detect(design_f_lab, design)) |> 
    mutate(
      scale_delirium = ifelse(scale_delirium == "neech", "NEECHAM", scale_delirium),
      scale_delirium = ifelse(scale_delirium == "other", "Other", scale_delirium),
      delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
      delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time),
      study_l = ifelse(row_number() > 1, "", study_l),
      delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
      scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
      bar = case_when(
        arm_id_pim == 1 ~ bar_prop(calc_percent, "#969696"),
        !arm_up %in% drugs ~ bar_prop(calc_percent, "#90B0C5"),
        .default = bar_prop(calc_percent, "#A93226")),
      .by = study
    ) |>
    mutate(
      bar = ifelse(study == "Duprey 2022", "", bar)
    ) |> 
    # filter(!drug_up %in% c("Benzodiazepine (any la)", "Benzodiazepine (any sa/la)")) |>
  group_by(design_f_lab) |> 
    gt(id = "one") |>
    tab_header(title = title) |>
    # row_group_order(groups = c("Ortho", "GI/Abd", "Headneck", "Spine", "Various")) |>
    cols_hide(c(year, refid, design_f_lab, study, arm_id, arm_id_pim, age_table, pre_mmse, calc_percent, arm_up)) |>
    cols_label(
      study_l = "Study",
      arm_n = " N",
      # age_table = "  Age",
      drug_up = md("Arm"),
      # pre_mmse = md("  MMSE<br/>(preop)"),
      surg_f = "Surgery",
      scale_delirium = "Scale",
      delitotal_time = "Day(s)",
      n_percent = "N (%)",
      bar = "0 – 100%",
      rr_ci = md(rr_format),
    ) |>
    cols_width(
      study_l ~ px(165),
      arm_n ~ px(75),
      # age_table ~ px(100),
      drug_up ~ px(170),
      # pre_mmse ~ px(95),
      surg_f ~ px(80),
      scale_delirium ~ px(105),
      delitotal_time ~ px(55),
      n_percent ~ px(90),
      bar ~ px(100),
      rr_ci ~ px(140)
    ) |>
    gt_theme_mg() |>
    fmt_markdown(columns = c(study_l, pre_mmse, bar, rr_ci)) |>
    fmt_number(columns = c(arm_n), drop_trailing_zeros = TRUE) |>
    tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_up, scale_delirium))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(delitotal_time, n_percent, rr_ci))) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_up, scale_delirium, bar))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, rr_ci))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(n_percent))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(n_percent))) |>
    tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:rr_ci), rows = drug_up %in% c("Benzodiazepine (any sa)", "Midazolam", "Remimazolam"))) |>  
    sub_missing(columns = delitotal_time, missing_text = "Note") |> 
    tab_footnote("Day(s) over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |>
    tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note"))
}  


# tab_footnote("RR: risk ratio; CAM: Confusion Assessment Method; DI: Delirium Index; DRS: Delirium Rating Scale; DSM: Diagnostic and Statistical Manual of Mental Disorders; NEECHAM: Neelon and Champagne confusion scale; NR: not reported.")
```

### Benzodiazepines

<font size = 4> `r table_ref()` Delirium incidence and ascertainment during hospitalization in studies examining benzodiazepines. </font>

```{r pim_delirium_gt_benzo}
delirium_tab_fun_sa_benzo("benzo_short", "Benzodiazepines (short-acting) — randomized designs", "Rand", "RR (95% CI)") |> 
  tab_footnote("RR: risk ratio; CAM: Confusion Assessment Method; NR: not reported.")

delirium_tab_fun_sa_benzo("benzo_short", "Benzodiazepines (short-acting) — nonrandomized designs", "Coh", "RR <u>aOR</u> (95% CI)") |> 
  sub_values(values = "0.72 (0.69-0.75)", replacement = "<u>0.79 (0.72-0.87)</u>", escape = FALSE) |> 
  sub_values(values = "2.66 (2.48-2.84)", replacement = "<u>2.10 (1.82-2.42)</u>", escape = FALSE) |> 
  sub_values(values = "2.12 (2.02-2.22)", replacement = "<u>1.74 (1.56-1.94)</u>", escape = FALSE) |> 
  sub_values(values = "0.78 (0.76-0.81)", replacement = "<u>0.82 (0.77-0.88)</u>", escape = FALSE) |> 
  sub_values(values = "2.75 (2.62-2.90)", replacement = "<u>2.24 (2.01-2.49)</u>", escape = FALSE) |> 
  sub_values(values = "2.21 (2.13-2.28)", replacement = "<u>1.78 (1.64-1.92)</u>", escape = FALSE) |> 
  
  tab_footnote("RR: risk ratio; aOR: adjusted odds ratio; ns: not specified; sa: short-acting; la: long-acting; CAM: Confusion Assessment Method; THA: total hip arthroplasty; TKA: total knee arthroplasty.") |> 
  tab_footnote(md("[Claims-based algorithm.](https://pubmed.ncbi.nlm.nih.gov/28485014/)"), locations = cells_body(columns = scale_delirium, rows = scale_delirium == "Other"))

delirium_tab_fun(c("benzo_ns", "benzo_any"), "Benzodiazepine (any or not specified) — nonrandomized designs", "Coh|Case", "RR <u>aOR</u> (95% CI)") |> 
  sub_missing(columns = everything(), missing_text = "") |>
  tab_footnote("RR: risk ratio; aOR: adjusted odds ratio; ns: not specified; sa: short-acting; la: long-acting; THA: total hip arthroplasty; TKA: total knee arthroplasty.") |> 
  sub_values(values = "3.11 (2.24-4.31)", replacement = "<u>9.68 (4.30-21.8)</u>", escape = FALSE) |>
  sub_values(values = "0.72 (0.69-0.75)", replacement = "<u>0.79 (0.72-0.87)</u>", escape = FALSE) |> 
  sub_values(values = "2.66 (2.48-2.84)", replacement = "<u>2.10 (1.82-2.42)</u>", escape = FALSE) |> 
  sub_values(values = "2.12 (2.02-2.22)", replacement = "<u>1.74 (1.56-1.94)</u>", escape = FALSE) |> 
  sub_values(values = "0.78 (0.76-0.81)", replacement = "<u>0.82 (0.77-0.88)</u>", escape = FALSE) |> 
  sub_values(values = "2.75 (2.62-2.90)", replacement = "<u>2.24 (2.01-2.49)</u>", escape = FALSE) |> 
  sub_values(values = "2.21 (2.13-2.28)", replacement = "<u>1.78 (1.64-1.92)</u>", escape = FALSE) |> 
  sub_values(values = "0.33 (0.21-0.53)", replacement = "<u>0.73 (0.35-1.51)</u>", escape = FALSE) |> 
  sub_values(values = "—", columns = rr_ci, rows = study == "Duprey 2022" & drug_up == "Antipsychotic (any)", replacement = "1.48 (0.75-2.93)") |> 
  sub_values(values = "—", columns = rr_ci, rows = study == "Duprey 2022" & drug_up == "Benzodiazepine (ns sa/la)", replacement = "3.03 (1.97-4.67") |> 
  tab_footnote("Hazard ratio compared with not given drug.", locations = cells_body(columns = rr_ci, rows = study == "Duprey 2022")) |> 
  sub_values(pattern = ("NA.*"), replacement = "") |> 
  tab_footnote(md("[Claims-based algorithm.](https://pubmed.ncbi.nlm.nih.gov/28485014/)"), locations = cells_body(columns = scale_delirium, rows = scale_delirium == "Other" & str_detect(study, "Memtsoudis 2019")))
  
```

### Antipsychotics

<font size = 4> `r table_ref()` Delirium incidence and ascertainment during hospitalization in studies examining antipsychotics. </font>

```{r pim_delirium_gt_antipsych}
delirium_tab_fun("antipsych", "Antipsychotics — randomized designs", "Rand", "RR (95% CI)") |> 
  tab_footnote("RR: risk ratio; CAM: Confusion Assessment Method; DSM: Diagnostic and Statistical Manual of Mental Disorders; NEECHAM: Neelon and Champagne confusion scale; ICDSC: Intensive Care Delirium Screening Checklist.")

delirium_tab_fun("antipsych", "Antipsychotics — nonrandomized designs", "Coh", "HR (95% CI)") |> 
  tab_footnote("RR: hazard ratio; CAM: Confusion Assessment Method; DSM: Diagnostic and Statistical Manual of Mental Disorders; NEECHAM: Neelon and Champagne confusion scale; ICDSC: Intensive Care Delirium Screening Checklist.") |> 
  sub_values(values = "—", columns = rr_ci, rows = study == "Duprey 2022" & drug_up == "Antipsychotic (any)", replacement = "1.48 (0.75-2.93)") |> 
  sub_values(values = "—", columns = rr_ci, rows = study == "Duprey 2022" & drug_up == "Benzodiazepine (ns sa/la)", replacement = "3.03 (1.97-4.67") |> 
  tab_footnote("Hazard ratio compared with not given drug.", locations = cells_body(columns = rr_ci, rows = study == "Duprey 2022")) |> 
  sub_missing(columns = everything(), missing_text = "") |>
  sub_values(pattern = ("NA.*"), replacement = "") 

```

### Anticholinergics

<font size = 4> `r table_ref()` Delirium incidence and ascertainment during hospitalization in studies examining anticholinergics. </font>

```{r pim_delirium_gt_antichol}
delirium_tab_fun("antichol",  "Anticholinergics — randomized designs", "Rand", "RR (95% CI)") |> 
  tab_footnote("RR: risk ratio; CAM: Confusion Assessment Method.")

delirium_tab_fun("antichol",  "Anticholinergics — nonrandomized designs", "Coh", "RR (95% CI)") |> 
  tab_footnote("RR: odds ratio; CAM: Confusion Assessment Method; DSM: Diagnostic and Statistical Manual of Mental Disorders.")

```

### Corticosteroids

<font size = 4> `r table_ref()` Delirium incidence and ascertainment during hospitalization in studies examining corticosteroids. </font>

```{r pim_delirium_gt_cort}
delirium_tab_fun(c("cort_dex", "cort_dex", "cort_methylpred", "cort_any","cort_dex|h2antag|benzo_short"),  "Corticosteroids — randomized designs", "Rand", "RR (95% CI)") |> 
  tab_footnote("RR: odds ratio; CAM: Confusion Assessment Method; DSM: Diagnostic and Statistical Manual of Mental Disorders; NR: not reported.")

delirium_tab_fun(c("cort_dex", "cort_dex", "cort_methylpred", "cort_any","cort_dex|h2antag|benzo_short"),  "Corticosteroids — nonrandomized designs", "Before|Co", "RR <u>aOR</u> (95% CI)") |> 
  tab_footnote("RR: relative risk; aOR: adjusted odds ratio; CAM: Confusion Assessment Method; DOS: delirium observation screening; THA: total hip arthroplasty; TKA: total knee arthroplasty.") |> 
  sub_values(values = "1.13 (1.05-1.22)", replacement = "<u>0.95 (0.81-1.11)</u>", escape = FALSE) |>
  sub_values(values = "1.00 (0.95-1.06)", replacement = "<u>0.96 (0.86-1.06)</u>", escape = FALSE) |> 
  sub_values(values = "Methylprednisolone", rows = study == "Choi 2019" & arm_id_pim == 1, replacement = "Methylprednisolone > 72h") |> 
  sub_values(values = "Methylprednisolone", rows = study == "Choi 2019" & arm_id_pim == 2, replacement = "Methylprednisolone ≤ 72h") 

```

### NSAIDS

<font size = 4> `r table_ref()` Delirium incidence and ascertainment during hospitalization in studies examining NSAIDs </font>

```{r pim_delirium_gt_nsaid}
# none 2023-10-02
# delirium_tab_fun("nsaid",  "NSAIDs — randomized designs", "Rand", "RR (95% CI)") |> 
#   tab_footnote("RR: risk ratio; CAM: Confusion Assessment Method.")
delirium_tab |>
  arrange(year, study, arm_id_pim) |>
  group_by(study_l) |>
  filter(any(arm_up %in% "nsaid")) |> 
  mutate(
    study_l = first_row(study_l),
    surg_f = first_row(surg_f)
    ) |> 
  ungroup() |> 
  arrange(refid, arm_id_pim) |>
  filter(str_detect(design_f_lab, "Coh")) |> 
    mutate(
      scale_delirium = ifelse(scale_delirium == "neech", "NEECHAM", scale_delirium),
      scale_delirium = ifelse(scale_delirium == "other", "Other", scale_delirium),
      delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
      delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time),
      # study_l = ifelse(row_number() > 1, "", study_l),
      delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
      scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
      bar = case_when(
        arm_id_pim == 1 ~ bar_prop(calc_percent, "#969696"),
        !arm_up %in% "nsaid" ~ bar_prop(calc_percent, "#90B0C5"),
        .default = bar_prop(calc_percent, "#A93226")),
      .by = study
    ) |>
    mutate(
      bar = ifelse(study == "Duprey 2022", "", bar)
    ) |> 
  group_by(design_f_lab) |> 
    gt(id = "one") |>
    tab_header(title = "NSAIDs") |>
    # row_group_order(groups = c("Ortho", "GI/Abd", "Headneck", "Spine", "Various")) |>
    cols_hide(c(year, refid, design_f_lab, study, arm_id, arm_id_pim, age_table, pre_mmse, calc_percent, arm_up)) |>
    cols_label(
      study_l = "Study",
      arm_n = " N",
      # age_table = "  Age",
      drug_up = md("Arm"),
      # pre_mmse = md("  MMSE<br/>(preop)"),
      surg_f = "Surgery",
      scale_delirium = "Scale",
      delitotal_time = "Day(s)",
      n_percent = "N (%)",
      bar = "0 – 100%",
      rr_ci = md("RR <u>aOR</u> (95% CI)"),
    ) |>
    cols_width(
      study_l ~ px(165),
      arm_n ~ px(60),
      # age_table ~ px(100),
      drug_up ~ px(170),
      # pre_mmse ~ px(95),
      surg_f ~ px(80),
      scale_delirium ~ px(105),
      delitotal_time ~ px(55),
      n_percent ~ px(90),
      bar ~ px(100),
      rr_ci ~ px(140)
    ) |>
    gt_theme_mg() |>
    fmt_markdown(columns = c(study_l, pre_mmse, bar, rr_ci)) |>
    fmt_number(columns = c(arm_n), drop_trailing_zeros = TRUE) |>
    tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_up, scale_delirium))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(delitotal_time, n_percent, rr_ci))) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_up, scale_delirium, bar))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, rr_ci))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(n_percent))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(n_percent))) |>
    tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:rr_ci), rows = arm_up %in% pim_arm_up)) |>  
    sub_values(values = "0.72 (0.69-0.74)", replacement = "<u>0.85 (0.79-0.91)</u>", escape = FALSE) |>
    sub_values(values = "0.74 (0.71-0.76)", replacement = "<u>0.82 (0.77-0.89)</u>", escape = FALSE) |>
    sub_values(values = "0.73 (0.72-0.75)", replacement = "<u>0.84 (0.80-0.88)</u>", escape = FALSE) |>
    sub_values(values = "0.86 (0.84-0.88)", replacement = "<u>0.83 (0.79-0.88)</u>", escape = FALSE) |>
    sub_missing(columns = delitotal_time, missing_text = "Note") |> 
    tab_footnote("RR: relative risk; aOR: adjusted odds ratio; CAM: Confusion Assessment Method; DOS: delirium observation screening; THA: total hip arthroplasty; TKA: total knee arthroplasty.") |> 
    tab_footnote("Day(s) over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |>
    tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
    tab_footnote(md("[Claims-based algorithm.](https://pubmed.ncbi.nlm.nih.gov/28485014/)"), locations = cells_body(columns = scale_delirium, rows = scale_delirium == "Other" & str_detect(study, "Memtsoudis 2019")))

```

### Gabapentin

```{r gabapentinoids}
#| eval: true

delirium_tab |>
  arrange(year, study, arm_id_pim) |>
  group_by(study_l) |>
  filter(any(arm_up %in% "gabapentin")) |> 
  mutate(
    study_l = first_row(study_l),
    surg_f = first_row(surg_f)
    ) |> 
  ungroup() |> 
  arrange(refid, arm_id_pim) |>
  # filter(str_detect(design_f_lab, "Coh")) |> 
    mutate(
      scale_delirium = ifelse(scale_delirium == "neech", "NEECHAM", scale_delirium),
      scale_delirium = ifelse(scale_delirium == "other", "Other", scale_delirium),
      delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
      delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time),
      # study_l = ifelse(row_number() > 1, "", study_l),
      delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
      scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
      bar = case_when(
        arm_id_pim == 1 ~ bar_prop(calc_percent, "#969696"),
        !arm_up %in% "nsaid" ~ bar_prop(calc_percent, "#90B0C5"),
        .default = bar_prop(calc_percent, "#A93226")),
      .by = study
    ) |>
  group_by(design_f_lab) |> 
    gt(id = "one") |>
    tab_header(title = "Gabapentin") |>
    # row_group_order(groups = c("Ortho", "GI/Abd", "Headneck", "Spine", "Various")) |>
    cols_hide(c(year, refid, design_f_lab, study, arm_id, arm_id_pim, age_table, pre_mmse, calc_percent, arm_up)) |>
    cols_label(
      study_l = "Study",
      arm_n = " N",
      # age_table = "  Age",
      drug_up = md("Arm"),
      # pre_mmse = md("  MMSE<br/>(preop)"),
      surg_f = "Surgery",
      scale_delirium = "Scale",
      delitotal_time = "Day(s)",
      n_percent = "N (%)",
      bar = "0 – 100%",
      rr_ci = md("RR <u>aOR</u> (95% CI)"),
    ) |>
    cols_width(
      study_l ~ px(165),
      arm_n ~ px(60),
      # age_table ~ px(100),
      drug_up ~ px(170),
      # pre_mmse ~ px(95),
      surg_f ~ px(80),
      scale_delirium ~ px(105),
      delitotal_time ~ px(55),
      n_percent ~ px(90),
      bar ~ px(100),
      rr_ci ~ px(140)
    ) |>
    gt_theme_mg() |>
    fmt_markdown(columns = c(study_l, pre_mmse, bar, rr_ci)) |>
    fmt_number(columns = c(arm_n), drop_trailing_zeros = TRUE) |>
    tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_up, scale_delirium))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(delitotal_time, n_percent, rr_ci))) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_up, scale_delirium, bar))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, rr_ci))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(n_percent))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(n_percent))) |>
    tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:rr_ci), rows = arm_up %in% pim_arm_up)) |>  
    sub_values(values = "0.72 (0.69-0.74)", replacement = "<u>0.85 (0.79-0.91)</u>", escape = FALSE) |>
    sub_values(values = "0.74 (0.71-0.76)", replacement = "<u>0.82 (0.77-0.89)</u>", escape = FALSE) |>
    sub_values(values = "0.73 (0.72-0.75)", replacement = "<u>0.84 (0.80-0.88)</u>", escape = FALSE) |>
    sub_values(values = "0.86 (0.84-0.88)", replacement = "<u>0.83 (0.79-0.88)</u>", escape = FALSE) |>
    sub_missing(columns = delitotal_time, missing_text = "Note") |> 
    tab_footnote("RR: relative risk.") |> 
    tab_footnote("Day(s) over which incidence proportion assessed.", locations = cells_column_labels(columns = delitotal_time)) |>
    tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
    tab_footnote(md("[Claims-based algorithm.](https://pubmed.ncbi.nlm.nih.gov/28485014/)"), locations = cells_body(columns = scale_delirium, rows = scale_delirium == "Other" & str_detect(study, "Memtsoudis 2019")))

```

## **Study Primary Aim**

```{r study_aim}
#| eval: true
# RESUME: study aim
aim_dat <- study_char_dat |>
  # remove duplicate Memtsoudis 2019
  filter(!refid %in% c(17130:17139, 17141)) |> 
  mutate(
    study_l = str_replace(study_l, "Memtsoudis 2019a", "Memtsoudis 2019"), 
    study = str_replace(study, "Memtsoudis 2019a", "Memtsoudis 2019")) |> 
  select(refid, starts_with("design"), study, study_l, year, n_enroll, n_analyze, starts_with("kq5"), starts_with("prim"), sec_delirium, sec_pocd) |> 
  arrange(year) |> 
  rename_with(~ str_replace(.x, "kq5_", "")) |> 
  left_join(drug_classes_by_study, by = "refid") |> 
  mutate(
    agents_up = str_replace_all(agents_up, "\\|", "<br/>"), # easier to see in table
    agents_up = ifelse(study == "Spence 2020", str_replace(agents_up, "<br/>", ""), agents_up), # both arms short-acting benzo
  )

# writexl::write_xlsx(aim_dat, "/Users/mgrant/Desktop/aim_dat.xlsx")
```

### Delirium Prevention

<font size = 4> `r table_ref()` Studies examining delirium prevention. </font>

```{r study_aim_delirium_prevent}
aim_dat |> 
  filter(del_prevent == "yes") |> 
  select(year, study_l, n_enroll, agents_up, prim_aim_desc, design_f_lab) |> 
  arrange(design_f_lab, year) |>
  group_by(design_f_lab) |>
  gt(id = "one") |> 
  cols_hide(c(year)) |>
  cols_label(
    study_l = "Study",
    n_enroll = "N",
    agents_up = "Drug Class",
    prim_aim_desc = "Study Aim",
  ) |> 
  cols_width(
    study_l ~ px(125),
    n_enroll ~ px(75),
    agents_up ~ px(120),
    prim_aim_desc ~ px(350),
  ) |> 
  cols_align(align = "left", columns = c(study_l, prim_aim_desc)) |>
  cols_align(align = "right", columns = n_enroll) |>
  fmt_markdown(columns = everything()) |>
  fmt_number(columns = c(n_enroll), use_seps = TRUE, drop_trailing_zeros = TRUE) |>
  tab_style(style = cell_text(size = "13px"), locations = cells_body(columns = everything())) |> 
  fmt_markdown(columns = c(study_l, prim_aim_desc)) |> 
  tab_style(style = "vertical-align:top", locations = cells_body(columns = everything())) |> 
  gt_theme_mg() |> 
    opt_css(
      css = "
      p {
      line-height: 1.4;
      }
    "
    )
```

### Other Studies

<font size = 4> `r table_ref()` Studies with aim including examining adverse effects of a potentially inappropriate medication outside a delirium prevention trial. </font>

```{r study_aim_pim}
aim_dat |> 
  filter(del_prevent != "yes") |> 
  select(year, study_l, n_enroll, agents_up, prim_aim_desc, design_f_lab) |> 
  arrange(design_f_lab, year) |>
  group_by(design_f_lab) |>
  gt(id = "one") |> 
  cols_hide(c(year)) |>
  cols_label(
    study_l = "Study",
    n_enroll = "N",
    agents_up = "Drug Class",
    prim_aim_desc = "Study Aim",
  ) |> 
  cols_width(
    study_l ~ px(125),
    n_enroll ~ px(75),
    agents_up ~ px(120),
    prim_aim_desc ~ px(350),
  ) |> 
  fmt_markdown(columns = everything()) |>
  cols_align(align = "left", columns = c(study_l, prim_aim_desc)) |>
  cols_align(align = "right", columns = n_enroll) |>
  fmt_number(columns = c(n_enroll), use_seps = TRUE, drop_trailing_zeros = TRUE) |>
  tab_style(style = cell_text(size = "13px"), locations = cells_body(columns = everything())) |> 
  fmt_markdown(columns = c(study_l, prim_aim_desc)) |> 
  tab_style(style = "vertical-align:top", locations = cells_body(columns = everything())) |> 
  gt_theme_mg() |> 
    opt_css(
      css = "
      p {
      line-height: 1.4;
      }
    "
    )
```    


## **Risk of Bias**

### Randomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for randomized clinical trials. </font>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_dat |>
  filter(!is.na(Study) & refid %in% kq5_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind", weighted = FALSE)
```

<font size = 4> `r figure_ref()` Risk of bias assessments for randomized clinical trials. </font>

```{r rob_overall_study, out.width = "55%", fig.height = 8.5}
#| warning: false
rob_traffic_light(rob_temp_dat, psize = 4, tool = "ROB2", colour = "colourblind")
```

### Nonrandomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for nonrandomized studies. </font>

```{r nrsi_summary_overall, fig.height = 3, out.width = "60%"}
robinsi_temp_dat <- robinsi_dat |>
  filter(!is.na(Study) & refid %in% kq5_refid & !refid %in% c(17131:17139, 17141, 17142, 17143, 17148)) |> # remove cloned Memtsoudis 2019, Mueller 2020, Weinstein 2018, Fuchita 2019, Slor 2011
  select(-refid)

rob_summary(robinsi_temp_dat, tool = "ROBINS-I", colour = "colourblind", weighted = FALSE)
```

<font size = 4> `r figure_ref()` Risk of bias assessments for nonrandomized studies. </font>

```{r nrsi_overall_study, out.width = "55%", fig.height = 8.0}
#| warning: false
rob_traffic_light(robinsi_temp_dat, psize = 4, tool = "ROBINS-I", colour = "colourblind")
```

## **Causal Model**

<font size = 4> `r figure_ref()` Causal model for the relationship between potentially inappropriate medications and outcomes. Likely mediators include anesthetics, other drugs, pain, hypotension, clinical instability, infection, electrolytes, and sleep deprivation. </font>

![](assets/pim_dag.png){fig-align="center" width="8in"}

<font size = 3> PIM: potentially inappropriate medications; dNCR: delayed neurcognitive recovery (\<30 days); POCD: postoperative cognitive disorder (30 days to 1 year); NCD: neurocognitive disorders (\> 1 year).<br/> </font>

## **References** {#references}
