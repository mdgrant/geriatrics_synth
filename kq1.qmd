---
title: "Expanded Preoperative Evaluation"
editor: source
toc-title: "**Expanded Preoperative Evaluation**"
toc-location: "left"
cap-location: "top"
toc-depth: 4
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq18.bib"
csl: jama.csl
link-citations: false
nocite: '@*'
---

```{r, read_data}
#| include: false
source("code/load_data.R")
conflicts_prefer(dplyr::lag)

kq1_refid_hip <- kq1_refid[kq1_refid %in% ortho_hipfx_refid]
kq1_refid_nonhip <- kq1_refid[!kq1_refid %in% ortho_hipfx_refid]

temp <- study_char_dat |> filter(refid %in% c(kq1_refid)) |> select(refid, study)

# note working file not renamed
# temp <-  study_char_dat |> 
study_char_dat <- study_char_dat |>
  filter(refid %in% c(kq1_refid)) |>
  arrange(design_f) |>
  mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-")
  ) |> # tabyl(surgs_single_f) |> View() # to examine
  mutate(
    surgs = unclass(surgs_single_f), 
    surgs = ifelse(refid %in% kq1_refid_hip, "HipFx", surgs),
    surgs = ifelse(surgs == "Ortho", "Other Ortho", surgs),
    surgs = factor(surgs, levels = c("HipFx", "Other Ortho", "GI/Abd", "Cardiac", "Various", "Urol", "Neuro"))
  ) 

study_arm_dat <- study_arm_dat |>
  filter(refid %in% c(kq1_refid)) |>
  arrange(design_f) |>
  mutate(
    arm = ifelse(arm_kq1_eval == "eval_expand", "Exp", "Std"),
    pacu_screen = ifelse(refid %in% kq8_refid, TRUE, FALSE)
  ) |>
  mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-")
  ) |>
  # TODO: fix after add cog_imp_n to data
  mutate(
    cog_imp_n = as.integer(round(cog_imp / 100 * arm_n, 0)),
    cog_imp_nper = n_per_fun(cog_imp_n, arm_n),
    cog_imp_nper = ifelse(str_detect(cog_imp_nper, "NA"), "", cog_imp_nper)
  )

dichot_dat <- dichot_dat |>
  filter(refid %in% c(kq1_refid)) |>
  arrange(design_f) |>
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id) |>
  # if incidence proportion for delirium not reported use the max of days
  mutate(
    delirium_inc_prop = !is.na(delitotal_n),
    delirium_day_max = pmax(delirium_n1, delirium_n2, delirium_n3, delilast_n, na.rm = TRUE),
    delitotal_n = ifelse(is.na(delitotal_n), delirium_day_max, delitotal_n),
  ) |>
  relocate(delirium_day_max, .after = delitotal_n) |>
  mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-")
  )

contin_dat <- contin_dat |>
  filter(refid %in% c(kq1_refid)) |>
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  arrange(design_f) |>
  mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-")
  )

likert_dat <- likert_dat |> 
  filter(refid %in% c(kq1_refid)) |> 
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  arrange(design_f) |> 
    mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-")
  )

```

## Updates
::: {.callout-important collapse="true"}
### 2024-04-04

| Date       | Modification                                                                                                                                                                    |
|:-----------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| 2024-03-28 | 4 studies (3 before-after [[Harari 2007](evidence_tables.html#19171), [Smoor 2023](evidence_tables.html#18797), [Staiger 2023](evidence_tables.html#18807)] 1 retrospective cohort [[Paille 2021](evidence_tables.html#19377)]) added from updated search. |
| 2024-03-30 | Correction to link Shyu 2005 and 2008 (same trial). <br/> Added dementia to study characteristics table.<br/> Consistent study and group ordering now consistent study characteristics and evaluation tables. |
| 2024-04-04 | Added table listing interventions. <br/> Physical function pooled removed period subgroups; arranged by time in forest plot and for pooled RCTs add a bubble plot. <br/> Combined randomized and nonrandomized designs in pooled complication results consistent with kq4. <br/> Deleted pooled pulmonary complications owing lack of consistent outcome definitions. <br/> Reorganized discharge location pooled to display for randomized and nonrandomized designs. <br/> Removed pooled 1-year mortality result. |
 
 
<caption_mg> Outcomes reported in additional publications (not unique studies).  </caption_mg>
```{r}
tribble(
  ~outcome, ~before_after, ~ret_coh,
  "Delirium", 1, 1,
  "Complications", 3, 1,
  "Length of stay", 2, 1,
  "Discharge location", NA, 1,
  "Readmission", 1, 1,
  "Mortality", 2, 1,
) |>
  gt(id = "one") |>
  cols_label(
    outcome          = "Outcome",
    before_after     = "Before-After",
    ret_coh          = md("Retrospective<br/> Cohort")
  ) |>
  gt_theme_mg() |>
  sub_missing(columns = everything(), missing_text = "") |>
  tab_spanner(label = "Studies Reporting", columns = c(before_after, ret_coh), level = 1) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(before_after, ret_coh))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(before_after, ret_coh)))

```

```{r}
#| tbl-cap: Overview of changes to primary outcomes following search update.
#| html-table-processing: none

```

```{r}
#| tbl-cap: Overview of changes to adverse events following search update.
#| html-table-processing: none

```

:::

## Key Question

Among older patients anticipating surgery and anesthesia, does expanded preoperative evaluation (e.g., for frailty, cognitive impairment, functional status, or psychosocial issues) lead to improved postoperative outcomes?

## Balance Tables

<caption_mg> Benefits, harms, and strength of evidence (GRADE) for expanded versus standard preoperative evaluation. </caption_mg>

```{r reg_gen_balance}
kq1_balance_main() |> 
  text_replace("See Appendix", "See below", locations = cells_body()) 
  # text_replace("See Appendix", "See Appendix", locations = cells_body())
```

<caption_mg> Included complications and strength of evidence (GRADE) for expanded versus standard preoperative evaluation. </caption_mg>

```{r reg_gen_complications}
kq1_complications()
```

## **Outcome Importance Rankings**

### Expanded Preoperative Evaluation

<font size = 4> `r table_ref()` Rankings of the 5 most important outcomes (11 respondents). </font>

```{r, outcome_priority_kq1}
#| include: true
#| eval: true
outcome_dat <- rankings("KQ1")
outcome_tab(outcome_dat, 11)
```

## **Outcomes Reported**

<font size = 4> `r table_ref()` Publications reporting dichotomous or count outcomes (not unique studies). </font>

```{r dichot_outcome_freq}
dichot_freq_fun(dichot_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

<font size = 4> `r table_ref()` Publications reporting continuous outcomes (not unique studies). </font>

```{r cont_outcome_freq}
contin_freq_fun(contin_dat)
```

<font size = 4> `r table_ref()` Publications reporting likert or ordinal outcomes (not unique studies). </font>

```{r likert_outcome_freq}
likert_freq_fun(likert_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

## **Included Studies**

See [Appendix](summary_kq1.html) for detailed summary study and patient characteristics including primary outcomes.

<font size = 4> `r table_ref()` Number of studies by design. </font>

```{r studies_design}
# CODE: study design table â€” design and number; no duplicate counting
study_char_dat |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(
    style = list(
      cell_fill(color = "#E4F3FE"),
      cell_text(weight = "bold"),
      cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))
    ),
    locations = cells_body(
      rows = design_f_lab == "Total"
    )
  ) |> 
  tab_style(
    style = list(
      cell_text(align = "left")),
      locations = cells_body(
        columns = design_f_lab
      )
    )  |> 
  tab_footnote("Studies with multiple publications counted once (applies to 2 studies with 2 publications).")
```

### Design, centers, country, and surgery

<font size = 4> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </font>

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |>
  select(refid, starts_with("design"), study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi, surgs) |>
  arrange(design_f, surgs, study_l) |>  
  select(refid, design_f_lab, study_l, centers, n_enroll, country, surgs, non_vh_hdi) 

included_dat |>
  group_by(design_f_lab) |> 
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_hide(c(non_vh_hdi)) |>
    fmt_markdown(columns = c(study_l)) |> 
  cols_width(
    refid ~ px(60),
    study_l ~ px(220),
    centers ~ px(60),
    n_enroll ~ px(60),
    country ~ px(100),
    surgs ~ px(150)
  ) |> 
  # opt_horizontal_padding(scale = 2) |>
  sub_missing(columns = everything(), missing_text = " â€” ") |>
  gt_theme_mg() |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c("refid"))) |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(surgs))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(surgs))) |>
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote(footnote = md("Described as various or more than 4 different types of surgery."), locations = cells_body(columns = surgs, surgs == "Various")) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_column_labels(columns = country)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))) |>
  # tab_footnote(footnote = "Studies examining drugs not directly relevant to recommendations but potentially relevant to the evidence space (eg, a connected network) were included.",  locations = cells_row_groups(groups = )) |> 
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular.")

```

### Country Summary

<font size = 4> `r table_ref()` Summary of studies by country where conducted. </font>

```{r country}
#| echo: false
study_char_dat |>
  mutate(linked_references = ifelse(is.na(linked_references), refid, linked_references)) |> 
  slice(1, .by = linked_references) |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  modify_column_alignment(columns = everything(), align = "left") |> 
  as_gt(id = "one") |> 
  gt_theme_mg() |> 
  # tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c("label"))) |>
  tab_footnote("Studies with multiple publications counted once (applies to 2 studies with 2 publications).",  locations = cells_body(columns = c("stat_0"), rows = label %in% c("Netherlands", "USA"))) 

```

## **Comparators**

### Study Characteristics

<font size = 4> `r table_ref()` Selected characteristic of included studies. </font>

```{r studychar_tab}
studychar_tab <- study_arm_dat |>
  mutate(study_l = study_l_w_linked) |>
  select(refid, arm_id, study, study_l, design_f_lab, year, arm_n, arm, pacu_screen, asa_ps_incl, cog_imp_n, cog_imp, cog_imp_nper) |> 
  left_join(study_char_dat |> select(refid, surgs, design_f_abbrev), by = "refid") |>
  rename(surgs_single = surgs) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  mutate(
    arm = replace_na(arm, "Scrn"),
    surg_design = paste0(surgs_single, " â€” ", design_f_lab),
    # cog_imp_n = as.integer(round(cog_imp/100 * arm_n, 0)),
    # cog_imp_nper = n_per_fun(cog_imp_n, arm_n),
    # cog_imp_nper = ifelse(str_detect(cog_imp_nper, "NA"), "", cog_imp_nper),
  ) |>
  arrange(surg_design, year, study, arm_id) 

# studychar_tab |> tabyl(surg_design) |> pull(surg_design) |> toString(sep = ", ")

groups_kq1 <- c(
  "HipFx â€” Randomized Clinical Trial",
  "GI/Abd â€” Randomized Clinical Trial",
  "Various â€” Randomized Clinical Trial",
  "HipFx â€” Nonrandomized Trial",
  "HipFx â€” Before-After/Time Series",
  "GI/Abd â€” Before-After/Time Series",
  "Cardiac â€” Before-After/Time Series",
  "Neuro â€” Before-After/Time Series",
  "Urol â€” Before-After/Time Series",
  "Other Ortho â€” Before-After/Time Series",
  "Various â€” Before-After/Time Series",
  "GI/Abd â€” Retrospective Cohort",
  "Cardiac â€” Retrospective Cohort",
  "Various â€” Prospective Cohort"
)

studychar_tab |>
  # remove time-series entries
  filter(
    !(study %in% c("Vochteloo 2011") & arm_id %in% c(2, 3)),
    !(study %in% c("Lau 2013") & arm_id %in% c(2, 3, 4)),
  ) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    .by = study
  ) |>
  mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-"),
    pacu_screen = ifelse(pacu_screen, "\U2713", NA)
  ) |>
  # tabyl(surg_design)
  group_by(surg_design) |>
  gt(id = "one") |> 
  row_group_order(groups_kq1) |> 
  cols_hide(c(refid, arm_id, study, year, design_f_lab, surgs_single, pacu_screen, cog_imp_n, cog_imp)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = "NÂ ",
    arm              = "Arm",
    # pacu_screen      = "PACU Screen",
    asa_ps_incl      = "ASA PS",
    age_table        = "Â Â Â Age",
    pre_mmse         = "Â Â Â MMSE",
    cog_imp_nper     = md("Dementia<br/>N (%)"),
  ) |>
  fmt_markdown(columns = c(study_l, pacu_screen, age_table, pre_mmse)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(225),
    arm_n ~ px(55),
    arm ~ px(50),
    # pacu_screen      ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    pre_mmse ~ px(80),
    cog_imp_nper ~ px(80),
  ) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  # tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(asa_ps_incl, cog_imp_nper))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  # tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(pacu_screen, cog_imp_nper))) |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:cog_imp_nper), rows = str_detect(arm, "Exp"))) |>
  tab_style(style = list(cell_text(color = color_1)), locations = cells_body(columns = c(arm_n:cog_imp_nper), rows = str_detect(arm, "Scrn"))) |>
  tab_footnote(md("Exp: expanded preoperative evaluation; Std: standard preoperative evaluation; NR: not reported.")) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote("Blank if no information provided.", locations = cells_column_labels(columns = cog_imp_nper))

```

### Evaluation Components

<font size = 4> `r table_ref()` Components of expanded preoperative evaluation and interventions prompted. </font>

```{r comparators}
#| eval: true
#| warning: true
expanded_dat <- study_arm_dat |>
  filter(refid %in% kq1_refid) |>
  filter(!refid %in% c(1263, 17155)) |>
  mutate(
    study_l = ifelse(study_l == "[Hempenius 2013](evidence_tables.html#760)", "[Hempenius 2013, 2016](evidence_tables.html#760)", study_l),
    study_l = ifelse(study_l == "[Shyu 2005](evidence_tables.html#17156)", "[Shyu 2005, 2008](evidence_tables.html#17156)", study_l) 
  ) |>
  select(refid, year, study, study_l, arm_id, arm_kq1_eval, kq1_eras, gen_blood, gen_comp, gen_multi, gen_comorbid, gen_nutrition, gen_other, kq1_frail, kq1_cog, kq1_phys_func, kq1_psych, pt_nutr, pt_mobility, pt_surgery, pt_social, pt_other, staff_comorbid, staff_inappmed, staff_geriatrician, staff_multidisc, staff_supplement, staff_treatplan, staff_other, pacu_screen) |>
  left_join(study_char_dat |> select(refid, surgs, design_f_lab, design_f_abbrev), by = "refid") |>
  rename(surgs_single = surgs) |>
  mutate(
    arm = ifelse(arm_kq1_eval == "eval_expand", "Exp", "Std"),
    across(gen_blood:staff_other, ~ notna_to_x(.x, symbol = "EXP")),
    across(gen_multi:kq1_psych,
      ~ case_when(
        !is.na(gen_comp) ~ NA,
      .default = .x
    )),
    # assume that if gen_comp all components used
    across(c(gen_comp, gen_multi, gen_comorbid, gen_nutrition, kq1_frail, kq1_cog, kq1_phys_func, kq1_psych),
      ~ case_when(
        !is.na(gen_comp) ~ "EXP",
      .default = .x
    )),
    kq1_eras = ifelse(kq1_eras == "eras_yes", "Â Â x", NA),
    surg_design = paste0(surgs_single, " â€” ", design_f_lab)
  ) |>
  filter(arm == "Exp") |>
  slice(1, .by = study)

standard_dat <- study_arm_dat |>
  filter(refid %in% kq1_refid) |>
  filter(!refid %in% c(1263, 17155)) |>
  select(refid, year, study, study_l, arm_id, arm_kq1_eval, kq1_eras, gen_blood_std, gen_comp_std, gen_multi_std, gen_comorbid_std, gen_nutrition_std, gen_other_std, kq1_frail_std, kq1_cog_std, kq1_phys_func_std, kq1_psych_std, pt_nutr_std, pt_mobility_std, pt_surgery_std, pt_social_std, pt_other_std, staff_comorbid_std, staff_inappmed_std, staff_geriatrician_std, staff_multidisc_std, staff_supplement_std, staff_treatplan_std, staff_other_std, pacu_screen) |>
  rename_with(~ str_remove(.x, "_std")) |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |>
  left_join(study_char_dat |> select(refid, design_f_lab, design_f_abbrev), by = "refid") |>
  mutate(
    arm = ifelse(arm_kq1_eval == "eval_expand", "Exp", "Std"),
    across(gen_blood:staff_other, ~ notna_to_x(.x, symbol = "STD")),
    across(
      gen_multi:kq1_psych,
      ~ case_when(
        !is.na(gen_comp) ~ NA,
        .default = .x
      )
    ),
    kq1_eras = ifelse(kq1_eras == "eras_yes", "Â Â x", NA),
    surg_design = paste0(surgs_single, " â€” ", design_f_lab)
  ) |>
  filter(if_any(kq1_eras:staff_other, ~ !is.na(.x))) |>
  filter(arm == "Std") |>
  slice(1, .by = study)

expanded_combined <- bind_rows(expanded_dat, standard_dat) |> 
  # filter(refid %in% c(16846, 16605)) |> 
  arrange(year, study, arm_id) |> 
  group_by(study) |>
  mutate(
    across(gen_blood:staff_other, ~ paste0(.x, dplyr::lag(.x))),
    across(gen_blood:staff_other, ~ str_remove_all(.x, "NA")),
    across(gen_blood:staff_other, ~ na_if(.x, ""))
  ) |>
  ungroup() |>
  filter(arm_id > 1) |>
  mutate(
    across(gen_blood:staff_other, ~ ifelse(.x == "STD", "Â \U25CB", .x)),
    across(gen_blood:staff_other, ~ ifelse(.x == "EXPSTD", "Â \UFFED", .x)),
    across(gen_blood:staff_other, ~ ifelse(.x == "EXP", "Â \U25CF", .x)),
    pacu_screen = ifelse(pacu_screen, "Â \U25CF", NA)
  )

# components
component_exp_dat <- study_arm_dat |>
  filter(refid %in% kq1_refid) |>
  filter(!refid %in% c(1263, 17155)) |>
  select(refid, year, study, study_l, arm_id, arm_kq1_eval, kq1_eras, gen_blood, gen_comp, gen_multi, gen_comorbid, gen_nutrition, gen_other, kq1_frail, kq1_cog, kq1_phys_func, kq1_psych, pt_nutr, pt_mobility, pt_surgery, pt_social, pt_other, staff_comorbid, staff_inappmed, staff_geriatrician, staff_multidisc, staff_supplement, staff_treatplan, staff_other, pacu_screen) |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  left_join(study_char_dat |> select(refid, design_f_lab, design_f_abbrev), by = "refid") |> 
  mutate(
    arm = ifelse(arm_kq1_eval == "eval_expand", "Exp", "Std"),
    # across(gen_blood:staff_other, ~ notna_to_x(.x, symbol = "EXP")),
    kq1_eras = ifelse(kq1_eras == "eras_yes", "Â Â x", NA),
    surg_design = paste0(surgs_single, " â€” ", design_f_lab)
  ) |> 
  filter(arm == "Exp") |> 
  slice(1, .by = study)

component_std_dat <- study_arm_dat |>
  filter(refid %in% kq1_refid) |>
  filter(!refid %in% c(1263, 17155)) |>
  select(refid, year, study, study_l, arm_id, arm_kq1_eval, kq1_eras, gen_blood_std, gen_comp_std, gen_multi_std, gen_comorbid_std, gen_nutrition_std, gen_other_std, kq1_frail_std, kq1_cog_std, kq1_phys_func_std, kq1_psych_std, pt_nutr_std, pt_mobility_std, pt_surgery_std, pt_social_std, pt_other_std, staff_comorbid_std, staff_inappmed_std, staff_geriatrician_std, staff_multidisc_std, staff_supplement_std, staff_treatplan_std, staff_other_std, pacu_screen) |>
  rename_with(~ str_remove(.x, "_std")) |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |>
  left_join(study_char_dat |> select(refid, design_f_lab, design_f_abbrev), by = "refid") |>
  mutate(
    arm = ifelse(arm_kq1_eval == "eval_expand", "Exp", "Std"),
    # across(gen_blood:staff_other, ~ notna_to_x(.x, symbol = "STD")),
    kq1_eras = ifelse(kq1_eras == "eras_yes", "Â Â x", NA),
    surg_design = paste0(surgs_single, " â€” ", design_f_lab)
  ) |>
  filter(if_any(kq1_eras:staff_other, ~ !is.na(.x))) |>
  filter(arm == "Std") |>
  slice(1, .by = study)

component_expanded_combined <- bind_rows(component_exp_dat, component_std_dat) |> 
  # filter(refid %in% c(16846, 16605)) |> 
  arrange(year, study, arm_id) |> 
  select(refid:kq1_psych, -kq1_eras) |> 
  mutate(across(gen_blood:gen_nutrition, ~ str_remove(.x, "_gen")))

# expanded_combined |> tabyl(surg_design) |> pull(surg_design) |> toString()

expanded_combined |> 
  arrange(year, study, arm_id) |> 
  select(refid, study, study_l, arm_id, arm, surg_design, kq1_eras, gen_blood, gen_comp, gen_multi, gen_comorbid, gen_nutrition, gen_other, kq1_frail, kq1_cog, kq1_phys_func, kq1_psych, pt_nutr, pt_mobility, pt_surgery, pt_social, pt_other, staff_comorbid, staff_inappmed, staff_geriatrician, staff_multidisc, staff_supplement, staff_treatplan, staff_other, pacu_screen) |> 
  filter(if_any(kq1_eras:kq1_psych, ~ !is.na(.x))) |>
  select(-arm_id) |> 
  distinct() |>
  group_by(surg_design) |> 
  gt(id = "one") |>
  row_group_order(groups = groups_kq1) |> # same ordering as study characteristics
  gt_theme_mg() |>
  sub_missing(columns = everything(), missing_text = "") |>
  cols_hide(c(refid, study, arm, gen_blood)) |>
  fmt_markdown(columns = c(study_l)) |>
  cols_label(
    study_l              = md("Study"),
    kq1_eras             = md(vert_lab_fun("ERAS")),
    # gen_blood            = md(vert_lab_fun("Blood work")),
    gen_comp             = md(vert_lab_fun("CGA")),
    gen_multi            = md(vert_lab_fun("Multidisciplinary")),
    gen_comorbid         = md(vert_lab_fun("Meds/Comorbidity")),
    gen_nutrition        = md(vert_lab_fun("Nutrition")),
    gen_other            = md(vert_lab_fun("Other")),
    # gen_unspec           = md(vert_lab_fun("No detail")),
    kq1_frail            = md(vert_lab_fun("Frailty")), 
    kq1_cog              = md(vert_lab_fun("Cognitive")), 
    kq1_phys_func        = md(vert_lab_fun("Physical Function")), 
    kq1_psych            = md(vert_lab_fun("Psychosocial")),
    pt_nutr              = md(vert_lab_fun("Nutrition")),
    pt_mobility          = md(vert_lab_fun("Physical activity")),
    pt_surgery           = md(vert_lab_fun("Procedure")),
    pt_social            = md(vert_lab_fun("Social Ties")),
    pt_other             = md(vert_lab_fun("Other")),
    staff_comorbid       = md(vert_lab_fun("Rx/comorbidities")),
    staff_inappmed       = md(vert_lab_fun("Deprescribing")),
    staff_geriatrician   = md(vert_lab_fun("Geriatric Visits")),
    staff_multidisc      = md(vert_lab_fun("Multidisciplinary")),
    staff_supplement     = md(vert_lab_fun("Nutritional Suppl")),
    staff_treatplan      = md(vert_lab_fun("Treatment Plan")),  
    staff_other          = md(vert_lab_fun("Other")),
    pacu_screen          = md(vert_lab_fun("Active Delirium Screen")),
  ) |> 
  cols_width(
    study_l        ~ px(165),
    kq1_eras       ~ px(25),
    gen_comp       ~ px(33),
    gen_multi:pacu_screen ~ px(25),
  ) |> 
  tab_spanner(label = "General", columns = c(gen_comp:gen_other), level = 1) |>
  tab_spanner(label = "Targeted", columns = c(kq1_frail:kq1_psych), level = 1) |>
  tab_spanner(label = "Assessments", columns = c(gen_comp:kq1_psych), level = 2) |>
  tab_spanner(label = "Patient Education", columns = c(pt_nutr:pt_other), level = 1) |>
  tab_spanner(label = "Staff", columns = c(staff_comorbid:pacu_screen), level = 1) |>
  tab_spanner(label = "Interventions", columns = c(pt_nutr:pacu_screen), level = 2) |>  #pacu_screen
  # tab_style(style = cell_text(align = "right"), locations = cells_column_labels(columns = c(kq1_eras:pacu_screen))) |> 
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(kq1_psych:pacu_screen))) |> 
  tab_style(style = list(cell_text(color = color_1)), locations = cells_column_labels(columns = c(gen_multi:gen_other))) |> 
  tab_style(style = list(cell_text(color = color_2)), locations = cells_column_labels(columns = c(kq1_frail:kq1_psych))) |> 
  tab_style(style = list(cell_text(color = color_3)), locations = cells_column_labels(columns = c(pt_nutr:pt_other))) |> 
  tab_style(style = list(cell_text(color = color_4)), locations = cells_column_labels(columns = c(staff_comorbid:pacu_screen))) |> 
  tab_style(style = list(cell_text(color = color_1)), locations = cells_body(columns = c(gen_multi:gen_other), rows = everything())) |> 
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(kq1_frail:kq1_psych), rows = everything())) |> 
  tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(pt_nutr:pt_other), rows = everything())) |> 
  tab_style(style = list(cell_text(color = color_4)), locations = cells_body(columns = c(staff_comorbid:pacu_screen), rows = everything())) |> 
  # tab_style(style = list(cell_text(color = color_5)), locations = cells_body(columns = c(pacu_screen), rows = everything())) |> 
  tab_style(style = list(cell_text(color = color_1)), locations = cells_column_spanners(spanners = "General")) |> 
  tab_style(style = list(cell_text(color = color_2)), locations = cells_column_spanners(spanners = "Targeted")) |> 
  tab_style(style = list(cell_text(color = color_3)), locations = cells_column_spanners(spanners = "Patient Education")) |> 
  tab_style(style = list(cell_text(color = color_4)), locations = cells_column_spanners(spanners = "Staff")) |> 
  tab_footnote(md("ERAS: enhanced recovery after surgery; CGA: comprehensive geriatric assessment; GI: gastrointestinal; Abd: abdominal; Suppl: supplement;  \U25CF expanded evaluation only; \UFFED in expanded and standard evaluation arms; \U25E6 in standard evaluation arms only")) |> 
  tab_footnote("When a comprehensive geriatric assessment (CGA) was conducted, all components were presumed included. ", locations = cells_body(columns = "gen_comp", rows = !is.na(gen_comp))) |> 
  tab_footnote("Selective comprehensive geriatric assessment in standard arm.", locations = cells_body(columns = c("gen_comp"), rows = study == "Giannotti 2022")) 
  
## screen only NONE that are not also in expanded$refid #####
# are none
# screen_only_refid <- study_arm_dat |>
#   filter(refid %in% kq8_refid) |>
#   filter(!refid %in% expanded_dat$refid) |>
#   pull(refid) |>
#   unique()
# 
# screenonly_dat <- study_arm_dat |>
#   filter(refid %in% screen_only_refid) |> 
#   select(refid, year, study, study_l, arm_id, arm_kq1_eval, kq1_eras, gen_blood, gen_comp, gen_multi, gen_comorbid, gen_nutrition, gen_other, kq1_frail, kq1_cog, kq1_phys_func, kq1_psych, pt_nutr, pt_mobility, pt_surgery, pt_social, pt_other, staff_comorbid, staff_inappmed, staff_geriatrician, staff_multidisc, staff_supplement, staff_treatplan, staff_other, pacu_screen) |>
#   left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
#   left_join(study_char_dat |> select(refid, design_f_lab, design_f_abbrev), by = "refid") |> 
#   mutate(
#     arm = "Screen only",
#     surg_design = paste0(surgs_single, " â€” ", design_f_lab),
#     pacu_screen = ifelse(pacu_screen, "Â \U25CF", NA)
#   ) |> 
#   slice(1, .by = study)

```

### Intervention Frequency

<caption_mg> `r table_ref()` Frequency of intervention components following expanded screening.  </caption_mg>

```{r component_tables}
#| layout: [[1, 1]]

interventions_dat <- study_arm_dat |>
  filter(!refid %in% c(1263, 17155)) |> # second hempenius and shyu
  filter(arm == "Exp") |>
  select(staff_comorbid, staff_inappmed, staff_geriatrician, staff_multidisc, staff_supplement, staff_treatplan, staff_other, pacu_screen, pt_nutr, pt_mobility, pt_social, pt_surgery, pt_other) |> 
  mutate(
    across(staff_comorbid:staff_other, ~ ifelse(!is.na(.x), 1, 0)),
    pacu_screen = pacu_screen * 1, 
  )

# other list
study_arm_dat |>
  select(refid, study, kq1_staff_other_spec) |>
  filter(!is.na(kq1_staff_other_spec)) -> staff_other

study_arm_dat |>
  select(refid, study, kq1_pt_other_spec) |>
  filter(!is.na(kq1_pt_other_spec)) -> pt_other
# 
# writexl::write_xlsx(pt_other, "/Users/mgrant/Desktop/pt_other.xlsx")
# writexl::write_xlsx(staff_other, "/Users/mgrant/Desktop/staff_other.xlsx")

interventions_1 <- interventions_dat |>
  select(staff_multidisc, staff_treatplan, staff_geriatrician, staff_inappmed, staff_supplement, staff_comorbid, pacu_screen, staff_other) |>
  tbl_summary(
    label = list(
      staff_comorbid       = "Rx/comorbidities",
      staff_inappmed       = "Deprescribing",
      staff_geriatrician   = "Geriatric Visits",
      staff_multidisc      = "Multidisciplinary",
      staff_supplement     = "Nutritional Supplement",
      staff_treatplan      = "Treatment Plan",
      staff_other          = "Other",
      pacu_screen          = "Active Delirium Screen"
    ),
    type = list(
      staff_comorbid       ~ "dichotomous",
      staff_inappmed       ~ "dichotomous",
      staff_geriatrician   ~ "dichotomous",
      staff_multidisc      ~ "dichotomous",
      staff_supplement     ~ "dichotomous",
      staff_treatplan      ~ "dichotomous",
      staff_other          ~ "dichotomous",
      pacu_screen          ~ "dichotomous"
    ),
    missing = "no",
  ) |>
  modify_header(label = "Intervention") |>
  # add_n() |>
  as_gt(id = "one") |>
  cols_width(
    label             ~ px(300),
    stat_0            ~ px(80)
  ) |>
  gt_theme_mg() |> 
  tab_header(
    title = "Staff interventions"
  )

interventions_2 <- interventions_dat |>
  select(pt_mobility, pt_nutr, pt_social, pt_surgery, pt_other) |>
  mutate(across(everything(), ~ifelse(!is.na(.x), 1, 0))) |>
  tbl_summary(
    label = list(
      pt_mobility          = "Physical Activity",
      pt_nutr              = "Nutrition",
      pt_surgery           = "Procedure",
      pt_social            = "Social Ties",
      pt_other             = "Other"
    ),
    type = list(
      pt_mobility          ~ "dichotomous",
      pt_nutr              ~ "dichotomous",
      pt_surgery           ~ "dichotomous",
      pt_social            ~ "dichotomous",
      pt_other             ~ "dichotomous"
    ),
    missing = "no",
  ) |>
  # add_n() |>
  modify_header(label = "Intervention") |>
  as_gt(id = "one") |>
  cols_width(
    label             ~ px(300),
    stat_0            ~ px(80)
  ) |>
  gt_theme_mg() |> 
  tab_header(
    title = "Patient interventions"
  )

interventions_2
interventions_1
```

<caption_mg> `r table_ref()` Frequency of components/domains of expanded evaluation in included studies.  </caption_mg>

```{r evaluation_tables}

expanded_dat |> 
  select(gen_multi:gen_nutrition, kq1_frail:kq1_psych) |> 
  mutate(across(gen_multi:kq1_psych, ~ifelse(!is.na(.x), 1, 0))) |> 
  tbl_summary(
    label = list(
      gen_multi             = "Multidisciplinary",
      gen_comorbid          = "Meds/Comorbidity Evaluation",
      gen_nutrition         = "Nutrtional Assessment",
      kq1_frail             = "Frailty Assessment or Screening",
      kq1_cog               = "Cognitive Assessment",
      kq1_phys_func         = "Physical Function",
      kq1_psych             = "Psychological Assessment"
    ),
    type = list(
      gen_multi             ~ "dichotomous",
      gen_comorbid          ~ "dichotomous",
      gen_nutrition         ~ "dichotomous",
      kq1_frail             ~ "dichotomous",
      kq1_cog               ~ "dichotomous",
      kq1_phys_func         ~ "dichotomous"
    ),
    missing = "no",
  ) |>
  # add_n() |>
  modify_header(label = "Component(s)") |>
  as_gt(id = "one") |>
  cols_width(
    label             ~ px(300),
    stat_0            ~ px(80)
  ) |>
  gt_theme_mg() |> 
  tab_header(
    title = "Components and Domains"
  )

```

## **Delirium Incidence**

<font size = 4> `r table_ref()` Delirium incidence with expanded versus standard preoperative evaluation. </font>

```{r delirium_meta_data}
#| eval: true
# NOTE: compared and reconciled reported and calculated % # mutate(calc_per = delitotal_n / arm_n * 100, per_diff = calc_per - delitotal_perc) |> filter(per_diff > 0.5)
delirium_meta_dat <- dichot_dat |> 
  filter(refid %in% expanded_combined$refid) |> 
  mutate(
    arm_n = ifelse(!is.na(deli_update_arm_n), deli_update_arm_n, arm_n),
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
  ) |> 
  filter(!is.na(delitotal_n) | refid == 16629) |> # 
  left_join(study_char_dat |> select(refid, country, surgs), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  rename(surg_f = surgs) |> 
  select(refid, study, arm_id, arm, year, design_f_lab, country, surg_f, delitotal_n, arm_n, delirium_inc_prop, delitotal_time:delitotal_95high, deli_scale_cam:deli_scale_otherspec) |> 
  arrange(design_f_lab, study, arm_id)

```

```{r delirium_tab}
#| eval: true
# referent values for calculating rr and ci; rr_ci
delirium_rr_ref <- delirium_meta_dat |>
  select(refid, refid, arm_id, delitotal_n, arm_n) |>
  filter(!is.na(delitotal_n)) |>
  arrange(refid, arm_id) |>
  rename(ref_deli_n = delitotal_n, ref_arm_n = arm_n) |>
  # group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() > 1, NA, ref_deli_n),
    .by = refid
  ) |>
  fill(ref_arm_n, ref_deli_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() == 1, NA, ref_deli_n),
    .by = refid
  ) 

delirium_tab <- delirium_meta_dat |>
  # select(refid, refid, year, arm_id, design_f_lab, study, study_l, arm_n, delitotal_time:delitotal_95high, deli_scale_cam:deli_scale_otherspec) |>
  mutate(
    across(starts_with("deli_"), ~ str_remove_all(.x, "scale_")),
    across(starts_with("deli_"), ~ str_remove_all(.x, "deli_")),
    across(deli_scale_cam:deli_scale_icdsc, ~ toupper(.x)),
  ) |>
  rename_with(~ gsub("scale_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("deli_", "", .x, fixed = TRUE)) |>
  left_join(delirium_rr_ref, by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, study_l), by = c("refid")) |>
  mutate(
    # other = ifelse(str_detect(otherspec, "AMT"), "AMT", other),
    # other = ifelse(str_detect(otherspec, "Psychiatrist consultation"), "Psych", other),
    # other = ifelse(str_detect(otherspec, "Chinese"), "Note", other),
    # other = ifelse(other == "other", NA_character_, other),
    delitotal_n = ifelse(study == "Vochteloo 2011" & arm_id == 4, 102, delitotal_n),
    calc_percent = delitotal_n / arm_n * 100,
    calc_percent = ifelse(study == "Vochteloo 2011", delitotal_perc, calc_percent), 
    n_percent = n_per_fun(delitotal_n, arm_n, 1),
    rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(delitotal_n, arm_n, ref_deli_n, ref_arm_n), "â€”"),
    n_percent = ifelse(study == "Vochteloo 2011" & arm_id %in% c(1:3), paste0("(", formatC(delitotal_perc, digits = 1, format = "f"), ")"), n_percent),
    arm_n = ifelse(study == "Vochteloo 2011" & arm_id %in% c(1:3), "", arm_n)
    # arm_n = ifelse(refid == 16629 & arm_id %in% c(1:3), "â€”", arm_n),
  ) |>
    # mutate(
    #   study_l = case_when(
    #   study == "Lau 2013" & arm_id == 2 ~ "Â Â Â 2007",
    #   study == "Lau 2013" & arm_id == 3 ~ "Â Â Â 2008",
    #   study == "Lau 2013" & arm_id == 4 ~ "Â Â Â 2009",
    #   study == "Lau 2013" & arm_id == 5 ~ "Â Â Â 2010",
    #   .default = study_l
    # )) |> 
  relocate(calc_percent, .after = delitotal_perc) |>
# VARIABLE: changed delirium index variable name  
  unite(scale_delirium, cam:other, remove = TRUE, sep = "/", na.rm = TRUE) |>
  mutate(
    scale_delirium = ifelse(scale_delirium == "unspec", "NR", scale_delirium),
    scale_delirium = ifelse(scale_delirium == "DELIRIUM INDEX (DI)", "DI", scale_delirium),
    scale_delirium = ifelse(scale_delirium == "DELIRIUM OBSERVATION SCREENING (DOS)/DSM", "DOS/DSM", scale_delirium),
    scale_delirium = ifelse(scale_delirium == "DELIRIUM OBSERVATION SCREENING (DOS)/other", "DOS/other", scale_delirium),
  ) |>
  select(year, refid, refid, design_f_lab, study, study_l, arm_id, arm_n, arm, scale_delirium, delitotal_time, n_percent, calc_percent, rr_ci, surg_f) |>
  # arrange(year, study, refid, desc(arm)) |>
  left_join(table_mn_med |> select(refid, arm_id), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, cog_imp_nper), by = c("refid", "arm_id")) |>
  relocate(cog_imp_nper, .before = scale_delirium) |>
  relocate(age_table, .after = arm_n)

```

```{r delirium_gt}
#| eval: true
delirium_tab |> 
    arrange(surg_f, year, study, arm_id) |>
    mutate(
      delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
      delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time),
      study_l = ifelse(row_number() > 1, "", study_l),
      delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
      scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
      surg_f = ifelse(row_number() > 1, "", as.character(surg_f)),
      bar = case_when(
        str_detect(arm, "Exp") ~ bar_prop(calc_percent, color_2),
        .default = bar_prop(calc_percent, "#969696")),
      .by = study
    ) |>
    relocate(surg_f, .after = delitotal_time) |> 
    group_by(design_f_lab) |>
    gt(id = "one") |>
    row_group_order(groups = c("Randomized Clinical Trial", "Before-After/Time Series", "Retrospective Cohort")) |>
    cols_hide(c(year, refid, arm_id, study, age_table, calc_percent)) |>
    cols_label(
      study_l = "Study",
      arm_n = "Â N",
      # age_table = "Â Â Age",
      arm = md("Arm"),
      cog_imp_nper = md("Dementia<br/>N (%)"),
      scale_delirium = "Scale",
      delitotal_time = "Day(s)",
      surg_f = "Surgery",
      n_percent = "N (%)",
      bar = "0 â€“ 100%",
      rr_ci = "RR (95% CI)"
    ) |>
    fmt_markdown(columns = c(study_l, bar)) |>
    tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, arm, scale_delirium, surg_f))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, delitotal_time, n_percent, rr_ci, cog_imp_nper))) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(arm, scale_delirium, bar, surg_f))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, rr_ci, cog_imp_nper))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(n_percent, arm_n))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(n_percent))) |>
    tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:n_percent), rows = str_detect(arm, "Exp"))) |>
    sub_missing(columns = delitotal_time, missing_text = "Note") |>
    gt_theme_mg() |>
    cols_width(
      study_l ~ px(165),
      arm_n ~ px(45),
      # age_table ~ px(100),
      arm ~ px(40),
      cog_imp_nper ~ px(80),
      scale_delirium ~ px(105),
      delitotal_time ~ px(55),
      surg_f ~ px(70),
      n_percent ~ px(90),
      bar ~ px(100),
      rr_ci ~ px(140)
    ) |> 
  tab_style(style = list(cell_text(color = color_2)),   locations = cells_body(columns = c(arm_n:n_percent), rows = str_detect(arm, "Exp"))) |>
  tab_footnote("RR: risk ratio; CAM: Confusion Assessment Method; DI: Delirium Index; DRS: Delirium Rating Scale; DOS: delirium observation screening; DSM: Diagnostic and Statistical Manual of Mental Disorders; NR: not reported; HipFx: hip fracture; GI/Abd: gastrointestinal or abdominal.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Day(s) over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |> 
  tab_footnote("N = 611 for the 3 years of standard evaluation (2005-2007); outcomes reported by year separately.", locations = cells_body(columns = c(arm_n), rows = study == "Vochteloo 2011" & arm_id %in% c(1:3)), placement = "left") |> 
  tab_footnote("2005.", locations = cells_body(columns = c(arm), rows = study == "Vochteloo 2011" & arm_id %in% c(1)), placement = "right") |> 
  tab_footnote("2006.", locations = cells_body(columns = c(arm), rows = study == "Vochteloo 2011" & arm_id %in% c(2)), placement = "right") |> 
  tab_footnote("2007.", locations = cells_body(columns = c(arm), rows = study == "Vochteloo 2011" & arm_id %in% c(3)), placement = "right")
```

### *Pooled*

```{r delirium_meta}
delirium_meta_all_dat <- delirium_meta_dat |> 
  arrange(year, study, arm)

pairwise_all_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = delirium_meta_all_dat,
  sm = "RR") |> 
  select(studlab:surg_f) 

del_meta_rct_dat <- pairwise_all_dat |>
  filter(str_detect(design_f_lab, "Randomized")) |> 
  left_join(rob2_meta_dat, by = "refid") |>
  select(study, year, event2, n2, event1, n1, D1:Overall, surg_f) |>
  mutate(
    sample_size = n1 + n2,
  )

del_meta_nrsi_dat <- pairwise_all_dat |>
  filter(!str_detect(design_f_lab, "Randomized")) |>
  left_join(robinsi_meta_dat, by = "refid") |>
  select(study, year, event2, n2, event1, n1, D1:Overall, surg_f) |>
  mutate(
    sample_size = n1 + n2
  )

delirium_rct_meta <- metabin(event1, n1, event2, n2,
  data = del_meta_rct_dat,
  studlab = study,
  # subset = study != "Partridge 2017",
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "HK",
  method.predict = "HK",
  prediction = TRUE,
  allstudies = TRUE,
  # method.random.ci = "classic",
  # subgroup = surg_f
)

# temp <- update(delirium_rct_meta, sm = "OR", subgroup = NULL)
# DescTools::ORToRelRisk(0.81, 0.36)

# vochteloo_dat <- tribble(
#   ~study, ~year, ~event2, ~n2, ~event1, ~n1,
#   "Vochteloo 2011", 2011, 164, 611, 102, 378
# )
# 
# # for senstivity
# del_meta_nrsi_dat_voch <- del_meta_nrsi_dat |>
#   select(study:n1) |>
#   rbind(vochteloo_dat)

delirium_nrsi_meta <- metabin(event1, n1, event2, n2,
  data = del_meta_nrsi_dat,
  # data = del_meta_nrsi_dat_voch,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "HK",
  method.predict = "HK",
  prediction = TRUE,
  allstudies = TRUE,
  # subgroup = surg_f
)

```

<a id="kq1_delirium_rct"></a>

<font size = 4> `r figure_ref()` Delirium incidence following expanded compared with standard preoperative evaluation in randomized clinical trials.   </font>

```{r delirium_meta_rct_forest, warning = TRUE}
#| echo: false
#| include: false

png("assets/kq1_delirium_rct.png", width = 10.47, height = 4.02, units = "in", res = 300)
forest(delirium_rct_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "surg_f", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "Surgery", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  sortvar = surg_f,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  # print.subgroup.name = FALSE,
  # prediction.subgroup = TRUE,
  xlim = c(0.2, 2),
  xlab = "Favors: ExpandedÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Standard",
  addrows.below.overall = 4,
  text.addline1 = "Hip fracture RR 0.84 (95% CI, 0.70-0.99; 4 trials)",
  text.addline2 =  "Various procedures RR 0.54 (95% CI, 0.33-0.89; 2 trials)"
)
dev.off()
```

![](assets/kq1_delirium_rct.png){fig.align="left" width="78%"}

<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .</foot_mg>

<a id="kq1_delirium_nrsi"></a>

<br/>

<font size = 4> `r figure_ref()` Delirium incidence following expanded compared with standard preoperative evaluation in nonrandomized designs. </font>

```{r delirium_meta_nrsi_forest}
#| echo: false
#| include: false

png("assets/kq1_delirium_nrsi.png", width = 11.31, height = 4, units = "in", res = 300)
forest(delirium_nrsi_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "surg_f", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR", "(95% CI)", "Surgery", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  sortvar = surg_f,
  prediction = TRUE,
  # print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.2, 2),
  xlab = "Favors: ExpandedÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Standard",
  addrows.below.overall = 4
)
dev.off()

```

![](assets/kq1_delirium_nrsi.png){fig.align="left" width="84%"}

<foot_mg> RR: risk ratio; D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable.<br/> Sensitivity analysis including Vochteloo 2011 assuming effectively equal numbers of participants studied each year, obtained RR 0.70 (95% CI, 0.53-0.95; PI, 0.35â€“1.42). </foot_mg>

## **Physical Function**

<font size = 4> `r table_ref()` Physical functional status for expanded versus standard preoperative evaluation (randomized\* and nonrandomized designs). </font>

```{r exp_std_adl}
#| include: true
#| eval: true
#| warning: false

## main data ------------------------------------------ (2023-07-13 10:05) @----
adl_likert_dat <- likert_dat |> 
  # remove Shyu 2008 (duplicate of Shyu 2009)
  filter(study != "Shyu 2008") |>
  # filter(study == "Shyu 2005") |>
  mutate(
    # adl_koos, adl_sf36, adl_womac_func, adl_womac_stiff, adl_qlq_func, adl_other
    adl_scale = coalesce(adl_koos, adl_sf36, adl_womac_func, adl_womac_stiff, adl_qlq_func, adl_other),
    adl_scale = case_when(
      adl_scale == adl_sf36 ~ "SF-36 physical",
      str_detect(adl_other_spec, "Bar?thel") ~ "Barthel Index",
      adl_other_spec ==  "Short Performance Physical Battery" ~ "SPPB",
      str_detect(adl_other_spec, "Groningen") ~ "GARS"
    )
  ) |> 
  filter(!is.na(l_adl)) |> 
  relocate(adl_scale, .after = arm) |> 
  select(refid, study_l, study, arm_id, arm, arm_n, adl_scale, adl_koos:adl_other_spec, matches("sf36_pcs|womac_func|qlq_fs|adl")) |> 
  # select(refid, study, arm, adl_scale, matches("otheradl")) |> 
  rename_with(~ str_replace(., "_95", "ci95")) |> 
  rename_with(~ str_replace(., "other", "other_")) |> 
  mutate(
    # delete Chinese Barthle Index data from Shu 2005; coalesce assumes only adls from 1 instrument
    across(c(adl_other_, adl_other__spec, l_adl, adl_update_arm_n1, adl_update_arm_n2, other_adl_time1, other_adl_m1, other_adl_sd1, other_adl_pval1_betw, other_adl_time2, other_adl_m2, other_adl_sd2, other_adl_pval2_betw), ~ ifelse(study == "Shyu 2005", NA, .))) %>% 
  mutate(
    time1       = coalesce(!!!select(., contains("time1"))),
    m1          = coalesce(!!!select(., contains("m1"))),
    sd1         = coalesce(!!!select(., contains("sd1"))),
    ci95l1      = coalesce(!!!select(., contains("ci95l1"))),
    ci95u1      = coalesce(!!!select(., contains("ci95u1"))),
    med1        = coalesce(!!!select(., contains("med1"))),
    rl1         = coalesce(!!!select(., contains("rl1"))),
    ru1         = coalesce(!!!select(., contains("ru1"))),
    iqrl1       = coalesce(!!!select(., contains("iqrl1"))),
    iqru1       = coalesce(!!!select(., contains("iqru1"))),
    diff1       = coalesce(!!!select(., contains("diff1"))),
    diffsd1     = coalesce(!!!select(., contains("diffsd1"))),
    diff95low1  = coalesce(!!!select(., contains("diff95low1"))),
    diff95high1 = coalesce(!!!select(., contains("diff95high1"))),
    pval1in     = coalesce(!!!select(., contains("pval1_in"))),
    pval1betw   = coalesce(!!!select(., contains("pval1_betw"))),
    time2       = coalesce(!!!select(., contains("time2"))),
    sd2         = coalesce(!!!select(., contains("sd2"))),
    m2          = coalesce(!!!select(., contains("m2"))),
    ci95l2      = coalesce(!!!select(., contains("ci95l2"))),
    ci95u2      = coalesce(!!!select(., contains("ci95u2"))),
    med2        = coalesce(!!!select(., contains("med2"))),
    rl2         = coalesce(!!!select(., contains("rl2"))),
    ru2         = coalesce(!!!select(., contains("ru2"))),
    iqrl2       = coalesce(!!!select(., contains("iqrl2"))),
    iqru2       = coalesce(!!!select(., contains("iqru2"))),
    diff2       = coalesce(!!!select(., contains("diff2"))),
    diffsd2     = coalesce(!!!select(., contains("diffsd2"))),
    diff95low2  = coalesce(!!!select(., contains("diff95low2"))),
    diff95high2 = coalesce(!!!select(., contains("diff95high2"))),
    pval2in    = coalesce(!!!select(., contains("pval2_in"))),
    pval2betw  = coalesce(!!!select(., contains("pval2_betw"))),
    time3       = coalesce(!!!select(., contains("time3"))),
    m3          = coalesce(!!!select(., contains("m3"))),
    sd3         = coalesce(!!!select(., contains("sd3"))),
    ci95l3      = coalesce(!!!select(., contains("ci95l3"))),
    ci95u3      = coalesce(!!!select(., contains("ci95u3"))),
    med3        = coalesce(!!!select(., contains("med3"))),
    rl3         = coalesce(!!!select(., contains("rl3"))),
    ru3         = coalesce(!!!select(., contains("ru3"))),
    iqrl3       = coalesce(!!!select(., contains("iqrl3"))),
    iqru3       = coalesce(!!!select(., contains("iqru3"))),
    diff3       = coalesce(!!!select(., contains("diff3"))),
    diffsd3     = coalesce(!!!select(., contains("diffsd3"))),
    diff95low3  = coalesce(!!!select(., contains("diff95low3"))),
    diff95high3 = coalesce(!!!select(., contains("diff95high3"))),
    pval3in    = coalesce(!!!select(., contains("pval3_in"))),
    pval3betw  = coalesce(!!!select(., contains("pval3_betw"))),
  ) |> 
  select(refid, study_l, study, arm_id, arm, arm_n, adl_scale, !contains("_"), matches("adl_update_arm_n[1-3]")) |> 
  rename_with(~ paste0("adl_", .x), .cols = matches("[1-3]")) |> 
  rename_with(~ str_remove(.x, "adl_adl_")) 

## adl_transpose -------------------------------------- (2023-07-13 10:06) @----
adl_transpose <- function(data, obs_number){
  obs_number <- as.character(obs_number)
  data |> 
  select(refid:adl_scale, matches(obs_number)) |> 
  rename_with(~ str_replace(.x, obs_number, ""))
}

## adl_long_dat --------------------------------------- (2023-07-13 10:06) @----
adl_long_dat <- bind_rows(
  adl_transpose(adl_likert_dat, 1),
  adl_transpose(adl_likert_dat, 2),
  adl_transpose(adl_likert_dat, 3)) |>
  # update arms at follow-up times
  mutate(arm_n = ifelse(!is.na(update_arm_n), update_arm_n, arm_n)) |>
  select(-update_arm_n) |>
  filter(!is.na(adl_time))

```

```{r exp_std_adl_estimates}
# add formatted m/med and imputed mean sd if missing
adl_mn_med_dat <- mean_med_table_adl(adl_long_dat, "adl_") |>
  filter(!is.na(adl_time)) |>
  select(-scale)

adl_long_dat <- left_join(adl_long_dat, adl_mn_med_dat, by = c("refid", "arm_id", "adl_time")) |>
  rename_with(~ str_remove(.x, "adl_")) |>
  mutate(
    scale = ifelse(study == "Deschodt 2011", "Katz Index", scale),
    study = paste0(study, "-", time)
  )

# function to calculate means, sd, and create analytical data set
calc_mn_sd <- function(n_e, m_e, sd_e, md_e, q1_e, q3_e, min_e, max_e, study, tx, refid, data = NULL) {
  temp_dat <- data |> 
    select(all_of(c(n_e, m_e, sd_e, md_e, q1_e, q3_e, min_e, max_e, study, tx, refid))) %>%
    mutate(n_c = 20, m_c = 2, sd_c = 1, md_c = 3, q1_c = 2, q3_c = 3, min_c = 1, max_c = 5)
  names(temp_dat)[1:10] <- c("n_e", "m_e", "sd_e", "md_e", "q1_e", "q3_e", "min_e", "max_e", "study", "tx")

  temp <- metacont(
    n.e = n_e,
    n.c = n_c,
    comb.fixed = TRUE,
    mean.e = m_e,
    sd.e = sd_e,
    median.e = md_e,
    q1.e = q1_e,
    q3.e = q3_e,
    min.e = min_e,
    max.e = max_e,
    mean.c = m_c,
    sd.c = sd_c,
    median.c = md_c,
    q1.c = q1_c,
    q3.c = q3_c,
    min.c = min_c,
    max.c = max_c,
    sm = "SMD",
    studlab = study,
    data = temp_dat
  )

  temp <- as_tibble(temp[c("studlab", "n.e", "mean.e", "sd.e")])
  cbind(temp_dat$tx, temp) 
}

adl_scales_dat <- tribble(
  ~study, ~scale, ~metric,
  "Watne 2014", "Barthel Index", "0â†’20",
  "Prestmo 2015", "Barthel Index", "0â†’20",
  "Zhu 2022", "Barthel Index", "0â†’100",
  "Hempenius 2016", "SF-36 physical", "0â†’100",
  "Bakker 2014", "GARS", "44â†’11",
  "Richter 2005", "SF-36 physical", "0â†’100",
  "Deschodt 2011", "Katz index", "0â†’18",
  "Shyu 2005", "Chinese Barthel Index", "0â†’100",
  "Shyu 2008", "Chinese Barthel Index", "0â†’100"
)

adl_long_dat <- left_join(
  adl_long_dat,
  calc_mn_sd("arm_n", "m", "sd", "med", "iqrl", "iqru", "rl", "ru", "study", "arm", refid = "refid", data = adl_long_dat) |> rename(arm = "temp_dat$tx", study = studlab),
  by = c("study", "arm")
) |>
  # add calculable missing sd estimates, for Zhu 2022 sd_bwgrp_fun(51.7, 50.5, 85, 70, 0.522)[3]; Bakker use diff
  mutate(
    sd.e = ifelse(study == "Zhu 2022-21", 11.85844, sd.e),
    mean.e = ifelse(is.na(mean.e) & str_detect(study, "Bakker"), -diff, mean.e),
    study_time = study,
    study = str_remove(study_time, "-.*$"),
    year = str_extract(study, "\\d{4}"),
    period = case_when(
      time < 30 ~ "<30 days",
      time <= 90 ~ "30-90 days",
      time > 90 ~ ">90 days"
    )
  ) |>
  left_join(adl_scales_dat |> select(-scale), by = "study") |>
  select(-c(ci95l:pvalbetw)) |>
  select(refid:study, study_time, arm_id, arm_n, arm, scale, metric, everything()) |>
  arrange(year, study_time, arm_id) |>
  filter(time != 0) |>
  mutate(
    smd = case_when(
      arm_id == 2 ~ suppressWarnings(smd_ci(n.e, mean.e, sd.e, lag(n.e), lag(mean.e), lag(sd.e))),
      arm_id == 1 ~ NA
    ),
    .by = study_time
  ) 

adl_meta_dat <- adl_long_dat |> 
  left_join(study_char_dat |> select(refid, design_f, surgs), by = "refid") |> 
  mutate(study = ifelse(design_f == "rct", paste0(study, "*"), study)) |> 
  select(study, design_f, arm, time, period, n.e, mean.e, sd.e, surgs) |> 
  pivot_wider(names_from = arm, values_from = c(n.e, mean.e, sd.e)) |> 
  rename_with(~ str_remove(.x, "\\.e"))
```

```{r exp_std_adl_gt} 
adl_long_dat |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, design_f, surgs), by = "refid") |> 
  mutate(study_l = ifelse(design_f == "rct", str_replace(study_l, "]", "*]"), study_l),
         surgs = as.character(surgs)) |> 
  relocate(age_table, .after = arm) |>
  arrange(surgs, study, time, arm_id) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    scale = ifelse(row_number() > 1, "", scale),
    time = ifelse(row_number() > 1, "", time),
    metric = ifelse(row_number() > 1, "", metric),
    surgs = ifelse(row_number() > 1, "", surgs),
    .by = study_time
  ) |>
  group_by(period) |>
  gt(id = "one") |>
  row_group_order(groups = c("<30 days", "30-90 days", ">90 days")) |>
  cols_hide(c(refid, study, study_time, arm_id, m, sd, sd.e, n.e, mean.e, year, design_f)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = "N",
    arm              = "Arm",
    age_table        = "Â Â Â Â Age",
    scale            = "Scale",
    metric           = "Range",
    time             = "Days",
    table            = "Rating",
    smd              = "SMD (95% CI)",
    surgs            = "Surgery",
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, age_table, table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  # fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  sub_missing(columns = everything(), missing_text = "") |>
  # replace relative effects calculated from studies with 0 events in one arm
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(135),
    arm_n ~ px(45),
    arm ~ px(50),
    age_table ~ px(90),
    scale ~ px(100),
    metric ~ px(70),
    time ~ px(40),
    table ~ px(90),
    smd ~ px(140),
    surgs ~ px(80),
  ) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:smd), rows = str_detect(arm, "Exp"))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(surgs))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(surgs))) |>
  tab_footnote(md("SMD: standardized mean difference; GARS: Groningen Activity Restriction Scale.")) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, table))) |>
  tab_footnote("* Randomized clinical trial.") |> 
  tab_footnote("For scale reverse to be consistent with other studies.", locations = cells_body(columns = c(smd), rows = str_detect(study, "Bakker 2014") & arm == "Exp")) |>
  tab_footnote("Study reported only difference scores.", locations = cells_body(columns = c(table), rows = str_detect(study, "Bakker 2014")))
  # tab_footnote("120 days", locations = cells_body(columns = c(table), rows = time == 120)) |> 
  # tab_footnote("365 days", locations = cells_body(columns = c(table), rows = time == 365)) 
```

### *Pooled*

<font size = 4> `r figure_ref()` Pooled results for physical functional status for expanded versus standard preoperative evaluation (higher is better; randomized clinical trials). </font>

```{r exp_std_rct_forest}
#| include: false
#| echo: false

adl_meta_lte180_dat <- adl_meta_dat |> 
  filter(time < 365) |> 
  mutate(study = str_replace(study, "\\*", "")) |> 
  arrange(time)

adl_rct_meta <- metacont(n_Exp, mean_Exp, sd_Exp, n_Std, mean_Std, sd_Std,
  data = adl_meta_lte180_dat,
  studlab = study,
  sm = "SMD",
  # subgroup = period,
  subset = design_f == "rct",
  cluster = study
)

adl_nrsi_meta <- metacont(n_Exp, mean_Exp, sd_Exp, n_Std, mean_Std, sd_Std,
  data = adl_meta_lte180_dat,
  studlab = study,
  sm = "SMD",
  # subgroup = period,
  subset = design_f != "rct",
  cluster = study
)

# adl_meta <- metacont(n_Exp, mean_Exp, sd_Exp, n_Std, mean_Std, sd_Std,
#   data = adl_meta_lte180_dat,
#   studlab = study,
#   sm = "SMD",
#   subgroup = period,
#   cluster = study
# )

png("assets/kq1_adl_forest.png", width = 9.78, height = 3.8, units = "in", res = 300)
forest(adl_rct_meta,
  common = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  leftcols = c("studlab", "n.e", "mean.e", "sd.e", "n.c", "mean.c", "sd.c"),
  rightcols = c("effect", "ci", "time", "surgs"),
  rightlabs = c("SMD", "(95% CI)Â Â Â ", "Day", "Surgery"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  # sortvar = year,
  prediction = TRUE,
  fs.xlab = 11,
  digits.sd = 1,
  digits.mean = 1,
  # pooled.events = TRUE,
  print.pval.Q = FALSE,
  test.subgroup = FALSE,
  print.subgroup.name = FALSE,
  # xlim = c(0.1, 3),
  xlab = "Favors: StandardÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Expanded",
  addrows.below.overall = 4
)
dev.off()

```

![](assets/kq1_adl_forest.png){fig.align="left" width="72%"}

<foot_mg> Multilevel model fitted accounting for studies reporting at more than one time point. </foot_mg> 


::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### Meta-analysis methods detail.

```{r}
#| include: false  

temp <- print(adl_rct_meta) |> 
  str_replace_all("\\n", "<br/> ") |>
  str_remove("<br/> Details on meta-analytical method:<br/> ") |> 
  str_replace_all("tau\\^2", "tau<sup>2</sup>") |> 
  str_replace_all("tau", "&tau;")

```

<foot_mg> `r temp` </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` SMDs over time. </caption_mg> <a id="bubble-plot"></a>

```{r bubble_plot_function}
#| include: false
#| echo: false

temp_rct <- tibble(with(adl_rct_meta, data.frame(yi_meta = TE, vi_meta = seTE, study = studlab, time = data$time[subset]))) |> 
  mutate(study = str_replace(study, "\\*", "")) 

fitted_meta <- metafor::rma.mv(yi_meta, vi_meta, random = ~ 1 | study, mods = ~ time,  slab = study, data = temp_rct)

png("assets/kq1_function_bubble.png", width = 7, height = 5, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
metafor::regplot(fitted_meta,
  xlab = "Days",
  ylab = "SMD", 
  xlim = c(0, 130), 
  at = c(seq(-1, 1, 0.5)),
  # predlim = c(0, 0.30),
  # atransf = exp,
  labsize = 0.7, 
  # predlim = c(0, 0.445),
  las = 1,
  label = TRUE,
  offset = c(0.8),
  lwd = 0.5,
)

dev.off()

rm(temp, fitted_meta)
```

![](assets/kq1_function_bubble.png){width="50%"}

:::

<font size = 4> `r figure_ref()` Pooled results for physical functional status for expanded versus standard preoperative evaluation (higher is better; before-after studies). </font>

```{r exp_std_nrsi_forest}
#| include: false
#| echo: false

png("assets/kq1_adl_nrsi_forest.png", width = 9.83, height = 3.6, units = "in", res = 300)
forest(adl_nrsi_meta,
  common = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  leftcols = c("studlab", "n.e", "mean.e", "sd.e", "n.c", "mean.c", "sd.c"),
  rightcols = c("effect", "ci", "time", "surgs"),
  rightlabs = c("SMD", "(95% CI)Â Â Â ", "Day", "Surgery"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  # sortvar = year,
  prediction = TRUE,
  fs.xlab = 11,
  digits.sd = 1,
  digits.mean = 1,
  # pooled.events = TRUE,
  print.pval.Q = FALSE,
  # test.subgroup = FALSE,
  # print.subgroup.name = FALSE,
  # xlim = c(0.1, 3),
  xlab = "Favors: StandardÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Expanded",
  addrows.below.overall = 4
)
dev.off()


```

![](assets/kq1_adl_nrsi_forest.png){width="72%"}

<foot_mg> Multilevel model fitted accounting for reporting at more than one time point. </foot_mg> 

## **Complications**

```{r complications_check}
#| eval: false
# create excel file to inspect
complication_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, study, arm_id, arm, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high"))
}

complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

# complication <- c("medical", "surg", "cardiac", "gastro", "neuro", "pulm", "thromb", "infect", "fall", "stroke", "othcomp", "asppneum", "atelec", "bronch", "cardarr", "myoinfarct", "ssi", "sepsis", "uti", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48", "kidneyinj", "nerveinj", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

adverse_events_dat <- map(complication_incl, complication_fun)

wb <- openxlsx::createWorkbook("kq1_complications")

for (i in 1:17) {
    temp_sheet <- adverse_events_dat[[i]]
    addWorksheet(wb, sheetName = complication_incl[i])
    setColWidths(wb, i, cols = c(1:12), widths = c(rep(15, 12)))
    writeData(wb, sheet = i, temp_sheet)
}

path <- glue::glue("/Users/mgrant/Desktop/temp.xlsx")
saveWorkbook(wb, "/Users/mgrant/Desktop/kq4.xlsx", overwrite = TRUE)
```

<font size = 4> `r table_ref()` Reported complications in expanded versus standard preoperative evaluation --- cardiac, pulmonary, and acute kidney injury (randomized and nonrandomized designs). </font>

```{r complications}
#| warning: true
#| eval: true

# included complications
complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

# complication_all <- c("medical", "surg", "cardiac", "gastro", "neuro", "pulm", "thromb", "infect", "fall", "stroke", "othcomp", "asppneum", "atelec", "bronch", "cardarr", "myoinfarct", "ssi", "sepsis", "uti", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48", "kidneyinj", "nerveinj", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

complication_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, year, study, arm_id, arm, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high")) |>
    mutate(complication = var_prefix) |>
    rename_with(~ str_replace(.x, "95", "ci_"), .cols = everything()) |>
    rename_with(~ str_replace(.x, "^.*_", ""), .cols = c(8:15)) |>
    arrange(complication, year, study, arm_id)
}

# adverse event data includes all reported complications in liss=t
adverse_events_dat <- map_df(complication_incl, complication_fun) |>
  mutate(
    arm_n = ifelse(!is.na(comp_update_arm_n), comp_update_arm_n, arm_n),
    calc_per = n / arm_n * 100,
    n_per = n_per_fun(n, arm_n, 1),
    diff = per - calc_per
  )

adverse_events_dat <- adverse_events_dat |>
  left_join(cardiac_compl, by = c("refid", "complication")) |>
  left_join(pulmonary_compl, by = c("refid", "complication")) |>
  left_join(study_char_dat |> select(refid, study_l, surgs_single, design_f_lab), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  arrange(complication, surgs_single, year, study, arm_id) |>
  mutate(
    study_compl = paste0(study, complication),
    ref_arm_n = arm_n,
    ref_n = n
  ) |>
  group_by(study_compl) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |>
  mutate( 
    # Luntz 2004 combine inhalation arms; differed in induction
    # ref_arm_n = ifelse(study == "Luntz 2004" & arm_id == 3, 64, ref_arm_n),
    # ref_n = ifelse(study == "Luntz 2004" & arm_id == 3, 5, ref_n),
    # ref_arm_n = ifelse(study == "Luntz 2004" & arm_id == 2, NA, ref_arm_n),
    # ref_n = ifelse(study == "Luntz 2004" & arm_id == 2, NA, ref_n),
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 1), "â€”"),
    rr_ci = ifelse(!is.na(ref_n) & n != 0 & ref_arm_n != 0, rr_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 2), "â€”"), # not if any Os
    bar = case_when(
      study == "Lau 2013" & arm_id == 2 ~ bar_prop(0.3, "#A93226"),
      study == "Lau 2013" & arm_id == 3 ~ bar_prop(1.1, "#A93226"),
      study == "Lau 2013" & arm_id == 4 ~ bar_prop(0.6, "#A93226"),
      study == "Lau 2013" & arm_id == 5 ~ bar_prop(0.8, "#A93226"),
      str_detect(arm, "Exp") ~ bar_prop(calc_per, "#A93226"),
      .default = bar_prop(calc_per, "#969696"))) |>
  select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n, age_table, surgs_single, n_per, bar, rd_ci, rr_ci, complication, design_f_lab, effect:high, detail_cardiac, detail_pulmonary)

# for summary table
# adverse_events_dat |>
#   # group_by(refid, arm_id) |>
#   # filter(!str_detect(design_f_lab, "NRSI")) |>
#   select(refid, study, design_f_lab) |> 
#   unique() |> 
#   arrange(design_f_lab) 
# 
#   
#   group_by(design_f_lab) |> select(refid) |> unique() |> arrange(design_f_lab) |> summarise(n = n())
#   summarise(total = sum(arm_n, na.rm = TRUE))

# 2023-10-06 12:27
# 4 RCTs 1084
# 7 NRSI 3089

# 2024-04-02
# Randomized Clinical Trial  1084
# Before-After/Time Series   2113
# Retrospective Cohort        228
# Total 3425
# 
# Correct 2024-04-02
# Randomized Clinical Trial     4
# Before-After/Time Series      8
# Retrospective Cohort          1

```

```{r complications_gt}
#| eval: true
adverse_events_gt_dat <- adverse_events_dat |> 
  select(-surgs_single) |> 
  mutate(complication = factor(complication, levels = c("cardiac", "myoinfarct", "cardarr", "kidneyinj", "pulm", "pneum", "atelec", "pe", "respfail", "vent48"), labels = c("Other Cardiac", "MI", "Cardiac Arrest", "Renal", "Pulmonary", "Pneumonia", "Atelectasis", "PE", "Respiratory Failure", "Ventilator >48hr"))) |>
  left_join(study_char_dat |> select(refid, surgs), by = "refid") |> 
  arrange(year, study_compl, arm_id) |> 
  mutate(
    # surgs_single = ifelse(surgs_single == "Vasc", "Vascular", surgs_single),
    study_l = ifelse(row_number() > 1, "", study_l),
    surgs = ifelse(row_number() ==  1, as.character(surgs), NA),
    complication = fct_drop(complication),
    .by = study_compl
  ) |>
  # mutate(
  #   study_l = case_when(
  #     study == "Lau 2013" & arm_id == 2 ~ "Â Â Â 2007",
  #     study == "Lau 2013" & arm_id == 3 ~ "Â Â Â 2008",
  #     study == "Lau 2013" & arm_id == 4 ~ "Â Â Â 2009",
  #     study == "Lau 2013" & arm_id == 5 ~ "Â Â Â 2010",
  #     .default = study_l
  #   ),
  #   n_per = case_when(
  #     study == "Lau 2013" & arm_id == 2 ~ "(0.3)",
  #     study == "Lau 2013" & arm_id == 3 ~ "(1.1)",
  #     study == "Lau 2013" & arm_id == 4 ~ "(0.6)",
  #     study == "Lau 2013" & arm_id == 5 ~ "(0.8)",
  #     .default = n_per
  #   ),
  #   arm_n = ifelse(study == "Lau 2013" & arm_id %in% c(2:5), " â€” ", arm_n),
  #   rd_ci = ifelse(study == "Lau 2013", "", rd_ci),
  #   rr_ci = ifelse(study == "Lau 2013", "", rr_ci)
  # ) |> 
  unite(complication, complication, design_f_lab, sep = " â€“ ") |> 
  mutate(
    complication = str_replace(complication, "Renal", "Acute Kidney Injury"),
  )

adverse_meta_wide_dat <- adverse_events_gt_dat |> 
  mutate(arm_n = as.numeric(arm_n)) |> 
  arrange(refid, complication) |> 
  pivot_wider(names_from = "arm", values_from = c("n", "arm_n")) |> 
  group_by(refid, complication) |> 
  fill(n_Std:arm_n_Exp) |> 
  slice(2) |> 
  ungroup() |> 
  mutate(
    # surgs = as.character(surgs),
    complication_nodesign = str_remove(complication, " â€“ .*$"),
    # study_design = ifelse(str_detect(complication, "Rand"), paste0(study, "*"), study),
    design = ifelse(str_detect(complication, "Rand"), "Randomized", "Nonrandomized")
    # complication_nodesign = factor(complication_nodesign, levels = c("cardiac", "myoinfarct", "cardarr", "kidneyinj", "pulm", "pneum", "atelec", "pe", "respfail", "vent48"), labels = c("Cardiac", "MI", "Cardiac Arrest", "AKI", "Pulmonary", "Pneumonia", "Atelectasis", "PE", "Respiratory Failure", "Ventilator >48hr"))
  ) |> 
  select(-c(age_table:rr_ci, effect:high, surgs)) |> 
  left_join(study_char_dat |> select(refid, surgs), by = "refid")

adverse_events_gt_dat |> 
  # filter(!is.na(detail_cardiac)) |> select(study, detail_cardiac) |> distinct()
  # tabyl(complication) |> arrange(desc(percent)) |> pull(complication) |> toString()
  fill(surgs) |> 
  arrange(surgs, study_compl, arm_id) |>
  mutate(
    surgs = ifelse(row_number() ==  1, as.character(surgs), NA),
    .by = study_compl
  ) |> 
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac Arrest â€“ Randomized Clinical Trial", "Cardiac Arrest â€“ Before-After/Time Series", "MI â€“ Randomized Clinical Trial", "MI â€“ Before-After/Time Series", "Other Cardiac â€“ Randomized Clinical Trial", "Other Cardiac â€“ Before-After/Time Series", "Pulmonary â€“ Randomized Clinical Trial", "Pulmonary â€“ Retrospective Cohort", "Pneumonia â€“ Randomized Clinical Trial", "Pneumonia â€“ Before-After/Time Series", "Respiratory Failure â€“ Before-After/Time Series", "Ventilator >48hr â€“ Before-After/Time Series", "PE â€“ Before-After/Time Series", "Acute Kidney Injury â€“ Randomized Clinical Trial", "Acute Kidney Injury â€“ Before-After/Time Series", "Acute Kidney Injury â€“ Before-After/Time Series")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, rr_ci, adjcrude, est, low, high, effect, detail_cardiac, detail_pulmonary)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = "Â N",
    arm              =  "Arm",
    age_table        = "Â Â Â Â Age",
    surgs            = "Surgery",
    n_per            = "N (%)",
    bar              = "0 â€“ 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  fmt_markdown(columns = c(study_l, bar, age_table, rr_ci)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l          ~ px(140),
    arm_n            ~ px(60),
    arm              ~ px(60),
    age_table        ~ px(100),
    surgs            ~ px(80),
    n_per            ~ px(90),
    bar              ~ px(120),
    rd_ci            ~ px(130)
  ) |>
  tab_style(style = cell_text(align = "left"),          locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"),        locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),          locations = cells_body(columns = c(arm, age_table, rd_ci, surgs))) |>
  tab_style(style = cell_text(align = "center"),        locations = cells_body(columns = c(rd_ci))) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table))) |> 
  tab_footnote("RD: risk difference; MI: myocardial infarction; GI: gastrointestinal; Abd: abdominal; Ortho: orthopedic; Neuro: neurologic.") |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Exp"))) |> 
  tab_footnote("Cardiac failure.",                      locations = cells_body(columns = c(study_l), rows = detail_cardiac == "cardiac failure" & arm_id == 1)) |> 
  tab_footnote("Arrhythmia, cardiac failure.",          locations = cells_body(columns = c(study_l), rows = detail_cardiac == "arrhythmia, cardiac failure" & arm_id == 1)) |> 
  tab_footnote("Unspecified.",                          locations = cells_body(columns = c(study_l), rows = detail_cardiac == "unspecified" & arm_id == 1)) |> 
  tab_footnote("Acute coronary syndrome, heart failure, tachyarrhythmia, or bradyarrhythmia.", locations = cells_body(columns = c(study_l), rows = detail_cardiac == "acute coronary syndrome, heart failure, tachyarrhythmia, or bradyarrhythmia" & arm_id == 1)) |> 
  tab_footnote("MI, cardiac arrest, ventricular fibrillation, dysrhythmia, or heart failure.", locations = cells_body(columns = c(study_l), rows = detail_cardiac == "acute MI, cardiac arrest and ventricular fibrillation, cardiac dysrhythmia, and acute CHF combined" & arm_id == 1)) |> 
  tab_footnote("Unspecified.",                          locations = cells_body(columns = c(study_l), rows = detail_pulmonary == "unspecified" & arm_id == 1)) |> 
  tab_footnote("Pneumonia, infectious exacerbation of chronic obstructive pulmonary disease (COPD).", locations = cells_body(columns = c(study_l), rows = detail_pulmonary == "pneumonia, infective exacerbation of chronic obstructive pulmonary disease (COPD)" & arm_id == 1)) |> 
  tab_footnote("Pulmonary embolism or pneumothorax.",   locations = cells_body(columns = c(study_l), rows = detail_pulmonary == "pulmonary embolism, pneumothorax" & arm_id == 1)) |> 
  tab_footnote("Described as renal failure.",           locations = cells_row_groups(groups = starts_with("Acute Kidney Injury")))


# TODO: add footnotes pulmonary complications
# Pulmonary
# 760	Hempenius 2013	  kq1	unspecified
# 16605	Partridge 2017	kq1	pneumonia, infective exacerbation of chronic obstructive pulmonary disease (COPD)
# 1201	Watne 2014	    kq1	unspecified

# 1 Bjorkelund 2010  cardiac failure                                                                                   
# 2 Hempenius 2013   arrhythmia, cardiac failure                                                                       
# 3 Watne 2014       unspecified                                                                                       
# 4 Indrakusuma 2015 unspecified                                                                                       
# 5 Partridge 2017   acute coronary syndrome, heart failure, tachyarrhythmia, or bradyarrhythmia                       
# 6 McDonald 2018    acute MI, cardiac arrest and ventricular fibrillation, cardiac dysrhythmia, and acute CHF combined
# 7 Souwer 2018      unspecified                                                                                       
# 8 Giannotti 2022   unspecified      

```

### *Pooled*

```{r complication_meta,  fig.width = 14, fig.height = 12.5, fig.align = "left"}
adverse_meta_wide_dat <- adverse_meta_wide_dat |>
  mutate(
    study = ifelse(design == "Randomized", paste0(study, "*"), study)
    )

complication_meta_fun <- function(compl_label, use_hakn = FALSE, predictive = TRUE){
use_hakn_predict <- ifelse(use_hakn, "HK", "HTS")
use_hakn <- ifelse(use_hakn, "HK", "classic")
  
meta_dat <- adverse_meta_wide_dat |>
  select(-c(complication, arm_id, study_l, study_compl)) |>
  rename(complication = complication_nodesign) |>
  # filter(complication %in% compl_label & design == randomized) |>
  filter(complication %in% compl_label) |>
  relocate(study, .after = year) |> 
  arrange(surgs, study) |> 
  left_join(all_rob_meta_dat, by = "refid")

metabin(
  n_Exp, arm_n_Exp, n_Std, arm_n_Std,
  data = meta_dat,
  studlab = study,
  sm = "RR",
  method.tau = "REML",
  prediction = predictive,
  # subgroup = design,
  method.random.ci = use_hakn,
  method.predict = use_hakn_predict,
  allstudies = FALSE,
)
}

complication_forest_fun <- function(adverse_meta, use_predictive = FALSE, ...){
forest(adverse_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "surgs"),
  rightlabs = c("RRÂ ", "(95% CI)Â Â Â ", "Surgery"),
  colgap.right = "4mm",
  just.addcols.right = "left",
  # just.addcols.left = "right",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.subgroup.name = FALSE,
  overall = TRUE,
  print.I2.ci = TRUE,
  prediction = use_predictive,
  # sortvar = "surgs",
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  # xlim = c(0.2, 2),
  xlab = "Favors: ExpandedÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Standard",
  addrows.below.overall = 4,
  ...
)
}

complication_forest_nrsi_fun <- function(adverse_meta, use_predictive = TRUE){
forest(adverse_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "surgs"),
  rightlabs = c("RRÂ ", "(95% CI)Â Â Â ", "Surgery"),
  colgap.right = "4mm",
  just.addcols.right = "left",
  just.addcols.left = "right",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.subgroup.name = FALSE,
  overall = TRUE,
  print.I2.ci = TRUE,
  prediction = use_predictive,
  # sortvar = "surgs",
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  # xlim = c(0.2, 2),
  xlab = "Favors: ExpandedÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Standard",
  addrows.below.overall = 4,
)
}

```

<a id="myocardial_infarction"></a>

#### Myocardial Infarction

<foot_mg> Â Â  </foot_mg>

<font size = 4> `r figure_ref()` Risk ratio for myocardial infarction (randomized and nonrandomized designs). </font>

```{r complication_mi}
#| echo: false
#| include: false

png("assets/kq1_complication_mi.png", width = 9.07, height = 3.8, units = "in", res = 300)
temp_meta <- complication_meta_fun("MI", use_hakn = TRUE, predictive = TRUE)
complication_forest_fun(temp_meta, use_predictive = TRUE, text.addline1 = "*Randomized clinical trial", text.addline2 = risk_diff_meta_rr())
dev.off()

```

![](assets/kq1_complication_mi.png){fig.align="left" width="66%"}

<a id="fig-pneumonia"></a>

#### Pneumonia

<foot_mg> Â Â  </foot_mg>

<font size = 4> `r figure_ref()` Risk ratio for pneumonia (randomized and nonrandomized designs). </font>

```{r complication_pneumonia}
#| echo: false
#| include: false

png("assets/kq1_complication_pneumonia.png", width = 9.22, height = 4.6, units = "in", res = 300)
temp_meta <- complication_meta_fun("Pneumonia", use_hakn = TRUE, predictive = TRUE)
complication_forest_fun(temp_meta, use_predictive = TRUE, text.addline1 = "*Randomized clinical trial", text.addline2 = risk_diff_meta_rr())
dev.off()

```

![](assets/kq1_complication_pneumonia.png){fig.align="left" width="67%"}

<a id="fig-pulmonary-embolism"></a>

#### Pulmonary Embolism

<foot_mg> Â Â  </foot_mg>

<font size = 4> `r figure_ref()` Risk ratio for pneumonia (randomized and nonrandomized designs). </font>

```{r complication_pe}
#| echo: false
#| include: false

png("assets/kq1_complication_pe.png", width = 9.22, height = 3.6, units = "in", res = 300)
temp_meta <- complication_meta_fun("PE", use_hakn = FALSE, predictive = TRUE)
complication_forest_fun(temp_meta, use_predictive = TRUE, text.addline1 = "*Randomized clinical trial", text.addline2 = risk_diff_meta_rr())
dev.off()

```

![](assets/kq1_complication_pe.png){fig.align="left" width="68%"}

<a id="fig-renal"></a>

#### Acute Kidney Injury

<foot_mg> Â Â  </foot_mg>

<font size = 4> `r figure_ref()` Risk ratio for renal complications (expanded versus standard preoperative evaluation; randomized clinical trials). </font>

```{r complication_aki}
#| echo: false
#| include: false

png("assets/kq1_complication_aki.png", width = 8.97, height = 4.0, units = "in", res = 300)
temp_meta <- complication_meta_fun("Acute Kidney Injury", use_hakn = TRUE, predictive = TRUE)
complication_forest_fun(temp_meta, use_predictive = TRUE, text.addline1 = "*Randomized clinical trial", text.addline2 = risk_diff_meta_rr())
dev.off()

```

![](assets/kq1_complication_aki.png){fig.align="left" width="66%"}

## **Patient Satisfaction**

<font size = 4> `r table_ref()` Patient satisfaction according to expanded or standard preoperative evaluation. </font>

```{r pt_satisfaction}
satis_dat_gt <- dichot_dat |>
  select(refid, year, study, study_l, arm_id, arm_n, arm, design_f_lab, matches("satis"), notes_d) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = "refid") |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  filter(if_any(satis_n:satis_95high, ~ !is.na(.x))) |>
  select(!c(d_satisfaction, satis_pval:satis_95high)) |>
  mutate(
    arm_n = ifelse(!is.na(satis_update_arm_n), satis_update_arm_n, arm_n),
    n_percent = n_per_fun(satis_n, arm_n, n_sig_dig = 1),
    bar = case_when(
      str_detect(arm, "Std") ~ bar_prop(satis_n / arm_n * 100, "#969696"),
      str_detect(arm, "Exp") ~ bar_prop(satis_n / arm_n * 100, color_2)
    )
  ) |>
  arrange(year, study, arm_id) 

satis_dat_gt <- satis_dat_gt |>
  mutate(
    ref_arm_n = arm_n,
    ref_n = satis_n
  ) |>
  group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |>
  mutate(
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(satis_n, arm_n, ref_n, ref_arm_n, digits = 1), "â€”")
  )
  
satis_dat_gt |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    surgs_noabbr_f = "Various (pelvic floor)",
    .by = study
  ) |>
  group_by(surgs_noabbr_f) |>
  gt(id = "one") |>
  cols_hide(c(refid, year, arm_id, study, design_f_lab, satis_update_arm_n, satis_n, satis_per, notes_d, ref_arm_n, ref_n)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = "N",
    arm              = "Anesth",
    asa_ps_incl      = "PS",
    age_table        = "Age",
    # surgs_noabbr_f   = "Surgery",
    n_percent        = "N (%)Â Â ",
    bar              = "0 â€“ 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl), level = 1) |>
  fmt_markdown(columns = c(study_l, age_table, bar)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    arm ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(80),
    # surgs_noabbr_f   ~ px(100),
    n_percent ~ px(100),
    bar ~ px(100),
    rd_ci ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(asa_ps_incl, age_table, rd_ci))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_column_labels(columns = c(n_percent))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_footnote("Mean (SD).", locations = cells_column_labels(columns = c(age_table))) |>
  tab_footnote("Std: standard evaluation; Exp: expanded evaluation; ASA PS: ASA Physical Status; RD: risk difference.") |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:n_percent), rows = str_detect(arm, "Exp"))) |>
  tab_footnote("High satisfaction.", locations = cells_body(columns = c(n_percent), rows = str_detect(study, c("Richter"))), placement = "right") 

```


## **Length of Stay**

<font size = 4> `r table_ref()` Length of stay according to procedure classification and type of preoperative evaluation. </font>

```{r length_of_stay}
#| eval: true

los_tab <- contin_dat |>
  mutate(los_for_tables(contin_dat)) |>
  filter(refid %in% kq1_refid) |> 
  filter(if_any(los_m:los_diff_pval, ~ !is.na(.))) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  # left_join(surgs |> select(refid, surgs_noabbr_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country, surgs), by = "refid" ) |> 
  mutate(
    arm_n = ifelse(study == "Lau 2013" & arm_id %in% c(2:5), " â€” ", arm_n),
    refid_arm_id = paste0(refid, "-", arm_id),
    surg_groups = paste0(design_f_lab, " - ", surgs),
    mean_med = case_when(
      !is.na(los_m) ~ los_m,
      !is.na(los_med) ~ los_med
    ),
    calc_prop_25d = 100 * mean_med / 25,
    bar = case_when(
      str_detect(arm, "Exp") ~ bar_prop(calc_prop_25d, "#A93226"),
      .default = bar_prop(calc_prop_25d, "#969696")
    )
  ) |>
  arrange(surg_groups, year, study, arm_id) |> 
  select(refid, refid_arm_id, study, study_l, arm_id, arm_n, arm, asa_ps_incl, age_table, los_table, bar, surg_groups, country)

los_tab |> 
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         country = ifelse(row_number() > 1, "", country),
         # arm_n = ifelse(is.na(arm_n), "â€“", arm_n),
         .by = refid) |> 
  # tabyl(surg_groups) |> pull(surg_groups) |> toString()
  group_by(surg_groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial - HipFx", "Nonrandomized Trial - HipFx", "Before-After/Time Series - Other Ortho", "Randomized Clinical Trial - GI/Abd", "Before-After/Time Series - GI/Abd", "Retrospective Cohort - GI/Abd", "Retrospective Cohort - Cardiac", "Before-After/Time Series - Neuro", "Before-After/Time Series - Urol", "Randomized Clinical Trial - Various", "Before-After/Time Series - Various", "Prospective Cohort - Various")) |> 
  sub_missing(columns = everything(), missing_text = "") |>
  cols_hide(c(refid, refid_arm_id, arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = "Â N",
    arm = "Arm",
    asa_ps_incl = "PS",
    age_table = "Â Â Â Â Age",
    los_table = "Â Â Â Â LOS",
    bar = "0 â€“ 25 days",
    country = "Country"
  ) |>
  fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(60),
    arm ~ px(60),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120),
    country ~ px(80)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, bar))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, arm))) |> 
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(arm, "Exp"))) |> 
  tab_footnote(md("NR: not reported")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote("Number of patients not reported (time-series each).", locations = cells_body(columns = c(arm_n), rows = study == "Lau 2013" & arm_n == " â€” "), placement = "right") |>
  tab_footnote("Geometric mean.", locations = cells_body(columns = c(los_table), rows = study == "Partridge 2017")) 
  
# save refids for meta-analysis
los_refid <- los_tab$refid
```

### *Pooled*

<font size = 4> `r figure_ref()` Mean difference in lengths of stay in randomized clinical trials. </font>

```{r los_meta_dat}
#| echo: false

los_meta_dat <- contin_dat |>
  filter(refid %in% kq1_refid) |> 
  filter(refid %in% los_refid) |> 
  filter(!study %in% c("Lau 2013", "Vochteloo 2011")) |> # time-series, multiple times w/o sufficient data
  filter(!study %in% c("Ommundsen 2018")) |> # only median and bwgrp p-value
  # calculated sds from pvalues: Partridge 2017, Zhu 2022
  mutate(
    los_sd =
      case_when(
        study == "Partridge 2017" ~ sd_bwgrp_sdonly_fun(3.32, 5.53, 104, 105, .001),
        # study == "Ommundsen 2018" ~ sd_bwgrp_fun(8, 8.1, 53, 63, .63)[6],
        study == "Zhu 2022" ~ sd_bwgrp_sdonly_fun(20.8, 23.6, 70, 85, .001),
        .default = los_sd
      )
  ) |> 
  select(refid, study, design_f_lab, arm, arm_n, los_m, los_sd, los_med, los_rl, los_ru, los_iqrl, los_iqru, los_95l, los_95u) |> 
  select(!matches("95")) |> 
  rename_with(~ str_remove(.x, "los_")) |> 
  pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  arrange(year) 

los_rct_meta_dat <- los_meta_dat |> 
  filter(str_detect(design_f_lab, "Rand")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(study_char_dat |> select(refid, surgs, country), by = "refid")

los_nrsi_meta_dat <- los_meta_dat |> 
  filter(!str_detect(design_f_lab, "Rand")) |> 
  left_join(robinsi_meta_dat, by = "refid") |> 
  left_join(study_char_dat |> select(refid, surgs, country), by = "refid")

```

```{r los_meta}
#| echo: false
#| include: false

los_meta <- metacont(
  n.e = arm_n_Exp, 
  n.c = arm_n_Std,
  common =  TRUE,
  mean.e = m_Exp,
  sd.e = sd_Exp,
  median.e = med_Exp,
  q1.e = iqrl_Exp,
  q3.e = iqru_Exp,
  min.e = rl_Exp,
  max.e = ru_Exp,
  mean.c = m_Std,
  sd.c = sd_Std,
  median.c = med_Std,
  q1.c = iqrl_Std,
  q3.c = iqru_Std,
  min.c = rl_Std,
  max.c = ru_Std,
  data = los_rct_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  subgroup = surgs,
  prediction = TRUE,
  studlab = study
)

png("assets/kq1_los_meta.png", width = 9.55, height = 6.02, units = "in", res = 300)
forest(los_meta,
  weight.study = "random",
  # common =  FALSE,
  label.e = "ExpandedÂ ",
  label.c = "StandardÂ ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  # digits.pval.Q = 2,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "left",
  print.pval.Q = FALSE,
  print.subgroup.name = FALSE,
  pooled.events = TRUE,
  test.subgroup = FALSE,
  colgap.right = "4mm",
  # sortvar = -TE,
  xlim = c(-10, 10),
  # at = c(-80, -60, -40, -20, 0, 20, 40),
  rightcols = c("effect", "ci", "country"),
  rightlabs = c("MDÂ ", "(95% CI)Â Â Â ", "Country"),
  xlab = "Favors: ExpandedÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â StandardÂ Â Â Â Â Â Â Â Â Â Â ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4
)
dev.off()

```

![](assets/kq1_los_meta.png){fig.align="left" width="70%"}

<foot_mg>Partridge 2017 geometric means reported.<br/> Ommundsen 2018 reported only median and between-group p-value and was excluded. </foot_mg>

<br/>

<font size = 4> `r figure_ref()` Mean difference in lengths of stay in nonrandomized designs). </font>

```{r los_nrsi_meta}
#| echo: false
#| include: false

los_meta <- metacont(
  n.e = arm_n_Exp, 
  n.c = arm_n_Std,
  common =  TRUE,
  mean.e = m_Exp,
  sd.e = sd_Exp,
  median.e = med_Exp,
  q1.e = iqrl_Exp,
  q3.e = iqru_Exp,
  min.e = rl_Exp,
  max.e = ru_Exp,
  mean.c = m_Std,
  sd.c = sd_Std,
  median.c = med_Std,
  q1.c = iqrl_Std,
  q3.c = iqru_Std,
  min.c = rl_Std,
  max.c = ru_Std,
  data = los_nrsi_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  studlab = study,
  subgroup = surgs
)


png("assets/kq1_los_nrsi_meta.png", width = 9.61, height = 9.05, units = "in", res = 300)
forest(los_meta,
  weight.study = "random",
  common =  FALSE,
  label.e = "ExpandedÂ ",
  label.c = "StandardÂ ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "left",
  print.pval.Q = FALSE,
  print.subgroup.name = FALSE,
  pooled.events = TRUE,
  colgap.right = "4mm",
  test.subgroup = FALSE,
  # sortvar = -TE,
  xlim = c(-10, 10),
  # at = c(-80, -60, -40, -20, 0, 20, 40),
  rightcols = c("effect", "ci", "country"),
  rightlabs = c("MD", "(95% CI)Â Â ", "Country"),
  xlab = "Favors: ExpandedÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â StandardÂ Â Â Â ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4
)
dev.off()

```

![](assets/kq1_los_nrsi_meta.png){fig.align="left" width="70%"}

<foot_mg> When the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, and/or range. </foot_mg>

## **Discharge Location**

<font size = 4> `r table_ref()` Discharge location in studies comparing expanded with standard preoperative assessments. </font>

```{r dc_loc}
dc_loc_dat <- dichot_dat |>
  filter(if_any(starts_with("disch_"), ~ !is.na(.x))) |>
  mutate(
    arm_n = ifelse(!is.na(disch_update_arm_n), disch_update_arm_n, arm_n),
    disch_nper = n_per_fun(disch_inst_n, arm_n, n_sig_dig = 1),
    disch_per = disch_inst_n/arm_n
  ) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, surgs, country), by = "refid") |>
  mutate(design_surg = paste0(design_f_lab, " â€” ", surgs)) |>
  select(refid, refid, arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, design_surg, country, starts_with("disch_")) |>
  select(-c(disch_inst_per:disch_inst_95high)) |> 
  arrange(refid, arm_id) |> 
  group_by(study) |> 
  mutate(
    ref_disch_n = ifelse(arm_id > 1, first(disch_inst_n), NA),
    ref_arm_n = ifelse(arm_id > 1, first(arm_n), NA),
    rr_ci = ifelse(!is.na(ref_disch_n), rr_ci_fun(disch_inst_n, arm_n, ref_disch_n, ref_arm_n), NA)) |> 
  select(-starts_with("ref_")) 

```

```{r dc_loc_gt}
dc_loc_dat |>
  group_by(study_l) |>
  arrange(study, arm_id) |> 
  mutate(
    study_l = ifelse(row_number() == 1, study_l, NA),
    country = ifelse(row_number() == 1, country, NA),
    bar = case_when(
      str_detect(arm, "Exp") ~ bar_prop(disch_per * 100, "#A93226"),
      .default = bar_prop(disch_per * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  select(refid, study_l, arm_n, arm, age_table, country, disch_nper, bar, rr_ci, everything()) |> # tabyl(design_surg) |> pull(design_surg) |> toString()
  group_by(design_surg) |> 
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial â€” HipFx", "Nonrandomized Trial â€” HipFx", "Before-After/Time Series â€” Other Ortho", "Randomized Clinical Trial â€” GI/Abd", "Retrospective Cohort â€” Cardiac", "Before-After/Time Series â€” Neuro", "Before-After/Time Series â€” Various", "Randomized Clinical Trial â€” Various")) |> 
  cols_hide(c(refid, arm_id, study, disch_update_arm_n, asa_ps_incl, disch_inst_n, disch_per)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = "Â N",
    arm              = "Arm",
    age_table        = "Â Â Â Age",
    country          = "Country",
    disch_nper       = "N (%)",
    bar              = "0 â€” 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  tab_spanner(label = "Discharge to Institution", columns = c(disch_nper:bar), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  # fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(50),
    age_table        ~ px(90),
    country          ~ px(80),
    disch_nper       ~ px(80),
    bar              ~ px(120),
    rr_ci            ~ px(120)
    ) |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, age_table, arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(rr_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n, disch_nper))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, arm, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rr_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(disch_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, arm, age_table, disch_nper), rows = str_detect(arm, "Exp"))) |> 
    tab_footnote("Exp: expanded preoperative evaluation; Std: standard preoperative evaluation; RR: risk ratio; Various: more that one procedure category.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table)))

```

### *Pooled*

<font size = 4> `r figure_ref()` Pooled comparison of discharge location in randomized and nonrandomized designs. </font>

```{r dc_loc_meta}
#| echo: false
#| include: false

dc_loc_meta_dat <- dc_loc_dat |>
  mutate(
    design = ifelse(str_detect(design_surg, "Randomized"), "Randomized", "Nonrandomized"),
  ) |>
  select(refid, study, arm, disch_inst_n, arm_n, country, design) |>
  left_join(study_char_dat |> select(refid, surgs), by = "refid") |>
  rename(disch_n = disch_inst_n) |>
  pivot_wider(names_from = arm, values_from = c(disch_n, arm_n)) |>
  arrange(surgs)

dc_loc_meta <- metabin(
  disch_n_Exp, arm_n_Exp, disch_n_Std, arm_n_Std,
  data = dc_loc_meta_dat,
  studlab = study,
  sm = "RR",
  method.random.ci = "classic",
  method = "MH",
  method.tau = "REML",
  subgroup = design,
  prediction = TRUE,
  allstudies = FALSE,
  )

png("assets/kq1_dc_loc_meta.png", width = 10.19, height = 6.0, units = "in", res = 300)
forest(dc_loc_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "surgs", "country"),
  rightlabs = c("RR", "(95% CI)", "Surgery", "Country"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  print.subgroup.name = FALSE,
  common.subgroup = FALSE,
  pooled.events = TRUE,
  test.subgroup = FALSE,
  colgap.right = "4mm",
  fs.xlab = 11,
  print.pval.Q = FALSE,
  xlim = c(0.3, 3),
  xlab = "Favors: ExpandedÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Standard",
  addrows.below.overall = 4,
  text.addline1 = "With Hartung-Knapp adjustment for nonrandomized (95% CI, 0.63â€“1.07)"
)
dev.off()

```

![](assets/kq1_dc_loc_meta.png){fig.align="left" width="73%"}

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### Meta-analysis methods detail.

```{r}
#| include: false  

temp <- print(dc_loc_meta) |> 
  str_replace_all("\\n", "<br/> ") |>
  str_remove("<br/> Details on meta-analytical method:<br/> ") |> 
  str_replace_all("tau\\^2", "tau<sup>2</sup>") |> 
  str_replace_all("tau", "&tau;")

```

<foot_mg> `r temp` </foot_mg>
:::

## **Mortality**

```{r mortality_data}
#| eval: true
mortality_dat <- dichot_dat |>
  # filter(!is.na(mort1yr_update_arm_n) | !is.na(mort_update_arm_n)) |>
  filter(study != "Lau 2013") |> # no denominators
  filter(if_any(starts_with("mort"), ~ !is.na(.x))) |> # select(refid, study, matches("mort.*effect"))
  # filter(arm_n != mort_update_arm_n) |>
  # select(refid, arm_n, mort_update_arm_n)
  # mutate(
  #   # arm_n use mort_update_arm_n if different
  #   arm_n = ifelse(!is.na(mort_update_arm_n), mort_update_arm_n, arm_n)
  # ) |>
  rename(update_arm_n_1yr = mort1yr_update_arm_n, update_arm_n = mort_update_arm_n) |>
  select(refid, refid_c, arm_id, arm, year, study, study_l, design_f_lab, arm_n, matches("_n|per") & starts_with("mort"), update_arm_n, update_arm_n_1yr) |>
  pivot_longer(
    cols = starts_with("mort"),
    names_to = "estimand",
    values_to = "estimate",
    values_drop_na = TRUE
  ) |>
  mutate(
    mort_period = str_remove(estimand, "_.*"),
    estimand = str_replace(estimand, ".*_(.*)$", "\\1")
  ) |>
  pivot_wider(
    names_from = estimand,
    values_from = estimate
  ) |>
  mutate(
    arm_n = case_when(
      !is.na(update_arm_n) & mort_period != "mort1" ~ update_arm_n,
      !is.na(update_arm_n_1yr) & mort_period == "mort1" ~ update_arm_n_1yr,
      .default = arm_n
    ),
    mort_period = case_when(
      str_detect(mort_period, "hosp") ~ "Hospital",
      str_detect(mort_period, "mort30") ~ "30-day",
      str_detect(mort_period, "mort90") ~ "90-day",
      str_detect(mort_period, "mort1") ~ "1-year"
    ),
    per = per / 100
  ) |>
  rename(mort_n = n, mort_per_rep = per) |>
  # for Park 2020 and Dai 2021 reported both in-hospital and 30-day
  # mutate(
  #   refid_c = ifelse(study %in% c("Park 2020", "Dai 2021") & mort_period == "30-day", paste0(refid_c, "-30"), refid_c)
  # ) |>
  arrange(mort_period, refid_c, arm_id) |>
  mutate(
    ref_arm_n = arm_n,
    ref_mort_n = mort_n
  ) |>
  mutate(
    ref_arm_n = lag(arm_n),
    ref_mort_n = lag(mort_n)
  ) |>
  group_by(mort_period, refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() == 1, NA, ref_mort_n)
  ) |>
  ungroup() |>
  arrange(mort_period, refid_c, arm_id) |>
  left_join(study_char_dat |> select(refid, surgs), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(asa_combine |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  mutate(
    mort_percent = mort_n / arm_n,
    mort_period = factor(mort_period, levels = c("Hospital", "30-day", "90-day", "1-year"))
  ) |>
  # exclude 30-day from Shyu 2008; redundant/duplicative given Shyu 2005
  filter(!(study == "Shyu 2008" & mort_period == "30-day")) |>
  select(refid, refid_c, arm_id, year, study, study_l, arm_n, arm, asa_ps_incl, age_table, design_f_lab, mort_n, mort_percent, ref_mort_n, ref_arm_n, mort_period, mort_per_rep, surgs)

```

<font size = 4> `r table_ref()` Reported mortality in randomized clinical trials.</font>

```{r mortality_rct_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs, year, study, arm_id) |>
  filter(str_detect(design_f_lab, "Rand")) |> 
  group_by(mort_period, study_l) |>
  mutate(
    surgs = as.character(surgs),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(arm, "Exp") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    # study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    # surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "â€”"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  relocate(surgs, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  # arrange(year, refid_c, arm_id) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  row_group_order(groups = c("Hospital", "30-day", "90-day", "1-year")) |>
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  cols_label(
    study_l = "Study",
    arm_n = "NÂ Â ",
    arm = "Arm",
    surgs = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, arm, surgs))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, arm, surgs, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n, mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, arm, age_table, mort_n_percent), rows = str_detect(arm, "Exp"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(65),
    arm ~ px(70),
    surgs ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; Exp: expanded; Std: standard; NR: not reported; RD: risk difference.; GI: gastrointestinal; Abd: abdominal (includes hepatic); Various: more that four procedures.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table)))  

```

<br/>

<font size = 4> `r table_ref()` Reported mortality in nonrandomized designs (all retrospective cohort studies).</font>

```{r mortality_nrsi_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs, year, study, arm_id) |>
  filter(!str_detect(design_f_lab, "Rand")) |> 
  # filter(!refid %in% screen_only_refid) |> # TODO: check if this is needed
  group_by(mort_period, study_l) |>
  mutate(
    surgs = as.character(surgs),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(arm, "Exp") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    # study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    # surgs = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "â€”"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  relocate(surgs, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  # arrange(year, refid_c, arm_id) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day", "1-year")) |>
  cols_label(
    study_l = "Study",
    arm_n = "NÂ Â Â Â ",
    arm = "Arm",
    surgs = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, arm, surgs))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, arm, surgs, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n, mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, arm, age_table, mort_n_percent), rows = str_detect(arm, "Exp"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(65),
    arm ~ px(70),
    surgs ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Various: more that one procedure category.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table)))  
  # tab_footnote("Different lengths of follow-up from the same trial.", locations = cells_body(columns = study_l, rows = study %in% c("Su 2016", "Zhang 2019b"))) 
```

### *Pooled*

```{r mortality_hosp_30d_meta}
#| eval: true
mortality_rct_meta_dat <- mortality_dat |>
  filter(str_detect(design_f_lab, "Rand")) |> 
  filter(mort_period %in% c("Hospital", "30-day")) |>
  select(refid, study, arm, mort_n, arm_n, mort_period, surgs)

mortality_nrsi_meta_dat <- mortality_dat |>
  filter(!str_detect(design_f_lab, "Rand")) |> 
  filter(mort_period %in% c("Hospital", "30-day")) |>
  # exclude T-Santabalbina 2019 hospital; retain 30-day
  filter(!(study == "T-Santabalbina 2019" & mort_period == "Hospital")) |> 
  select(refid, study, arm, mort_n, arm_n, mort_period, surgs)

mortality_nrsi_meta_1yr_dat <- mortality_dat |>
  filter(!str_detect(design_f_lab, "Rand")) |> 
  filter(mort_period %in% c("1-year")) |>
  select(refid, study, arm, mort_n, arm_n, mort_period, surgs)

pairwise_rct_mort_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_rct_meta_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

pairwise_nrsi_mort_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_nrsi_meta_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

pairwise_nrsi_mort_1yr_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_nrsi_meta_1yr_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

```

<font size = 4> `r figure_ref()` Risk ratio for hospital or 30-day mortality in randomized clinical trials. </font>

```{r mort_rct_meta}
#| echo: false
#| include: false

mort_meta_dat <- pairwise_rct_mort_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  select(study, year, event2, n2, event1, n1, surgs, mort_period, refid)

# total_meta(mort_meta_dat)
# refid_meta_fun(mort_meta_dat)

mort_rct_meta <- metabin(event2, n2, event1, n1,
  data = mort_meta_dat,
  studlab = study,
  # cluster = refid,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "classic",
  method.predict = "HTS",
  prediction = TRUE,
  allstudies = FALSE,
  # subgroup = surgs
)

png("assets/kq1_mort_rct.png", width = 8.72, height = 3.4, units = "in", res = 300)
forest(mort_rct_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "ExpandedÂ Â ",
  label.c = "StandardÂ Â ",
  rightcols = c("effect", "ci", "surgs"),
  rightlabs = c("RR", "(95% CI)", "Surgery"),
  just.addcols.right = "left",
  digits.TE = 3, 
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  # print.subgroup.name = FALSE,
  # pscale = 1000,
  digits = 2, 
  print.pval.Q = FALSE,
  # xlim = c(0.1, 10),
  xlab = "Favors: ExpandedÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â StandardÂ Â Â Â Â Â Â Â ",
  addrows.below.overall = 4,
  text.addline2 = risk_diff_meta_rr(mort_rct_meta)
)
dev.off()
# PI: (0.0067, 157.1841) 
```
![](assets/kq1_mort_rct.png){fig.align="left" width="64%"}

<br/>

<font size = 4> `r figure_ref()` Risk ratio for hospital or 30-day mortality in nonrandomized designs. </font>

```{r mort_nrsi_meta}
#| echo: false
#| include: false
# TODO: update/sensitivity with Hall 2017, Souwer 2018, Giannotti 2022 adjusted odds ratio
mort_meta_dat <- pairwise_nrsi_mort_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(robinsi_meta_dat, by = "refid") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid, surgs) |> 
  arrange(surgs)

# total_meta(mort_meta_dat)
# refid_meta_fun(mort_meta_dat)

mort_nrsi_meta <- metabin(event2, n2, event1, n1,
  data = mort_meta_dat,
  studlab = study,
  sm = "RR",
  method.random.ci = "HK",
  method.predict = "HK",
  method.tau = "REML",
  prediction = TRUE,
  allstudies = FALSE,
)

png("assets/kq1_mort_nrsi.png", width = 9.07, height = 5.8, units = "in", res = 300)
forest(mort_nrsi_meta,
  label.e = "ExpandedÂ Â ",
  label.c = "StandardÂ Â ",
  rightcols = c("effect", "ci", "surgs"),
  rightlabs = c("RR", "(95% CI)", "Surgery"),
  just.addcols.right = "left",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  allstudies = TRUE,
  xlim = c(0.1, 10),
  xlab = "Favors: ExpandedÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â StandardÂ Â Â Â Â Â Â Â ",
  addrows.below.overall = 4,
  text.addline2 = risk_diff_meta_rr(mort_nrsi_meta)
)
dev.off()

```
![](assets/kq1_mort_nrsi.png){fig.align="left" width="67%"}

<!-- <br/> -->

<!-- <font size = 4> `r figure_ref()` Risk ratio for 1-year mortality (expanded preoperative evaluation versus standard; nonrandomized designs). </font> -->

<!-- ```{r mort_nrsi_1yr_meta, fig.width = 14, fig.height = 4, fig.align = "center"} -->
<!-- mort_meta_dat <- pairwise_nrsi_mort_1yr_dat |>  -->
<!--   mutate(year = str_extract(study, "\\d{4}")) |>  -->
<!--   left_join(robinsi_meta_dat, by = "refid") |>  -->
<!--   left_join(surgs |> select(refid, surgs_single), by = "refid") |>  -->
<!--   select(study, year, event2, n2, event1, n1, surgs, D1:Overall, mort_period, refid) -->

<!-- # total_meta(mort_meta_dat) -->
<!-- # refid_meta_fun(mort_meta_dat) -->

<!-- mort_nrsi_1yr_meta <- metabin(event2, n2, event1, n1, -->
<!--   data = mort_meta_dat, -->
<!--   studlab = study, -->
<!--   # cluster = refid, -->
<!--   sm = "RR", -->
<!--   method = "MH", -->
<!--   method.tau = "REML", -->
<!--   hakn = TRUE, -->
<!--   prediction = FALSE, -->
<!--   allstudies = TRUE, -->
<!-- ) -->

<!-- # summary(plac_meta) -->
<!-- forest(mort_nrsi_1yr_meta, -->
<!--   allstudies = TRUE, -->
<!--   # random = FALSE, -->
<!--   label.e = "ExpandedÂ Â ", -->
<!--   label.c = "StandardÂ Â ", -->
<!--   rightcols = c("effect", "ci", "surgs"), -->
<!--   rightlabs = c("RR", "(95% CI)", "Surgery"), -->
<!--   just.addcols.right = "left", -->
<!--   digits.TE = 3, -->
<!--   digits.tau2 = 1, -->
<!--   overall.hetstat = TRUE, -->
<!--   print.I2.ci = TRUE, -->
<!--   prediction = TRUE, -->
<!--   fs.xlab = 11, -->
<!--   pooled.events = TRUE, -->
<!--   # pscale = 1000, -->
<!--   digits = 2,  -->
<!--   print.pval.Q = FALSE, -->
<!--   xlim = c(0.1, 10), -->
<!--   xlab = "Favors: ExpandedÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â StandardÂ Â Â Â Â Â Â Â ", -->
<!--   addrows.below.overall = 4 -->
<!-- ) -->
<!-- ``` -->


## **Risk of Bias**

### Randomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for randomized clinical trials (expanded preoperative evaluation). </font>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_dat |>
  filter(!is.na(Study) & refid %in% kq1_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind", weighted = FALSE)
```

<font size = 4> `r figure_ref()` Risk of bias assessments for randomized clinical trials (expanded preoperative evaluation). </font>

```{r rob_overall_study, out.width = "55%", fig.height = 4.2}
#| warning: false
rob_traffic_light(rob_temp_dat, psize = 4, tool = "ROB2", colour = "colourblind")
```

### Nonrandomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for nonrandomized studies (expanded preoperative evaluation). </font>

```{r nrsi_summary_overall, fig.height = 3, out.width = "60%"}
robinsi_temp_dat <- robinsi_dat |>
  filter(!is.na(Study) & refid %in% kq1_refid) |> 
  select(-refid)

rob_summary(robinsi_temp_dat, tool = "ROBINS-I", colour = "colourblind", weighted = FALSE)
```

<font size = 4> `r figure_ref()` Risk of bias assessments for nonrandomized studies (expanded preoperative evaluation). </font>

```{r nrsi_overall_study, out.width = "55%", fig.height = 6.1}
#| warning: false
rob_traffic_light(robinsi_temp_dat, psize = 4, tool = "ROBINS-I", colour = "colourblind")
```

## **References** {#references}
