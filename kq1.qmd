---
title: "Expanded Preoperative Evaluation & <br/> Postoperative Delirium Screening"
editor: source
toc-title: "**Expanded Preoperative Evaluation & Postoperative Delirium Screening**"
toc-location: "left"
cap-location: "top"
toc-depth: 3
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq18.bib"
csl: jama.csl
link-citations: false
nocite: '@*'
---

## Key Questions

Among older patients anticipating surgery and anesthesia, does expanded preoperative evaluation (e.g., for frailty, cognitive impairment, functional status, or psychosocial issues) lead to improved postoperative outcomes?

Does screening older patients for delirium in the post anesthesia care unit improve postoperative outcomes?

```{r, read_data}
#| include: false
source("code/load_data.R")
```

```{r, data}
# delete van der Vlies 2020 882 NRC
kq1_refid <- kq1_refid[!kq1_refid == 882]

# note working file not renamed
study_char_dat <- study_char_dat |>
  filter(refid %in% c(kq1_refid, kq8_refid)) |>
  arrange(design_f) |>
  mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-")
  )

study_arm_dat <- study_arm_dat |>
  filter(refid %in% c(kq1_refid, kq8_refid)) |>
  arrange(design_f) |>
  mutate(
    arm = ifelse(arm_kq1_eval == "eval_expand", "Exp", "Std"),
    pacu_screen = ifelse(refid %in% kq8_refid, TRUE, FALSE)
  ) |>
  mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-")
  )

dichot_dat <- dichot_dat |>
  filter(refid %in% c(kq1_refid, kq8_refid)) |>
  arrange(design_f) |>
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  relocate(arm, .after = arm_id) |>
  # if incidence proportion for delirium not reported use the max of days
  mutate(
    delirium_inc_prop = !is.na(delitotal_n),
    delirium_day_max = pmax(delirium_n1, delirium_n2, delirium_n3, delilast_n, na.rm = TRUE),
    delitotal_n = ifelse(is.na(delitotal_n), delirium_day_max, delitotal_n),
  ) |>
  relocate(delirium_day_max, .after = delitotal_n) |>
  mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-")
  )

contin_dat <- contin_dat |>
  filter(refid %in% c(kq1_refid, kq8_refid)) |>
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  arrange(design_f) |>
  mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-")
  )

likert_dat <- likert_dat |> 
  filter(refid %in% c(kq1_refid, kq8_refid)) |> 
  left_join(study_arm_dat |> select(refid, arm_id, arm), by = c("refid", "arm_id")) |>
  arrange(design_f) |> 
    mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
    study_l = str_replace(study_l, "Tarazona-", "T-")
  )

```

## **Outcome Importance Rankings**

### Expanded Preoperative Evaluation

<font size = 4> `r table_ref()` Rankings of the 5 most important outcomes (11 respondents). </font>

```{r, outcome_priority_kq1}
#| include: true
#| eval: true
outcome_dat <- rankings("KQ1")
outcome_tab(outcome_dat, 11)
```

### Postoperative Delirium Screening

<font size = 4> `r table_ref()` Rankings of the 5 most important outcomes (11 respondents). </font>

```{r, outcome_priority_kq8}
#| include: true
#| eval: true
outcome_dat <- rankings("KQ8")
outcome_tab(outcome_dat, 11)
```

## **Outcomes Reported**

<font size = 4> `r table_ref()` Dichotomous or count outcomes. </font>

```{r dichot_outcome_freq}
dichot_freq_fun(dichot_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

<font size = 4> `r table_ref()` Continuous outcomes. </font>

```{r cont_outcome_freq}
contin_freq_fun(contin_dat)
```

<font size = 4> `r table_ref()` Likert or ordinal outcomes. </font>

```{r likert_outcome_freq}
likert_freq_fun(likert_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

## **Included Studies**

<font size = 4> `r table_ref()` Number of studies by design. </font>

```{r studies_design}
# CODE: study design table — design and number; no duplicate counting
study_char_dat |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(
    style = list(
      cell_fill(color = "#E4F3FE"),
      cell_text(weight = "bold"),
      cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))
    ),
    locations = cells_body(
      rows = design_f_lab == "Total"
    )
  ) |> 
  tab_style(
    style = list(
      cell_text(align = "left")),
      locations = cells_body(
        columns = design_f_lab
      )
    )  |> 
  tab_footnote("Studies with multiple publications counted only once (applied to 2 studies with 2 publications).")
```

### Design, centers, country, and surgery

<font size = 4> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </font>

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |>
  select(refid, starts_with("design"), study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi) |>
  left_join(surgs |> select(refid, surgs_single_f), by = "refid") |> # tabyl(surgs_single_f)
  rename(surgs = surgs_single_f) |> 
  mutate(
    surgs = fct_infreq(fct_drop(surgs)),
    design_f_lab = fct_recode(design_f_lab, "Fully Paired" = "Other")
  ) |>
  arrange(design_f, surgs, study_l) |>
  select(refid, design_f_lab, study_l, centers, n_enroll, country, surgs, non_vh_hdi)

included_dat |>
  group_by(design_f_lab) |> 
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_hide(c(non_vh_hdi)) |>
    fmt_markdown(columns = c(study_l)) |> 
  cols_width(
    refid ~ px(60),
    study_l ~ px(220),
    centers ~ px(60),
    n_enroll ~ px(60),
    country ~ px(100),
    surgs ~ px(150)
  ) |> 
  # opt_horizontal_padding(scale = 2) |>
  sub_missing(columns = everything(), missing_text = " — ") |>
  gt_theme_mg() |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c("refid"))) |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(surgs))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(surgs))) |>
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote(footnote = md("Various indicates more than 4 different types of surgery."), locations = cells_column_labels(columns = surgs)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_column_labels(columns = country)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))) |>
  # tab_footnote(footnote = "Studies examining drugs not directly relevant to recommendations but potentially relevant to the evidence space (eg, a connected network) were included.",  locations = cells_row_groups(groups = )) |> 
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular.")

```

#### Country Summary

<font size = 4> `r table_ref()` Summary of studies by country where conducted. </font>

```{r country}
#| echo: false
study_char_dat |>
  mutate(linked_references = ifelse(is.na(linked_references), refid, linked_references)) |> 
  slice(1, .by = linked_references) |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
  gt_theme_mg()

```


## **Comparators**

### Study Characteristics

<font size = 4> `r table_ref()` Selected characteristic of included studies.  </font>

```{r studychar_tab}
studychar_tab <- study_arm_dat |>
  select(refid, arm_id, study, study_l, design_f_lab, year, arm_n, arm, pacu_screen, asa_ps_incl) |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |> 
  mutate(
    arm = replace_na(arm, "Scrn"),
    surg_design = paste0(surgs_single, " — ", design_f_lab),
    surg_design = fct(surg_design, 
                      levels = c("Cardiac — Randomized Clinical Trial", "Cardiac — Before-After/Time Series", "Cardiac — Other", "GI/Abd — Randomized Clinical Trial", "GI/Abd — Before-After/Time Series", "GI/Abd — Retrospective Cohort", "Ortho — Randomized Clinical Trial", "Ortho — Before-After/Time Series", "Ortho — Prospective Cohort", "Various — Randomized Clinical Trial", "Various — Nonrandomized Trial", "Various — Before-After/Time Series", "Neuro — Before-After/Time Series", "Urol — Before-After/Time Series")),
    surg_design = fct_recode(surg_design, "Cardiac — Fully Paired" = "Cardiac — Other")
  ) |> 
  arrange(surg_design, year, study, arm_id)

studychar_tab |>
  # remove time-series entries 
  filter(
    !(study %in% c("Vochteloo 2011") & arm_id %in% c(2, 3)),
    !(study %in% c("Lau 2013") & arm_id %in% c(2, 3, 4)),
  ) |> 
  mutate(study_l = ifelse(row_number() > 1, "", study_l), .by = study) |>
  mutate(
    study = ifelse(study == "Tarazona-Santabalbina 2019", "T-Santabalbina 2019", study),
         study_l = str_replace(study_l, "Tarazona-", "T-"),
    pacu_screen = ifelse(pacu_screen, "\U2713", NA)) |> 
  group_by(surg_design) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac — Randomized Clinical Trial", "Cardiac — Before-After/Time Series", "Cardiac — Fully Paired", "GI/Abd — Randomized Clinical Trial", "GI/Abd — Before-After/Time Series", "GI/Abd — Retrospective Cohort", "Ortho — Randomized Clinical Trial", "Ortho — Before-After/Time Series", "Ortho — Prospective Cohort", "Various — Randomized Clinical Trial", "Various — Before-After/Time Series", "Neuro — Before-After/Time Series", "Urol — Before-After/Time Series")) |>
  cols_hide(c(refid, arm_id, study, year, design_f_lab, surgs_single, pacu_screen)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = "N ",
    arm              = "Arm",
    # pacu_screen      = "PACU Screen",
    asa_ps_incl      = "ASA PS",
    age_table        = "   Age",
    pre_mmse         = "   MMSE",
  ) |> 
  fmt_markdown(columns = c(study_l, pacu_screen, age_table, pre_mmse)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(90),
    # pacu_screen      ~ px(80),
    asa_ps_incl      ~ px(60),
    age_table        ~ px(100),
    pre_mmse         ~ px(100)
    ) |> 
  tab_style(style = cell_text(align = "right"),         locations = cells_body(columns = c(arm_n))) |>
  # tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "center"),        locations = cells_column_labels(columns = c(arm, pacu_screen, asa_ps_incl))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  # tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "center"),        locations = cells_body(columns = c(pacu_screen))) |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = list(cell_text(color = color_2)),   locations = cells_body(columns = c(arm_n:pre_mmse), rows = str_detect(arm, "Exp"))) |>
  tab_style(style = list(cell_text(color = color_1)),   locations = cells_body(columns = c(arm_n:pre_mmse), rows = str_detect(arm, "Scrn"))) |> 
  tab_footnote(md("Exp: expanded preoperative evaluation; Std: standard preoperative evaluation; Scrn: active delirium screening; NR: not reported")) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>  
  tab_footnote(md("ASA Physical Status."),              locations = cells_column_labels(columns = c(asa_ps_incl)))

```

### Evaluation Components

<font size = 4> `r table_ref()` Components of expanded preoperative evaluation and interventions prompted. </font>

```{r comparators}
#| eval: true
expanded_dat <- study_arm_dat |>
  filter(refid %in% kq1_refid) |>
  select(refid, year, study, study_l, arm_id, arm_kq1_eval, kq1_eras, gen_blood, gen_comp, gen_multi, gen_comorbid, gen_nutrition, gen_other, kq1_frail, kq1_cog, kq1_phys_func, kq1_psych, pt_nutr, pt_mobility, pt_surgery, pt_social, pt_other, staff_comorbid, staff_inappmed, staff_geriatrician, staff_multidisc, staff_supplement, staff_treatplan, staff_other, pacu_screen) |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  left_join(study_char_dat |> select(refid, design_f_lab, design_f_abbrev), by = "refid") |> 
  mutate(
    arm = ifelse(arm_kq1_eval == "eval_expand", "Exp", "Std"),
    across(gen_blood:staff_other, ~ notna_to_x(.x, symbol = "EXP")),
    kq1_eras = ifelse(kq1_eras == "eras_yes", "  x", NA),
    surg_design = paste0(surgs_single, " — ", design_f_lab)
  ) |> 
  filter(arm == "Exp") |> 
  slice(1, .by = study)

screen_only_refid <- study_arm_dat |> 
  filter(refid %in% kq8_refid) |> 
  filter(!refid %in% expanded_dat$refid) |> 
  pull(refid) |> 
  unique()

screenonly_dat <- study_arm_dat |>
  filter(refid %in% screen_only_refid) |> 
  select(refid, year, study, study_l, arm_id, arm_kq1_eval, kq1_eras, gen_blood, gen_comp, gen_multi, gen_comorbid, gen_nutrition, gen_other, kq1_frail, kq1_cog, kq1_phys_func, kq1_psych, pt_nutr, pt_mobility, pt_surgery, pt_social, pt_other, staff_comorbid, staff_inappmed, staff_geriatrician, staff_multidisc, staff_supplement, staff_treatplan, staff_other, pacu_screen) |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  left_join(study_char_dat |> select(refid, design_f_lab, design_f_abbrev), by = "refid") |> 
  mutate(
    arm = "Screen only",
    surg_design = paste0(surgs_single, " — ", design_f_lab),
    pacu_screen = ifelse(pacu_screen, " \U25CF", NA)
  ) |> 
  slice(1, .by = study)

standard_dat <- study_arm_dat |>
  filter(refid %in% kq1_refid) |>
  select(refid, year, study, study_l, arm_id, arm_kq1_eval, kq1_eras, gen_blood_std, gen_comp_std, gen_multi_std, gen_comorbid_std, gen_nutrition_std, gen_other_std, kq1_frail_std, kq1_cog_std, kq1_phys_func_std, kq1_psych_std, pt_nutr_std, pt_mobility_std, pt_surgery_std, pt_social_std, pt_other_std, staff_comorbid_std, staff_inappmed_std, staff_geriatrician_std, staff_multidisc_std, staff_supplement_std, staff_treatplan_std, staff_other_std, pacu_screen) |>
  rename_with(~ str_remove(.x, "_std")) |>
  left_join(surgs |> select(refid, surgs_single), by = "refid") |>
  left_join(study_char_dat |> select(refid, design_f_lab, design_f_abbrev), by = "refid") |>
  mutate(
    arm = ifelse(arm_kq1_eval == "eval_expand", "Exp", "Std"),
    across(gen_blood:staff_other, ~ notna_to_x(.x, symbol = "STD")),
    kq1_eras = ifelse(kq1_eras == "eras_yes", "  x", NA),
    surg_design = paste0(surgs_single, " — ", design_f_lab)
  ) |>
  filter(if_any(kq1_eras:staff_other, ~ !is.na(.x))) |>
  filter(arm == "Std") |>
  slice(1, .by = study)

expanded_combined <- bind_rows(expanded_dat, standard_dat) |> 
  # filter(refid %in% c(16846, 16605)) |> 
  arrange(year, study, arm_id) |> 
  group_by(study) |>
  mutate(
    across(gen_blood:staff_other, ~ paste0(.x, dplyr::lag(.x))),
    across(gen_blood:staff_other, ~ str_remove_all(.x, "NA")),
    across(gen_blood:staff_other, ~ na_if(.x, ""))
  ) |>
  ungroup() |>
  filter(arm_id > 1) |>
  mutate(
    across(gen_blood:staff_other, ~ ifelse(.x == "STD", " \U25CB", .x)),
    across(gen_blood:staff_other, ~ ifelse(.x == "EXPSTD", " \UFFED", .x)),
    across(gen_blood:staff_other, ~ ifelse(.x == "EXP", " \U25CF", .x)),
    pacu_screen = ifelse(pacu_screen, " \U25CF", NA)
  )

# # winloss graphic
# winloss_dat <- expanded_combined |> 
#   select(refid, study, arm, arm_id, gen_blood:staff_other) |> 
#   mutate(
#     across(gen_blood:staff_other, ~ ifelse(!is.na(.x), 1, 0.5)),
#     arm_code = ifelse(arm == "Exp", NA, 0),
#     outcomes = list(gen_blood:staff_other, arm_code)
#   )

# expanded_combined |> tabyl(surg_design) |> pull(surg_design) |> toString()

groups_kq1 <- c("Cardiac — Randomized Clinical Trial", "Cardiac — Before-After/Time Series", "GI/Abd — Randomized Clinical Trial", "GI/Abd — Before-After/Time Series", "GI/Abd — Retrospective Cohort", "Ortho — Randomized Clinical Trial", "Ortho — Before-After/Time Series", "Various — Randomized Clinical Trial", "Various — Nonrandomized Trial", "Various — Before-After/Time Series", "Neuro — Before-After/Time Series", "Urol — Before-After/Time Series") 

expanded_combined |> 
  arrange(year, study, arm_id) |> 
  select(refid, study, study_l, arm_id, arm, surg_design, kq1_eras, gen_blood, gen_comp, gen_multi, gen_comorbid, gen_nutrition, gen_other, kq1_frail, kq1_cog, kq1_phys_func, kq1_psych, pt_nutr, pt_mobility, pt_surgery, pt_social, pt_other, staff_comorbid, staff_inappmed, staff_geriatrician, staff_multidisc, staff_supplement, staff_treatplan, staff_other, pacu_screen) |> 
  filter(if_any(kq1_eras:kq1_psych, ~ !is.na(.x))) |>
  select(-arm_id) |> 
  distinct() |>
  group_by(surg_design) |> 
  gt(id = "one") |>
  row_group_order(groups = groups_kq1) |>
  gt_theme_mg() |>
  sub_missing(columns = everything(), missing_text = "") |>
  cols_hide(c(refid, study, arm, gen_blood)) |>
  fmt_markdown(columns = c(study_l)) |>
  cols_label(
    study_l              = md("Study"),
    kq1_eras             = md(vert_lab_fun("ERAS")),
    # gen_blood            = md(vert_lab_fun("Blood work")),
    gen_comp             = md(vert_lab_fun("CGA")),
    gen_multi            = md(vert_lab_fun("Multidisciplinary")),
    gen_comorbid         = md(vert_lab_fun("Meds/Comorbidity")),
    gen_nutrition        = md(vert_lab_fun("Nutrition")),
    gen_other            = md(vert_lab_fun("Other")),
    # gen_unspec           = md(vert_lab_fun("No detail")),
    kq1_frail            = md(vert_lab_fun("Frailty")), 
    kq1_cog              = md(vert_lab_fun("Cognitive")), 
    kq1_phys_func        = md(vert_lab_fun("Physical Function")), 
    kq1_psych            = md(vert_lab_fun("Psychosocial")),
    pt_nutr              = md(vert_lab_fun("Nutrition")),
    pt_mobility          = md(vert_lab_fun("Physical activity")),
    pt_surgery           = md(vert_lab_fun("Procedure")),
    pt_social            = md(vert_lab_fun("Social Ties")),
    pt_other             = md(vert_lab_fun("Other")),
    staff_comorbid       = md(vert_lab_fun("Rx/comorbidities")),
    staff_inappmed       = md(vert_lab_fun("Deprescribing")),
    staff_geriatrician   = md(vert_lab_fun("Geriatric Visits")),
    staff_multidisc      = md(vert_lab_fun("Multidisciplinary")),
    staff_supplement     = md(vert_lab_fun("Nutritional Suppl")),
    staff_treatplan      = md(vert_lab_fun("Treatment Plan")),  
    staff_other          = md(vert_lab_fun("Other")),
    pacu_screen          = md(vert_lab_fun("Active Delirium Screen")),
  ) |> 
  cols_width(
    study_l        ~ px(165),
    kq1_eras:pacu_screen ~ px(25),
  ) |> 
  tab_spanner(label = "General", columns = c(gen_comp:gen_other), level = 1) |>
  tab_spanner(label = "Targeted", columns = c(kq1_frail:kq1_psych), level = 1) |>
  tab_spanner(label = "Assessments", columns = c(gen_comp:kq1_psych), level = 2) |>
  tab_spanner(label = "Staff", columns = c(staff_comorbid:pacu_screen), level = 1) |>
  tab_spanner(label = "Patient Education", columns = c(pt_nutr:pt_other), level = 1) |>
  tab_spanner(label = "Interventions", columns = c(pt_nutr:pacu_screen), level = 2) |>
  # tab_style(style = cell_text(align = "right"), locations = cells_column_labels(columns = c(kq1_eras:pacu_screen))) |> 
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(kq1_psych:pacu_screen))) |> 
  tab_style(style = list(cell_text(color = color_1)), locations = cells_column_labels(columns = c(gen_comp:gen_other))) |> 
  tab_style(style = list(cell_text(color = color_2)), locations = cells_column_labels(columns = c(kq1_frail:kq1_psych))) |> 
  tab_style(style = list(cell_text(color = color_3)), locations = cells_column_labels(columns = c(pt_nutr:pt_other))) |> 
  tab_style(style = list(cell_text(color = color_4)), locations = cells_column_labels(columns = c(staff_comorbid:pacu_screen))) |> 
  tab_style(style = list(cell_text(color = color_1)), locations = cells_body(columns = c(gen_comp:gen_other), rows = everything())) |> 
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(kq1_frail:kq1_psych), rows = everything())) |> 
  tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(pt_nutr:pt_other), rows = everything())) |> 
  tab_style(style = list(cell_text(color = color_4)), locations = cells_body(columns = c(staff_comorbid:pacu_screen), rows = everything())) |> 
  # tab_style(style = list(cell_text(color = color_5)), locations = cells_body(columns = c(pacu_screen), rows = everything())) |> 
  tab_style(style = list(cell_text(color = color_1)), locations = cells_column_spanners(spanners = "General")) |> 
  tab_style(style = list(cell_text(color = color_2)), locations = cells_column_spanners(spanners = "Targeted")) |> 
  tab_style(style = list(cell_text(color = color_3)), locations = cells_column_spanners(spanners = "Patient Education")) |> 
  tab_style(style = list(cell_text(color = color_4)), locations = cells_column_spanners(spanners = "Staff")) |> 
  tab_footnote(md("ERAS: enhanced recovery after surgery; CGA: comprehensive geriatric assessment; GI: gastrointestinal; Abd: abdominal; Suppl: supplement;  \U25CF expanded evaluation only; \UFFED in expanded and standard evaluation arms; \U25E6 in standard evaluation arms only"))

```

## **Delirium Incidence**

```{r delirium_meta_data}
#| eval: true
# NOTE: compared and reconciled reported and calculated % # mutate(calc_per = delitotal_n / arm_n * 100, per_diff = calc_per - delitotal_perc) |> filter(per_diff > 0.5)
delirium_meta_dat <- dichot_dat |>
  filter(refid %in% expanded_combined$refid) |> 
  mutate(
    arm_n = ifelse(!is.na(deli_update_arm_n), deli_update_arm_n, arm_n),
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
  ) |> 
  filter(!is.na(delitotal_n)) |> # 
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  rename(surg_f = surgs_single_f) |> 
  select(refid, study, arm_id, arm, year, design_f_lab, country, surg_f, delitotal_n, arm_n, delirium_inc_prop, delitotal_time:delitotal_95high, deli_cam:deli_scale_otherspec) |> 
  arrange(design_f_lab, study, arm_id)

```

```{r delirium_tab}
#| eval: true
# referent values for calculating rr and ci; rr_ci
delirium_rr_ref <- delirium_meta_dat |>
  select(refid, refid, arm_id, delitotal_n, arm_n) |>
  filter(!is.na(delitotal_n)) |>
  arrange(refid, arm_id) |>
  rename(ref_deli_n = delitotal_n, ref_arm_n = arm_n) |>
  # group_by(refid) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() > 1, NA, ref_deli_n),
    .by = refid
  ) |>
  fill(ref_arm_n, ref_deli_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_deli_n = ifelse(row_number() == 1, NA, ref_deli_n),
    .by = refid
  ) 

delirium_tab <- delirium_meta_dat |>
  # select(refid, refid, year, arm_id, design_f_lab, study, study_l, arm_n, delitotal_time:delitotal_95high, deli_cam:deli_scale_otherspec) |>
  mutate(
    across(starts_with("deli_"), ~ str_remove_all(.x, "scale_")),
    across(starts_with("deli_"), ~ str_remove_all(.x, "deli_")),
    across(deli_cam:deli_scale_icdsc, ~ toupper(.x)),
  ) |>
  rename_with(~ gsub("scale_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("deli_", "", .x, fixed = TRUE)) |>
  left_join(delirium_rr_ref, by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, study_l), by = c("refid")) |>
  mutate(
    # other = ifelse(str_detect(otherspec, "AMT"), "AMT", other),
    # other = ifelse(str_detect(otherspec, "Psychiatrist consultation"), "Psych", other),
    # other = ifelse(str_detect(otherspec, "Chinese"), "Note", other),
    # other = ifelse(other == "other", NA_character_, other),
    calc_percent = delitotal_n / arm_n * 100,
    n_percent = n_per_fun(delitotal_n, arm_n, 1),
    rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(delitotal_n, arm_n, ref_deli_n, ref_arm_n), "—")
  ) |>
  relocate(calc_percent, .after = delitotal_perc) |>
  unite(scale_delirium, cam:other, remove = TRUE, sep = "/", na.rm = TRUE) |>
  mutate(
    scale_delirium = ifelse(scale_delirium == "unspec", "NR", scale_delirium),
    scale_delirium = ifelse(scale_delirium == "DELIRIUM INDEX (DI)", "DI", scale_delirium),
    scale_delirium = ifelse(scale_delirium == "DELIRIUM OBSERVATION SCREENING (DOS)/DSM", "DOS/DSM", scale_delirium),
    scale_delirium = ifelse(scale_delirium == "DELIRIUM OBSERVATION SCREENING (DOS)/other", "DOS/other", scale_delirium),
  ) |>
  select(year, refid, refid, design_f_lab, study, study_l, arm_id, arm_n, arm, scale_delirium, delitotal_time, n_percent, calc_percent, rr_ci, surg_f) |>
  # arrange(year, study, refid, desc(arm)) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  relocate(pre_mmse, .before = scale_delirium) |>
  relocate(age_table, .after = arm_n)

```

```{r delirium_gt}
#| eval: true
delirium_tab |>
    arrange(year, study, arm_id) |>
    mutate(
      delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
      delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time),
      study_l = ifelse(row_number() > 1, "", study_l),
      delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
      scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
      bar = case_when(
        str_detect(arm, "Exp") ~ bar_prop(calc_percent, color_2),
        .default = bar_prop(calc_percent, "#969696")),
      .by = study
    ) |>
    group_by(design_f_lab) |>
    gt(id = "one") |>
    row_group_order(groups = c("Randomized Clinical Trial", "Nonrandomized Trial", "Before-After/Time Series", "Retrospective Cohort")) |>
    cols_hide(c(year, refid, arm_id, study, surg_f, age_table, calc_percent)) |>
    cols_label(
      study_l = "Study",
      arm_n = " N",
      # age_table = "  Age",
      arm = md("Arm"),
      pre_mmse = md("  MMSE<br/>(preop)"),
      scale_delirium = "Scale",
      delitotal_time = "Days",
      n_percent = "N (%)",
      bar = "0 – 100%",
      rr_ci = "RR (95% CI)"
    ) |>
    fmt_markdown(columns = c(study_l, pre_mmse, bar)) |>
    tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, arm, scale_delirium))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, delitotal_time, n_percent, rr_ci))) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(arm, scale_delirium, bar))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, rr_ci))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(n_percent))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(n_percent))) |>
    tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:n_percent), rows = str_detect(arm, "Neur|Block"))) |>
    sub_missing(columns = delitotal_time, missing_text = "Note") |>
    gt_theme_mg() |>
    cols_width(
      study_l ~ px(165),
      arm_n ~ px(45),
      # age_table ~ px(100),
      arm ~ px(80),
      pre_mmse ~ px(95),
      scale_delirium ~ px(105),
      delitotal_time ~ px(50),
      n_percent ~ px(90),
      bar ~ px(100),
      rr_ci ~ px(140)
    ) |> 
  tab_style(style = list(cell_text(color = color_2)),   locations = cells_body(columns = c(arm_n:n_percent), rows = str_detect(arm, "Exp"))) |>
  tab_footnote("RR: risk ratio; MMSE: Mini-Mental State Examination; CAM: Confusion Assessment Method; DI: Delirium Index; DRS: Delirium Rating Scale; DOS: delirium observation screening; DSM: Diagnostic and Statistical Manual of Mental Disorders; NR: not reported.") |>
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time))
```

### *Pooled*

```{r delirium_meta}
delirium_meta_all_dat <- delirium_meta_dat |> 
  arrange(year, study, arm)

pairwise_all_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = delirium_meta_all_dat,
  sm = "RR") |> 
  select(studlab:surg_f) 

del_meta_rct_dat <- pairwise_all_dat |>
  filter(str_detect(design_f_lab, "Randomized")) |> 
  left_join(rob2_meta_dat, by = "refid") |>
  select(study, year, event2, n2, event1, n1, D1:Overall, surg_f) |>
  mutate(
    sample_size = n1 + n2,
  )

del_meta_nrsi_dat <- pairwise_all_dat |>
  filter(!str_detect(design_f_lab, "Randomized")) |>
  left_join(robinsi_meta_dat, by = "refid") |>
  select(study, year, event2, n2, event1, n1, D1:Overall, surg_f) |>
  mutate(
    sample_size = n1 + n2
  )

delirium_rct_meta <- metabin(event1, n1, event2, n2,
  data = del_meta_rct_dat,
  studlab = study,
  # subset = study != "Partridge 2017",
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE
)

delirium_nrsi_meta <- metabin(event1, n1, event2, n2,
  data = del_meta_nrsi_dat ,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE
)

```

<font size = 4> `r figure_ref()` Expanded versus standard properative evaluation (delirium incidence; randomized clinical trials). </font>

```{r delirium_meta_rct_forest, fig.width = 14, fig.height = 4.5, fig.align = "left", warning = TRUE}
forest(delirium_rct_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  # sortvar = year,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Expanded                          Standard",
  addrows.below.overall = 4,
  text.addline1 = "Without Hartung-Knapp adjustment (95% CI, 0.46–0.88)."
)
```
<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .</foot_mg> 

<br/>

<font size = 4> `r figure_ref()` Expanded versus standard properative evaluation (delirium incidence; nonrandomized designs). </font>

```{r delirium_meta_nrsi_forest, fig.width = 14, fig.height = 4.5, fig.align = "left", warning = TRUE}
forest(delirium_nrsi_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  # sortvar = year,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Expanded                          Standard",
  addrows.below.overall = 4
)
```
<foot_mg> RR: risk ratio; D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable. </foot_mg>

## **Complications**

```{r complications_check}
#| eval: false
# create excel file to inspect
complication_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, study, arm_id, arm, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high"))
}

complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

# complication <- c("medical", "surg", "cardiac", "gastro", "neuro", "pulm", "thromb", "infect", "fall", "stroke", "othcomp", "asppneum", "atelec", "bronch", "cardarr", "myoinfarct", "ssi", "sepsis", "uti", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48", "kidneyinj", "nerveinj", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

adverse_events_dat <- map(complication_incl, complication_fun)

wb <- openxlsx::createWorkbook("kq1_complications")

for (i in 1:17) {
    temp_sheet <- adverse_events_dat[[i]]
    addWorksheet(wb, sheetName = complication_incl[i])
    setColWidths(wb, i, cols = c(1:12), widths = c(rep(15, 12)))
    writeData(wb, sheet = i, temp_sheet)
}

path <- glue::glue("/Users/mgrant/Desktop/temp.xlsx")
saveWorkbook(wb, "/Users/mgrant/Desktop/kq4.xlsx", overwrite = TRUE)
```

<font size = 4> `r table_ref()` Reported complications in expanded versus standard preoperative evaluation — cardiac, pulmonary, and acute kidney injury (randomized and nonrandomized designs). </font>

```{r complications}
#| warning: true
#| eval: true

# included complications
complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

# complication_all <- c("medical", "surg", "cardiac", "gastro", "neuro", "pulm", "thromb", "infect", "fall", "stroke", "othcomp", "asppneum", "atelec", "bronch", "cardarr", "myoinfarct", "ssi", "sepsis", "uti", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48", "kidneyinj", "nerveinj", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

complication_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, year, study, arm_id, arm, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high")) |>
    mutate(complication = var_prefix) |>
    rename_with(~ str_replace(.x, "95", "ci_"), .cols = everything()) |>
    rename_with(~ str_replace(.x, "^.*_", ""), .cols = c(8:15)) |>
    arrange(complication, year, study, arm_id)
}

# adverse event data includes all reported complications in liss=t
adverse_events_dat <- map_df(complication_incl, complication_fun) |>
  mutate(
    arm_n = ifelse(!is.na(comp_update_arm_n), comp_update_arm_n, arm_n),
    calc_per = n / arm_n * 100,
    n_per = n_per_fun(n, arm_n, 1),
    diff = per - calc_per
  )

# if RR convert to OR get ln_te ln_se
# if reported OR use ests to get ln_te ln_se
# if neither use estimate

adverse_events_dat <- adverse_events_dat |>
  left_join(study_char_dat |> select(refid, study_l, surgs_single, design_f_lab), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  arrange(complication, surgs_single, year, study, arm_id) |>
  mutate(
    study_compl = paste0(study, complication),
    ref_arm_n = arm_n,
    ref_n = n
  ) |>
  group_by(study_compl) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |>
  mutate(
    # Luntz 2004 combine inhalation arms; differed in induction
    # ref_arm_n = ifelse(study == "Luntz 2004" & arm_id == 3, 64, ref_arm_n),
    # ref_n = ifelse(study == "Luntz 2004" & arm_id == 3, 5, ref_n),
    # ref_arm_n = ifelse(study == "Luntz 2004" & arm_id == 2, NA, ref_arm_n),
    # ref_n = ifelse(study == "Luntz 2004" & arm_id == 2, NA, ref_n),
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 1), "—"),
    rr_ci = ifelse(!is.na(ref_n) & n != 0 & ref_arm_n != 0, rr_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 2), "—"), # not if any Os
    bar = case_when(
      study == "Lau 2013" & arm_id == 2 ~ bar_prop(0.3, "#A93226"),
      study == "Lau 2013" & arm_id == 3 ~ bar_prop(1.1, "#A93226"),
      study == "Lau 2013" & arm_id == 4 ~ bar_prop(0.6, "#A93226"),
      study == "Lau 2013" & arm_id == 5 ~ bar_prop(0.8, "#A93226"),
      str_detect(arm, "Exp") ~ bar_prop(calc_per, "#969696"),
      .default = bar_prop(calc_per, "#A93226"))) |>
  select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n, age_table, surgs_single, n_per, bar, rd_ci, rr_ci, complication, design_f_lab, effect:high)

```


```{r complications_gt}
#| eval: true
adverse_events_gt_dat <- adverse_events_dat |> 
  mutate(complication = factor(complication, levels = c("cardiac", "myoinfarct", "cardarr", "kidneyinj", "pulm", "pneum", "atelec", "pe", "respfail", "vent48"), labels = c("Cardiac", "MI", "Cardiac Arrest", "AKI", "Pulmonary", "Pneumonia", "Atelectasis", "PE", "Respiratory Failure", "Ventilator >48hr"))) |>
  mutate(
    surgs_single = ifelse(surgs_single == "Vasc", "Vascular", surgs_single),
    study_l = ifelse(row_number() > 1, "", study_l),
    surgs_single = ifelse(row_number() > 1, "", surgs_single),
    complication = fct_drop(complication),
    .by = study_compl
  ) |>
  mutate(
    study_l = case_when(
      study == "Lau 2013" & arm_id == 2 ~ "   2007",
      study == "Lau 2013" & arm_id == 3 ~ "   2008",
      study == "Lau 2013" & arm_id == 4 ~ "   2009",
      study == "Lau 2013" & arm_id == 5 ~ "   2010",
      .default = study_l
    ),
    n_per = case_when(
      study == "Lau 2013" & arm_id == 2 ~ "(0.3)",
      study == "Lau 2013" & arm_id == 3 ~ "(1.1)",
      study == "Lau 2013" & arm_id == 4 ~ "(0.6)",
      study == "Lau 2013" & arm_id == 5 ~ "(0.8)",
      .default = n_per
    ),
    arm_n = ifelse(study == "Lau 2013" & arm_id %in% c(2:5), " — ", arm_n),
    rd_ci = ifelse(study == "Lau 2013", "", rd_ci),
    rr_ci = ifelse(study == "Lau 2013", "", rr_ci)
  ) |> 
  unite(complication, complication, design_f_lab, sep = " – ") |> 
  arrange(year, study_compl, arm_id) 


adverse_meta_wide_dat <- adverse_events_gt_dat |> 
  filter(study != "Lau 2013") |> 
  mutate(arm_n = as.numeric(arm_n)) |> 
  arrange(refid, complication) |> 
  pivot_wider(names_from = "arm", values_from = c("n", "arm_n")) |> 
  group_by(refid, complication) |> 
  fill(n_Std:arm_n_Exp) |> 
  slice(2) |> 
  ungroup() |> 
  mutate(
    complication_nodesign = str_remove(complication, " – .*$"),
    study_design = ifelse(str_detect(complication, "Rand"), paste0(study, "*"), study),
    design = ifelse(str_detect(study_design, "\\*"), "Randomized", "Nonrandomized")
    # complication_nodesign = factor(complication_nodesign, levels = c("cardiac", "myoinfarct", "cardarr", "kidneyinj", "pulm", "pneum", "atelec", "pe", "respfail", "vent48"), labels = c("Cardiac", "MI", "Cardiac Arrest", "AKI", "Pulmonary", "Pneumonia", "Atelectasis", "PE", "Respiratory Failure", "Ventilator >48hr"))
  ) |> 
  select(-c(age_table:rr_ci, effect:high))

adverse_events_gt_dat |> 
  # tabyl(complication) |> arrange(desc(percent)) |> pull(complication) |> toString()
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac – Randomized Clinical Trial", "Cardiac – Before-After/Time Series", "Cardiac Arrest – Randomized Clinical Trial", "Cardiac Arrest – Before-After/Time Series", "MI – Randomized Clinical Trial", "MI – Before-After/Time Series", "Pulmonary – Randomized Clinical Trial", "Pneumonia – Randomized Clinical Trial", "Pneumonia – Before-After/Time Series", "Atelectasis – Before-After/Time Series", "Respiratory Failure – Before-After/Time Series", "Ventilator >48hr – Before-After/Time Series", "PE – Before-After/Time Series", "AKI – Randomized Clinical Trial", "AKI – Before-After/Time Series")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, rr_ci, adjcrude, est, low, high, effect )) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table, rr_ci)) |>
  # fmt_integer(use_seps = TRUE, sep_mark = ",") |> 
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l          ~ px(140),
    arm_n            ~ px(60),
    arm              ~ px(60),
    age_table        ~ px(100),
    surgs_single     ~ px(80),
    n_per            ~ px(90),
    bar              ~ px(120),
    rd_ci            ~ px(130)
  ) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),      locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(rd_ci))) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table))) |> 
  tab_footnote("RD: risk difference; GI: gastrointestinal; Abd: abdominal; Ortho: orthopedic; Neuro: neurologic.") |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Exp"))) 

```

### *Pooled*

```{r complication_meta,  fig.width = 14, fig.height = 12.5, fig.align = "left"}
complication_meta_fun <- function(compl_label, randomized = "Randomized", use_hakn = FALSE, predictive = TRUE){
meta_dat <- adverse_meta_wide_dat |>
  select(-c(complication, study, arm_id, study_l, study_compl)) |>
  rename(complication = complication_nodesign, study = study_design) |>
  filter(complication %in% compl_label & design == randomized) |> 
  relocate(study, .after = year) |> 
  arrange(year, study) |> 
  left_join(all_rob_meta_dat, by = "refid")

metabin(
  n_Exp, arm_n_Exp, n_Std, arm_n_Std,
  data = meta_dat,
  studlab = study,
  sm = "RR",
  method.tau = "REML",
  prediction = predictive,
  # subgroup = design,
  hakn = use_hakn,
  allstudies = FALSE,
)  
}

complication_forest_rct_fun <- function(adverse_meta, use_predictive = FALSE){
forest(adverse_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)   ", "D1", "D2", "D3", "D4", "D5", "All"),
  colgap.right = "4mm",
  just.addcols.right = "center",
  just.addcols.left = "right",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.subgroup.name = FALSE,
  overall = TRUE,
  print.I2.ci = TRUE,
  prediction = use_predictive,
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  xlim = c(0.2, 2),
  xlab = "Favors: Expanded                             Standard",
  addrows.below.overall = 4,
)
}

complication_forest_nrsi_fun <- function(adverse_meta, use_predictive = TRUE){
forest(adverse_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR ", "(95% CI)   ", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  colgap.right = "4mm",
  just.addcols.right = "center",
  just.addcols.left = "right",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.subgroup.name = FALSE,
  overall = TRUE,
  print.I2.ci = TRUE,
  prediction = use_predictive,
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  xlim = c(0.2, 2),
  xlab = "Favors: Expanded                             Standard",
  addrows.below.overall = 4,
)
}

```

#### Cardiac Composite

<font size = 4> `r figure_ref()` Risk ratio for composite measures of cardiac complications (expanded versus standard preoperative evaluation; randomized clinical trials). </font>

```{r complication_cardiac,  fig.width = 14, fig.height = 3, fig.align = "left"}
adverse_meta <- complication_meta_fun("Cardiac", randomized = "Randomized", use_hakn = FALSE, predictive = FALSE)
complication_forest_rct_fun(adverse_meta, use_predictive = FALSE)
```
<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .
</foot_mg> 

<br/>

<font size = 4> `r figure_ref()` Risk ratio for composite measures of cardiac complications (expanded versus standard preoperative evaluation; nonrandomized designs. </font>

```{r complication_nrsi_cardiac,  fig.width = 14, fig.height = 3.8, fig.align = "left"}
adverse_meta <- complication_meta_fun("Cardiac", randomized = "Nonrandomized", use_hakn = FALSE, predictive = FALSE)
complication_forest_nrsi_fun(adverse_meta, use_predictive = TRUE)
```
<foot_mg> RR: risk ratio; D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable. </foot_mg>

<br/>

#### Myocardial Infarction

<font size = 4> `r figure_ref()` Risk ratio for myocardial infarction (expanded versus standard preoperative evaluation; nonrandomized designs. </font>

```{r complication_nrsi_mi,  fig.width = 14, fig.height = 3.5, fig.align = "left"}
adverse_meta <- complication_meta_fun("MI", randomized = "Nonrandomized", use_hakn = FALSE, predictive = FALSE)
complication_forest_nrsi_fun(adverse_meta, use_predictive = TRUE)
```
<foot_mg> RR: risk ratio; MI: myocardial infarction; D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable. </foot_mg>

#### Pulmonary

<font size = 4> `r figure_ref()` Risk ratio for complications reported as "pulmonary" (expanded versus standard preoperative evaluation; randomized clinical trials). </font>


```{r complication_pulmonary,  fig.width = 14, fig.height = 3, fig.align = "left"}
adverse_meta <- complication_meta_fun("Pulmonary", randomized = "Randomized", use_hakn = FALSE, predictive = FALSE)
complication_forest_rct_fun(adverse_meta, use_predictive = FALSE)
```
<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .
</foot_mg> 

<br/>

#### Pneumonia

<font size = 4> `r figure_ref()` Risk ratio for pneumonia (expanded versus standard preoperative evaluation; randomized clinical trials). </font>

```{r complication_pneumonia,  fig.width = 14, fig.height = 2.9, fig.align = "left"}
adverse_meta <- complication_meta_fun("Pneumonia", randomized = "Randomized", use_hakn = FALSE, predictive = FALSE)
complication_forest_rct_fun(adverse_meta, use_predictive = FALSE)
```
<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .
</foot_mg> 

<br/>

<font size = 4> `r figure_ref()` Risk ratio for pneumonia (expanded versus standard preoperative evaluation; nonrandomized designs). </font>

```{r complication_nrsi_pneumomia,  fig.width = 14, fig.height = 4.2, fig.align = "left"}
adverse_meta <- complication_meta_fun("Pneumonia", randomized = "Nonrandomized", use_hakn = FALSE, predictive = FALSE)
complication_forest_nrsi_fun(adverse_meta, use_predictive = TRUE)
```
<foot_mg> RR: risk ratio; D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable. </foot_mg>

<br/>

#### Acute Kidney Injury

<font size = 4> `r figure_ref()` Risk ratio for acute kidney injury (expanded versus standard preoperative evaluation; nonrandomized designs). </font>

```{r complication_nrsi_aki,  fig.width = 14, fig.height = 3, fig.align = "left"}
adverse_meta <- complication_meta_fun("AKI", randomized = "Nonrandomized", use_hakn = FALSE, predictive = FALSE)
complication_forest_nrsi_fun(adverse_meta, use_predictive = FALSE)
```
<foot_mg> RR: risk ratio; D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable. </foot_mg>

## **Length of Stay**

<font size = 4> `r table_ref()` Length of stay according to procedure classification and type of preoperative evaluation. </font>

```{r length_of_stay}
#| eval: true
los_tab <- contin_dat |>
  mutate(los_for_tables(contin_dat)) |>
  filter(refid %in% kq1_refid) |> 
  filter(if_any(los_m:los_diff_pval, ~ !is.na(.))) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid" ) |> 
  mutate(
    refid_arm_id = paste0(refid, "-", arm_id),
    surg_groups = paste0(design_f_lab, " - ", surgs_noabbr_f),
    mean_med = case_when(
      !is.na(los_m) ~ los_m,
      !is.na(los_med) ~ los_med
    ),
    calc_prop_25d = 100 * mean_med / 25,
    bar = case_when(
      str_detect(arm, "Exp") ~ bar_prop(calc_prop_25d, "#A93226"),
      .default = bar_prop(calc_prop_25d, "#969696")
    )
  ) |>
  arrange(surg_groups, year, study, arm_id) |> 
  select(refid, refid_arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, los_table, bar, surg_groups, country)

los_tab |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         country = ifelse(row_number() > 1, "", country),
         # arm_n = ifelse(is.na(arm_n), "–", arm_n),
         .by = refid) |> 
  # tabyl(surg_groups) |> pull(surg_groups) |> toString()
  group_by(surg_groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Before-After/Time Series - Cardiac", "Randomized Clinical Trial - Gastrointestinal/Abdominal", "Before-After/Time Series - Gastrointestinal/Abdominal", "Retrospective Cohort - Gastrointestinal/Abdominal", "Randomized Clinical Trial - Orthopedic", "Before-After/Time Series - Orthopedic", "Randomized Clinical Trial - Various", "Before-After/Time Series - Various", "Before-After/Time Series - Neurosurgical", "Before-After/Time Series - Urologic")) |> 
  sub_missing(columns = everything(), missing_text = "") |>
  cols_hide(c(refid, refid_arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = " N",
    arm = "Arm",
    asa_ps_incl = "PS",
    age_table = "    Age",
    los_table = "    LOS",
    bar = "0 – 25 days",
    country = "Country"
  ) |>
  fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(60),
    arm ~ px(60),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120),
    country ~ px(80)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, bar))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, arm))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(arm, "Exp"))) |> 
  tab_footnote(md("NR: not reported")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote("Number of patients not reported (time-series).", locations = cells_body(columns = c(arm_n), rows = study == "Lau 2013" & is.na(arm_n))) |>
  tab_footnote("Geometric mean.", locations = cells_body(columns = c(los_table), rows = study == "Partridge 2017")) 
  
# save refids for meta-analysis
los_refid <- los_tab$refid
```

<font size = 4> `r table_ref()` Length of stay according in studies of postoperative delirium screening only. </font>

```{r length_of_stay_nrsi}
#| eval: true
los_tab <- contin_dat |>
  mutate(los_for_tables(contin_dat)) |>
  filter(refid %in% screen_only_refid) |> 
  filter(if_any(los_m:los_diff_pval, ~ !is.na(.))) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, arm_kq8_pacu_screen), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid" ) |> 
  mutate(
    arm = ifelse(arm_kq8_pacu_screen == "pacuscreen_yes", "Screened", "Unscreened"),
    refid_arm_id = paste0(refid, "-", arm_id),
    surg_groups = paste0(design_f_lab, " - ", surgs_noabbr_f),
    mean_med = case_when(
      !is.na(los_m) ~ los_m,
      !is.na(los_med) ~ los_med
    ),
    calc_prop_25d = 100 * mean_med / 25,
    bar = case_when(
      str_detect(arm, "Screened") ~ bar_prop(calc_prop_25d, "#A93226"),
      .default = bar_prop(calc_prop_25d, "#969696")
    )
  ) |>
  arrange(surg_groups, year, study, arm_id) |> 
  select(refid, refid_arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, los_table, bar, surg_groups, country)

los_tab |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         country = ifelse(row_number() > 1, "", country),
         # arm_n = ifelse(is.na(arm_n), "–", arm_n),
         .by = refid) |> 
  # tabyl(surg_groups) |> pull(surg_groups) |> toString()
  group_by(surg_groups) |>
  gt(id = "one") |>
  # row_group_order(groups = c("Before-After/Time Series - Cardiac", "Randomized Clinical Trial - Gastrointestinal/Abdominal", "Before-After/Time Series - Gastrointestinal/Abdominal", "Retrospective Cohort - Gastrointestinal/Abdominal", "Randomized Clinical Trial - Orthopedic", "Before-After/Time Series - Orthopedic", "Randomized Clinical Trial - Various", "Before-After/Time Series - Various", "Before-After/Time Series - Neurosurgical", "Before-After/Time Series - Urologic")) |> 
  sub_missing(columns = everything(), missing_text = "") |>
  cols_hide(c(refid, refid_arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = " N",
    arm = "Arm",
    asa_ps_incl = "PS",
    age_table = "    Age",
    los_table = "    LOS",
    bar = "0 – 25 days",
    country = "Country"
  ) |>
  fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(60),
    arm ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120),
    country ~ px(80)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, bar))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, arm))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(arm, "Screened"))) |> 
  tab_footnote(md("NR: not reported")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote("Number of patients not reported (time-series).", locations = cells_body(columns = c(arm_n), rows = study == "Lau 2013" & is.na(arm_n)))
  
```

### *Pooled*

<font size = 4> `r figure_ref()` Mean difference in lengths of stay (expanded versus standard preoperative evaluation; randomized clinical trials). </font>

```{r los_meta_dat}
#| echo: false
los_meta_dat <- contin_dat |>
  filter(refid %in% kq1_refid) |> 
  filter(refid %in% los_refid) |> 
  filter(!study %in% c("Lau 2013", "Vochteloo 2011")) |> # time-series, multiple times w/o sufficient data
  filter(!study %in% c("Ommundsen 2018")) |> # only median and bwgrp p-value
  # calculated sds from pvalues: Partridge 2017, Zhu 2022
  mutate(
    los_sd =
      case_when(
        study == "Partridge 2017" ~ sd_bwgrp_sdonly_fun(3.32, 5.53, 104, 105, .001),
        # study == "Ommundsen 2018" ~ sd_bwgrp_fun(8, 8.1, 53, 63, .63)[6],
        study == "Zhu 2022" ~ sd_bwgrp_sdonly_fun(20.8, 23.6, 70, 85, .001),
        .default = los_sd
      )
  ) |> 
  select(refid, study, design_f_lab, arm, arm_n, los_m, los_sd, los_med, los_rl, los_ru, los_iqrl, los_iqru, los_95l, los_95u) |> 
  select(!matches("95")) |> 
  rename_with(~ str_remove(.x, "los_")) |> 
  pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  arrange(year) 

los_rct_meta_dat <- los_meta_dat |> 
  filter(str_detect(design_f_lab, "Rand")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid")

los_nrsi_meta_dat <- los_meta_dat |> 
  filter(!str_detect(design_f_lab, "Rand")) |> 
  left_join(robinsi_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid")
```

```{r los_meta, fig.width = 14, fig.height = 4.55, fig.align = "left"}
los_meta <- metacont(
  n.e = arm_n_Exp, 
  n.c = arm_n_Std,
  common =  TRUE,
  mean.e = m_Exp,
  sd.e = sd_Exp,
  median.e = med_Exp,
  q1.e = iqrl_Exp,
  q3.e = iqru_Exp,
  min.e = rl_Exp,
  max.e = ru_Exp,
  mean.c = m_Std,
  sd.c = sd_Std,
  median.c = med_Std,
  q1.c = iqrl_Std,
  q3.c = iqru_Std,
  min.c = rl_Std,
  max.c = ru_Std,
  data = los_rct_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  studlab = study
)

forest(los_meta,
  weight.study = "random",
  # common =  FALSE,
  label.e = "Expanded ",
  label.c = "Standard ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  # digits.pval.Q = 2,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "right",
  print.pval.Q = FALSE,
  # sortvar = -TE,
  # xlim = c(-10, 10),
  # at = c(-80, -60, -40, -20, 0, 20, 40),
  rightcols = c("effect", "ci", "surgs_single", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("MD ", "(95% CI)   ", "Procedure", "D1", "D2", "D3", "D4", "D5", "All"),
  xlab = "Favors: Expanded                                      Standard           ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4
)

```
<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/>
When the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, and/or range with between-group p-value used as a last resort.<br/>
Partridge 2017 geometric means reported.<br/>
Ommundsen 2018 reported only median and between-group p-value and was excluded.
</foot_mg> 

<br/>

<font size = 4> `r figure_ref()` Mean difference in lengths of stay (expanded versus standard preoperative evaluation; nonrandomized designs). </font>

```{r los_nrsi_meta, fig.width = 14, fig.height = 5.2, fig.align = "left"}
los_meta <- metacont(
  n.e = arm_n_Exp, 
  n.c = arm_n_Std,
  common =  TRUE,
  mean.e = m_Exp,
  sd.e = sd_Exp,
  median.e = med_Exp,
  q1.e = iqrl_Exp,
  q3.e = iqru_Exp,
  min.e = rl_Exp,
  max.e = ru_Exp,
  mean.c = m_Std,
  sd.c = sd_Std,
  median.c = med_Std,
  q1.c = iqrl_Std,
  q3.c = iqru_Std,
  min.c = rl_Std,
  max.c = ru_Std,
  data = los_nrsi_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  studlab = study
)

forest(los_meta,
  weight.study = "random",
  common =  FALSE,
  label.e = "Expanded ",
  label.c = "Standard ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "right",
  print.pval.Q = FALSE,
  # sortvar = -TE,
  # xlim = c(-10, 10),
  # at = c(-80, -60, -40, -20, 0, 20, 40),
  rightcols = c("effect", "ci", "surgs_single", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("MD", "(95% CI)  ", "Procedure", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  xlab = "Favors: Expanded                                   Standard    ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4
)

```
<foot_mg> D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable. <br/> 
When the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, and/or range.  </foot_mg> 

<br/>

## **Discharge Location**

<font size = 4> `r table_ref()` Discharge location in studies comparing expanded with standard preoperative assessments. </font>

```{r dc_loc}
#| eval: true
dc_loc_dat <- dichot_dat |>
  filter(refid %in% kq1_refid) |>
  filter(if_any(starts_with("disch_"), ~ !is.na(.x))) |>
  mutate(
    arm_n = ifelse(!is.na(disch_update_arm_n), disch_update_arm_n, arm_n),
    disch_nper = n_per_fun(disch_inst_n, arm_n, n_sig_dig = 1),
    disch_per = disch_inst_n/arm_n
  ) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_noabbr_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  mutate(design_surg = paste0(design_f_lab, " — ", surgs_noabbr_f)) |>
  select(refid, refid, arm_id, study, study_l, arm_n, arm, asa_ps_incl, age_table, design_surg, country, starts_with("disch_")) |>
  select(-c(disch_inst_per:disch_inst_95high)) |> 
  arrange(refid, arm_id) |> 
  group_by(study) |> 
  mutate(
    ref_disch_n = ifelse(arm_id > 1, first(disch_inst_n), NA),
    ref_arm_n = ifelse(arm_id > 1, first(arm_n), NA),
    rr_ci = ifelse(!is.na(ref_disch_n), rr_ci_fun(disch_inst_n, arm_n, ref_disch_n, ref_arm_n), NA)) |> 
  select(-starts_with("ref_")) 
```

```{r dc_loc_gt}
dc_loc_dat |> 
  group_by(study_l) |>
  arrange(study, arm_id) |> 
  mutate(
    study_l = ifelse(row_number() == 1, study_l, NA),
    country = ifelse(row_number() == 1, country, NA),
    bar = case_when(
      str_detect(arm, "Exp") ~ bar_prop(disch_per * 100, "#A93226"),
      .default = bar_prop(disch_per * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  select(refid, study_l, arm_n, arm, age_table, country, disch_nper, bar, rr_ci, everything()) |> 
  group_by(design_surg) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial — Orthopedic", "Before-After/Time Series — Orthopedic", "Randomized Clinical Trial — Gastrointestinal/Abdominal", "Randomized Clinical Trial — Various", "Before-After/Time Series — Various", "Before-After/Time Series — Neurosurgical")) |>
  cols_hide(c(refid, arm_id, study, disch_update_arm_n, asa_ps_incl, disch_inst_n, disch_per)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Arm",
    age_table        = "   Age",
    country          = "Country",
    disch_nper       = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  tab_spanner(label = "Discharge to Institution", columns = c(disch_nper:bar), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  # fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(50),
    age_table        ~ px(90),
    country          ~ px(80),
    disch_nper       ~ px(80),
    bar              ~ px(120),
    rr_ci            ~ px(120)
    ) |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, age_table, arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(rr_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n, disch_nper))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, arm, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rr_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(disch_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, arm, age_table, disch_nper), rows = str_detect(arm, "Exp"))) |> 
    tab_footnote("Exp: expanded preoperative evaluation; Std: standard preoperative evaluation; RR: risk ratiodifference; Various: more that one procedure category.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table)))

```

### *Pooled*

<font size = 4> `r figure_ref()` Pooled comparison of discharge location in studies comparing expanded with standard preoperative assessments (randomized clinical trials).   </font>

```{r dc_loc_meta, fig.width = 14, fig.height = 3.8, fig.align = "left", warning = TRUE}
dc_loc_rct_meta_dat <- dc_loc_dat |> 
  filter(str_detect(design_surg, "Randomized")) |> 
  select(refid, study, arm, disch_inst_n, arm_n) |> 
  rename(disch_n = disch_inst_n) |> 
  pivot_wider(names_from = arm, values_from = c(disch_n, arm_n)) |> 
  left_join(rob2_meta_dat, by = "refid")

dc_loc_rct_meta <- metabin(
  disch_n_Exp, arm_n_Exp, disch_n_Std, arm_n_Std,
  data = dc_loc_rct_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = TRUE,
  # allstudies = TRUE,
  # subgroup = subgroup
  )

forest(dc_loc_rct_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  # sortvar = year,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.3, 2),
  xlab = "Favors: Expanded                          Standard",
  addrows.below.overall = 4,
  # text.addline1 = "Without Hartung-Knapp adjustment (95% CI, 0.40–0.92)."
)
```
<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .</foot_mg> 

<br/>

<font size = 4> `r figure_ref()` Pooled comparison of discharge location in studies comparing expanded with standard preoperative assessments (nonrandomized designs).   </font>

```{r dc_loc_nrsi_meta, fig.width = 14, fig.height = 3.5, warning = TRUE}
#| fig-align: "left"
dc_loc_nrsi_meta_dat <- dc_loc_dat |> 
  filter(!str_detect(design_surg, "Randomized")) |> 
  select(refid, study, arm, disch_inst_n, arm_n) |> 
  rename(disch_n = disch_inst_n) |> 
  pivot_wider(names_from = arm, values_from = c(disch_n, arm_n)) |> 
  left_join(robinsi_meta_dat, by = "refid")

dc_loc_nrsi_meta <- metabin(
  disch_n_Exp, arm_n_Exp, disch_n_Std, arm_n_Std,
  data = dc_loc_nrsi_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  # allstudies = TRUE,
  # subgroup = subgroup
  )

forest(dc_loc_nrsi_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Expanded",
  label.c = "Standard",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  # sortvar = year,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.3, 2),
  xlab = "Favors: Expanded                          Standard",
  addrows.below.overall = 4,
  # text.addline1 = "Without Hartung-Knapp adjustment (95% CI, 0.40–0.92)."
)
```
<foot_mg> RR: risk ratio; D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable. </foot_mg>
<br/>

## **Mortality**

```{r mortality_data}
#| eval: true
mortality_dat <- dichot_dat |>
  filter(study != "Lau 2013") |> # no denominators
  filter(if_any(starts_with("mort"), ~ !is.na(.x))) |> 
  # filter(arm_n != mort_update_arm_n) |> 
  # select(refid, arm_n, mort_update_arm_n)
  mutate(
    # arm_n use mort_update_arm_n if different
    arm_n = ifelse(!is.na(mort_update_arm_n), mort_update_arm_n, arm_n)
  ) |> 
  select(refid, refid_c, arm_id, arm, year, study, study_l, design_f_lab, arm_n, matches("_n|per") & starts_with("mort"), -mort_update_arm_n) |> 
  pivot_longer(
    cols = starts_with("mort"),
    names_to = "estimand",
    values_to = "estimate",
    values_drop_na = TRUE
  ) |>
  mutate(
    mort_period = str_remove(estimand, "_.*"),
    estimand = str_replace(estimand, ".*_(.*)$", "\\1")
  ) |>
  pivot_wider(
    names_from = estimand,
    values_from = estimate
  ) |>
  mutate(
    mort_period = case_when(
      str_detect(mort_period, "hosp") ~ "Hospital",
      str_detect(mort_period, "mort30") ~ "30-day",
      str_detect(mort_period, "mort90") ~ "90-day",
      str_detect(mort_period, "mort1") ~ "1-year"
    ), 
    per = per/100
  ) |>
  rename(mort_n = n, mort_per_rep = per) |>
  # for Park 2020 and Dai 2021 reported both in-hospital and 30-day
  # mutate(
  #   refid_c = ifelse(study %in% c("Park 2020", "Dai 2021") & mort_period == "30-day", paste0(refid_c, "-30"), refid_c)
  # ) |> 
  arrange(refid_c, arm_id) |>
  mutate(
    ref_arm_n = arm_n,
    ref_mort_n = mort_n
  ) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() > 1, NA, ref_mort_n)
  ) |>
  fill(ref_arm_n, ref_mort_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() == 1, NA, ref_mort_n)
  ) |>
  ungroup() |> 
  left_join(study_char_dat |> select(refid, surgs_single_f), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(asa_combine |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |> 
  mutate(mort_percent = mort_n/arm_n,
         mort_period = factor(mort_period, levels = c("Hospital", "30-day", "90-day", "1-year"))) |>
  select(refid, refid_c, arm_id, year, study, study_l, arm_n, arm, asa_ps_incl, age_table, design_f_lab, mort_n, mort_percent, ref_mort_n, ref_arm_n, mort_period, mort_per_rep, surgs_single_f)

```

<font size = 4> `r table_ref()` Reported mortality in randomized clinical trials.</font>

```{r mortality_rct_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  filter(str_detect(design_f_lab, "Rand")) |> 
  group_by(mort_period, study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(arm, "Exp") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    # study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    # surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "—"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  arrange(year, refid_c, arm_id) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  row_group_order(groups = c("Hospital", "30-day", "90-day", "1-year")) |>
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N  ",
    arm = "Arm",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, arm, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, arm, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n, mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, arm, age_table, mort_n_percent), rows = str_detect(arm, "Exp"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(65),
    arm ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; NR: not reported; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Various: more that one procedure category.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table)))  

```

<br/>

<font size = 4> `r table_ref()` Reported mortality in nonrandomized designs (all retrospective cohort studies).</font>

```{r mortality_nrsi_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  filter(!str_detect(design_f_lab, "Rand")) |> 
  filter(!refid %in% screen_only_refid) |> 
  group_by(mort_period, study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(arm, "Exp") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    # study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    # surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "—"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  arrange(year, refid_c, arm_id) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day", "1-year")) |>
  cols_label(
    study_l = "Study",
    arm_n = "N    ",
    arm = "Arm",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, arm, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, arm, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(arm_n, mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, arm, age_table, mort_n_percent), rows = str_detect(arm, "Exp"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(65),
    arm ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Various: more that one procedure category.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table)))  
  # tab_footnote("Different lengths of follow-up from the same trial.", locations = cells_body(columns = study_l, rows = study %in% c("Su 2016", "Zhang 2019b"))) 
```

### *Pooled*

```{r mortality_hosp_30d_meta}
#| eval: true
mortality_rct_meta_dat <- mortality_dat |>
  filter(str_detect(design_f_lab, "Rand")) |> 
  filter(mort_period %in% c("Hospital", "30-day")) |>
  select(refid, study, arm, mort_n, arm_n, mort_period)

mortality_nrsi_meta_dat <- mortality_dat |>
  filter(!str_detect(design_f_lab, "Rand")) |> 
  filter(mort_period %in% c("Hospital", "30-day")) |>
  # exclude T-Santabalbina 2019 hospital; retain 30-day
  filter(!(study == "T-Santabalbina 2019" & mort_period == "Hospital")) |> 
  select(refid, study, arm, mort_n, arm_n, mort_period)

mortality_nrsi_meta_1yr_dat <- mortality_dat |>
  filter(!str_detect(design_f_lab, "Rand")) |> 
  filter(mort_period %in% c("1-year")) |>
  select(refid, study, arm, mort_n, arm_n, mort_period)

pairwise_rct_mort_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_rct_meta_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

pairwise_nrsi_mort_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_nrsi_meta_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

pairwise_nrsi_mort_1yr_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_nrsi_meta_1yr_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

```

<font size = 4> `r figure_ref()` Risk ratio for hospital or 30-day mortality (expanded preoperative evaluation versus standard; randomized clinical trials). </font>

```{r mort_rct_meta, fig.dim = c(14, 4), fig.align = "center"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
mort_meta_dat <- pairwise_rct_mort_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  select(study, year, event2, n2, event1, n1, surgs_single, D1:Overall, mort_period, refid)

# total_meta(mort_meta_dat)
# refid_meta_fun(mort_meta_dat)

mort_rct_meta <- metabin(event2, n2, event1, n1,
  data = mort_meta_dat,
  studlab = study,
  # cluster = refid,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = FALSE,
  allstudies = FALSE,
)

# summary(plac_meta)
forest(mort_rct_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Expanded  ",
  label.c = "Standard  ",
  rightcols = c("effect", "ci", "surgs_single", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "Procedure", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 2, 
  print.pval.Q = FALSE,
  xlim = c(0.1, 10),
  xlab = "Favors: Expanded                         Standard        ",
  addrows.below.overall = 4
)

```
<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .</foot_mg> 

<br/>

<font size = 4> `r figure_ref()` Risk ratio for hospital or 30-day mortality (expanded preoperative evaluation versus standard; nonrandomized designs). </font>

```{r mort_nrsi_meta, fig.dim = c(14, 5.5), fig.align = "center"}
mort_meta_dat <- pairwise_nrsi_mort_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(robinsi_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  select(study, year, event2, n2, event1, n1, surgs_single, D1:Overall, mort_period, refid)

# total_meta(mort_meta_dat)
# refid_meta_fun(mort_meta_dat)

mort_nrsi_meta <- metabin(event2, n2, event1, n1,
  data = mort_meta_dat,
  studlab = study,
  # cluster = refid,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = FALSE,
  allstudies = TRUE,
)

# summary(plac_meta)
forest(mort_nrsi_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Expanded  ",
  label.c = "Standard  ",
  rightcols = c("effect", "ci", "surgs_single", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR", "(95% CI)  ", "Procedure", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  just.addcols.right = "right",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 2, 
  print.pval.Q = FALSE,
  xlim = c(0.1, 10),
  xlab = "Favors: Expanded                         Standard        ",
  addrows.below.overall = 4
)
```
<foot_mg> RR: risk ratio;D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable.</foot_mg> 

<br/>

<font size = 4> `r figure_ref()` Risk ratio for 1-year mortality (expanded preoperative evaluation versus standard; nonrandomized designs). </font>

```{r mort_nrsi_1yr_meta, fig.dim = c(14, 3.8), fig.align = "center"}
mort_meta_dat <- pairwise_nrsi_mort_1yr_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(robinsi_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  select(study, year, event2, n2, event1, n1, surgs_single, D1:Overall, mort_period, refid)

# total_meta(mort_meta_dat)
# refid_meta_fun(mort_meta_dat)

mort_nrsi_1yr_meta <- metabin(event2, n2, event1, n1,
  data = mort_meta_dat,
  studlab = study,
  # cluster = refid,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = FALSE,
  allstudies = TRUE,
)

# summary(plac_meta)
forest(mort_nrsi_1yr_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Expanded  ",
  label.c = "Standard  ",
  rightcols = c("effect", "ci", "surgs_single", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR", "(95% CI)  ", "Procedure", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  just.addcols.right = "right",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 2, 
  print.pval.Q = FALSE,
  xlim = c(0.1, 10),
  xlab = "Favors: Expanded                         Standard        ",
  addrows.below.overall = 4
)
```
<foot_mg> RR: risk ratio;D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable.</foot_mg> 


## **Risk of Bias**

### Randomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for randomized clinical trials (expanded preoperative evaluation). </font>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_dat |>
  filter(!is.na(Study) & refid %in% kq1_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind", weighted = FALSE)
```

<font size = 4> `r figure_ref()` Risk of bias assessments for randomized clinical trials (expanded preoperative evaluation). </font>

```{r rob_overall_study, out.width = "55%", fig.height = 4.2}
rob_traffic_light(rob_temp_dat, psize = 4, tool = "ROB2", colour = "colourblind")
```

### Nonrandomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for nonrandomized studies (expanded preoperative evaluation). </font>

```{r nrsi_summary_overall, fig.height = 3, out.width = "60%"}
robinsi_temp_dat <- robinsi_dat |>
  filter(!is.na(Study) & refid %in% kq1_refid) |> 
  select(-refid)

rob_summary(robinsi_temp_dat, tool = "ROBINS-I", colour = "colourblind", weighted = FALSE)
```

<font size = 4> `r figure_ref()` Risk of bias assessments for nonrandomized studies (expanded preoperative evaluation). </font>

```{r nrsi_overall_study, out.width = "55%", fig.height = 6.1}
rob_traffic_light(robinsi_temp_dat, psize = 4, tool = "ROBINS-I", colour = "colourblind")
```


## **References** {#references}

