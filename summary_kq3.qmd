---
title: "Study/Patient Characteristics Neuraxial versus General Anesthesia"
date: "`r format(Sys.time(), '%d %B, %Y (%H:%M)')`"
editor: source
toc-title: "**Characteristics**"
toc-location: "left"
cap-location: "top"
toc-depth: 3
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
---

```{r read_data}
#| include: false
source("code/load_data.R")

# exclude linked references
linked_publications <- linked_refids |> 
  filter(refid %in% kq3_refid) |> 
  filter(!is.na(refid_to_link_to)) |> 
  pull(refid)

kq3_refid <- kq3_refid[!kq3_refid %in% linked_publications] # 2024-03-11 n = 38

study_char_dat <- data_kq(study_char_dat, kq3_refid)

# ortho only hip fx ortho_hipfx_only_refid
ortho_hipfx_only_refid <- ortho_proc |> 
  filter(ortho == "HipFx") |> 
  pull(refid)

## VARIABLE: kq3_anesth_neur, kq3_anesth_reg, kq3_anesth_gen, kq3_anesth_neur_type, kq3_anesth_gen_type â€” anesthetic and type, no specifics recorded for regional
study_arm_dat <- data_kq(study_arm_dat, kq3_refid) |>
  # exclude Bielka 2021 arm 3 (block)
  filter(!(study == "Bielka 2021" & arm_id == 3)) |> 
  # delete anesthetic variables not relevant (avoid potential confusion)
  select(-c(inhalation:anes_ns)) |>
  mutate(arm = arm_kq3_reg_gen) |>
  relocate(arm, .before = arm_kq3_reg_gen) |>
  mutate(
    kq3_anesth_neur = ifelse(if_any(c(kq3_reg_spinal, kq3_reg_epidural, kq3_reg_cse), ~ !is.na(.x)), "Neuraxial", NA),
    kq3_anesth_gen = ifelse(!is.na(kq3_gen_type), "General", NA),
    kq3_anesth_neur_type =
      case_when(
        !is.na(kq3_reg_spinal) ~ "Spinal",
        !is.na(kq3_reg_epidural) ~ "Epidural",
        !is.na(kq3_reg_cse) ~ "CSE"
      ),
    kq3_anesth_gen_type = kq3_gen_type,
    arm = factor(arm, levels = c("general", "regional"), labels = c("Gen", "Neur"))
  ) |>
  relocate(kq3_anesth_neur:kq3_anesth_gen_type, .before = kq3_gen_type)

# get refids to include so that linked studies are not double counted
no_linked_refids <- study_char_dat |> 
  group_by(linked_references_all_refid) |>
  filter(n_enroll == max(n_enroll)) |>
  slice(1) |> 
  pull(refid)

```

### Trial Characteristics 

<font size = 4> `r table_ref()` Characteristics of included randomized clinical trials. </font>

```{r study_char_rct}
study_char_tab <- study_char_dat |> 
  filter(refid %in% kq3_refid) |> 
  filter(design == "rct") |> 
  mutate(
    low_r = if_else(non_vh_hdi == "yes", 1, 0, missing = 0),
    pilot = if_else(pilot == "yes", 1, 0, missing = 0),
    ambulatory = !is.na(ambulatory),
    one_center = centers == 1,
    multi_center = centers > 1,
    general = !is.na(general),
    regional = !is.na(regional),
    sedation = !is.na(sedation),
    non_vh_hdi = ifelse(is.na(non_vh_hdi), 0, 1),
    funding = case_when(
      funding == "industry" ~ "Industry",
      funding == "pub_indus" ~ "Public and industry",
      funding == "public" ~ "Public",
      funding == "NR" ~ "Not reported",
      TRUE ~ "Other"
    ),
    author_coi = author_coi == "author_coi",
    registered = if_else(registered == "yes", TRUE, FALSE, missing = FALSE),
    across(c(ambulatory, one_center, multi_center, general, regional, sedation, registered, author_coi), ~ .x * 1)
  ) |> 
  select(refid, study, country, low_r, non_vh_hdi, pilot, ambulatory, centers, funding, registered, n_enroll, arms, author_coi) 

study_char_gt <- study_char_tab |>
  select(n_enroll, arms, pilot, ambulatory, centers, country, non_vh_hdi, funding, author_coi, registered) |>
  tbl_summary(
    label = list(
      n_enroll = "Patients enrolled",
      arms = "Arms",
      pilot = "Pilot study",
      ambulatory = "Ambulatory",
      centers = "Centers",
      country = "Country",
      non_vh_hdi = "Low resource country",
      funding = "Funding",
      author_coi = "Author conflict of interest",
      registered = "Registered"
    ),
    digits = list(
      n_enroll ~ 0
    ),
    type = list(
      n_enroll ~ "continuous",
      arms ~ "categorical"
    ),
    statistic = list(
    # calculate percentages including missing values in the denominator
      n_enroll ~ "{mean} [<u>{median}</u>] ({min} - {max})",
      arms ~ "{n} ({p})"
    ),
    missing_text = "Not reported",
    sort = list(everything() ~ "frequency")
  ) |>
  as_gt(id = "one") |>
  fmt_markdown(stat_0) |>
  cols_width(
    5 ~ px(320),
    6 ~ px(140)
  ) |> 
  gt_theme_mg()

study_char_gt

```

### Surgical Procedures

<font size = 4> `r table_ref()` Surgical procedures performed. </font>

```{r surg_rct}

# number of hipfx only trials
n_hip_only <- ortho_proc |>
  filter(refid %in% kq3_refid) |>
  filter(ortho == "HipFx") |> 
  summarize(n = n_distinct(refid)) 

surg_tab <- surgs |>
  filter(refid %in% study_char_tab$refid) |> # only kq4 rcts
  select(refid, surgs) |>
  tabyl(surgs) |> # summarise(total = sum(n))
  arrange(desc(percent)) |>
  rename(per = percent) |>
  mutate(
    per = paste0("(", format(round(100 * per, 1), nsmall = 1), ")"),
    per = str_replace(per, " ", ""),
    n = as.character(n),
    n_per = paste(n, per)
  ) |>
  select(surgs, n_per) |>
  rename(result = n_per, characteristic = surgs)

surgs_gt <- surgs |>
  filter(refid %in% study_char_tab$refid) |> # only kq4 rcts
  select(surgs) |> 
  tbl_summary(
    label = list(
      surgs = "Procedure(s)"
    ),
    statistic = list(
      surgs ~ "{n} ({p})"
    ),
    type = list(
      surgs ~ "categorical"
    ),
    missing_text = "Not reported",
    sort = list(everything() ~ "frequency")
  ) |>
  as_gt(id = "one") |>
  gt_theme_mg() |>
  cols_width(
    5 ~ px(320),
    6 ~ px(100)
  ) |> 
  tab_footnote("If reported as various/mixed or included more than 4 types of procedures.",  locations = cells_body(columns = label, rows = label == "Various"), placement = "right") |> 
  tab_footnote(paste0("Hip fracture only in ", n_hip_only, "."), locations = cells_body(columns = label, rows = label == "Ortho"), placement = "right") 

surgs_gt

```

### Patient Charcteristics

<font size = 4> `r table_ref()` Patient characteristics in randomized clinical trials. </font>

```{r pt_rct}
asa_class <- asa_combine |>
  mutate(asa = str_trim(asa_ps_incl)) |>
  select(refid, asa) |> 
  slice(1, .by = "refid")

# summaries for individual studies combining arms
pt_char_tab <- study_arm_dat |>
  filter(refid %in% study_char_tab$refid) |> # only kq3 rcts
  mutate(
    wgt = arm_n / sum(arm_n, na.rm = TRUE),
    N = sum(arm_n),
    .by = refid
  ) |> 
  group_by(refid) |>
  summarize(
    across(
      c(
        age_mean,
        age_med,
        female_perc,
        white,
        black,
        asian,
        bmi_m,
        bmi_med,
        pre_mmse_m,
        pre_mmse_med,
        # living_independent,
        # living_dependent,
        # housing_home,
        # housing_assisted,
        cog_imp,
        # malnourish,
        dm,
        cardiac,
        # cancer,
        # ortho,
        # gi,
        # neuro,
        # pulm,
        # endo,
        # renal,
        # hepatic
      ),
      ~ pt_sum(.x, wgt)
    ),
    N = sum(arm_n)
  ) |>
  mutate(
    age_mean_med = coalesce(age_mean, age_med),
    bmi_mean_med = coalesce(bmi_m, bmi_med),
    pre_mmse_mean_med = coalesce(pre_mmse_m, pre_mmse_med),
  ) |>
  select(-c(bmi_m, bmi_med, pre_mmse_m, pre_mmse_med, age_mean, age_med)) |>
  left_join(asa_class, by = "refid")

pt_char_gt <- pt_char_tab |>
  select(age_mean_med, bmi_mean_med, female_perc, asa, white, black, asian, cog_imp, pre_mmse_mean_med, dm, cardiac) |>
  mutate(
    asian = ifelse(asian == 100, "100%", NA),
    asa = ifelse(asa == "NR", NA, asa),
  ) |> 
  tbl_summary(
    label = list(
      age_mean_med = "Age (mean or median)",
      bmi_mean_med = "BMI (mean or median)",
      female_perc = "Female (%)",
      asa = "ASA Physical Status",
      white = "White (%)",
      black = "Black (%)",
      asian = "Asian",
      cog_imp = "Dementia (%)",
      pre_mmse_mean_med = "Preoperative MMSE (mean or median)",
      dm = "Diabetes (%)",
      cardiac = "Cardiac (%)"
    ),
    digits = list(
      age_mean_med ~ 1,
      bmi_mean_med ~ 1,
      female_perc ~ 1,
      asa ~ 1,
      white ~ 1,
      black ~ 1,
      asian ~ 0,
      pre_mmse_mean_med ~ 1,
      dm ~ 1,
      cardiac ~ 1
    ),
    statistic = list(
      age_mean_med ~ "{mean} [<u>{median}</u>] ({min} - {max})",
      bmi_mean_med ~ "{median} ({min} - {max})",
      female_perc ~ "{median} ({min} - {max})",
      asa ~ "{n} ({p}%)",
      white ~ "{median} ({min} - {max})",
      black ~ "{median} ({min} - {max})",
      asian ~ "{n}",
      cog_imp ~ "{median} ({min} - {max})",
      pre_mmse_mean_med ~ "{median} ({min} - {max})",
      dm ~ "{median} ({min} - {max})",
      cardiac ~ "{median} ({min} - {max})"
    ),
    type = list(
      age_mean_med ~ "continuous",
      bmi_mean_med ~ "continuous",
      female_perc ~ "continuous",
      asa ~ "categorical",
      white ~ "continuous",
      black ~ "continuous",
      asian ~ "categorical",
      cog_imp ~ "continuous",
      pre_mmse_mean_med ~ "continuous",
      dm ~ "continuous",
      cardiac ~ "continuous"
    ),
    missing_text = "Not reported"
  ) |>
  as_gt(id = "one") |> 
  fmt_markdown(stat_0) |>
    cols_width(
    5 ~ px(320),
    6 ~ px(140)
  ) |> 
  gt_theme_mg() |> 
  tab_footnote("Shin 2020, Li 2022, and Neuman 2021 included patients with dementia.", locations = cells_body(columns = label, rows = label == "Dementia (%)"), placement = "right") 

pt_char_gt
# gtsave(pt_char_gt, "/Users/mgrant/Documents/_projects01/asa/_geriatric/geriatrics_synth/@@/summary_docx/kq3_pt_char.png")

```

## Outcomes

### Primary

<font size = 4> `r table_ref()` Primary outcomes. </font>

```{r outcome_prim_sec}
#| echo: false

other_foot <- study_char_dat |> 
  select(out_other_detail) |> 
  filter(!is.na(out_other_detail)) |> 
  mutate(
    out_other_detail = firstup(out_other_detail),
    out_other_detail = str_replace_all(out_other_detail, "acceptibility", "[A]cceptibility"),
    out_other_detail = str_replace_all(out_other_detail, ";$", ""),
    out_other_detail = str_replace_all(out_other_detail, "$", "\\."),
    out_other_detail = paste0(out_other_detail, "<br/>TT"),
    out_other_detail = str_replace_all(out_other_detail, "; B", "; b"),
    out_other_detail = str_replace_all(out_other_detail, "; H", "; h"),
    out_other_detail = str_replace_all(out_other_detail, "homo", "hemo"),
  ) |> 
  pull(out_other_detail) |> 
  toString()

other_foot <- gsub("TT,|TT", "", other_foot)

study_char_dat |> 
  group_by(linked_references_all_refid) |>
  filter(n_enroll == max(n_enroll)) |>
  slice(1) |> 
  ungroup() |>
  select(design_f_abbrev, starts_with("prim_")) |>
  remove_empty(which = "cols") |>
  mutate(across(starts_with("prim"), ~ !is.na(.x))) |>
  rename(
    "Postoperative delirium" = prim_delirium,
    "Delayed neurocognitive recovery" = prim_pocd,
    # "Stroke" = prim_stroke,
    # "Intraoperative awareness" = prim_aware,
    # "Quality of recovery" = prim_recovery,
    "Depression" = prim_depress,
    "Patient/caregiver satisfaction" = prim_satis,
    # "Valued life activities" = prim_val_life,
    "Functional status (ADL, IADL, mobility)" = prim_function,
    # "HRQoL" = prim_qol,
    "Pain" = prim_pain,
    "Opioid use" = prim_opioid,
    "Complications" = prim_compl,
    "Length of stay" = prim_los,
    # "Discharge location" = prim_dc_loc,
    # "Readmission" = prim_readmit,
    "Mortality (30-, 180-, 365-day)" = prim_mort,
    "Other" = prim_oth
  ) |>
    arrange(design_f_abbrev) |>
    mutate(
      design_f_abbrev = fct_drop(design_f_abbrev)
    ) |>
    group_by(design_f_abbrev) |>
    tbl_summary(
      by = design_f_abbrev,
      missing = "no"
    ) |> 
    modify_header(label = "**Outcome**") |>
    # modify_footnote(update = everything() ~ NA) |>
    as_gt(id = "one") |> 
    cols_width(
      label          ~ px(350),
      stat_1         ~ px(90),
    ) |> 
    gt_theme_mg() |>
    sub_values(values = c("0 (0%)"), replacement = "â€”") |> 
    tab_footnote(md(other_foot), locations = cells_body(columns = c(stat_1), rows = label == "Other")) 

```

### Secondary

<font size = 4> `r table_ref()` Secondary outcomes. </font>

```{r outcome_sec}
#| echo: false

other_foot <- study_char_dat |> 
  select(sec_oth_specify) |> 
  filter(!is.na(sec_oth_specify)) |> 
  mutate(
    sec_oth_specify = firstup(sec_oth_specify),
    sec_oth_specify = str_replace_all(sec_oth_specify, "acceptibility", "[A]cceptibility"),
    sec_oth_specify = str_replace_all(sec_oth_specify, ";$", ""),
    sec_oth_specify = str_replace_all(sec_oth_specify, "$", "\\."),
    sec_oth_specify = paste0(sec_oth_specify, "<br/>TT"),
    sec_oth_specify = str_replace_all(sec_oth_specify, "; B", "; b"),
    sec_oth_specify = str_replace_all(sec_oth_specify, "; H", "; h"),
    sec_oth_specify = str_replace_all(sec_oth_specify, "homo", "hemo"),
  ) |> 
  pull(sec_oth_specify) |> 
  toString()

other_foot <- gsub("TT,|TT", "", other_foot)

study_char_dat |> 
  group_by(linked_references_all_refid) |>
  filter(n_enroll == max(n_enroll)) |>
  slice(1) |> 
  ungroup() |>
  select(design_f_abbrev, starts_with("sec_")) |>
  select(!starts_with("sec_oth_")) |> 
  remove_empty(which = "cols") |>
  mutate(across(starts_with("sec"), ~ !is.na(.x))) |> # names() -> temp
  rename(
    "Postoperative delirium" = sec_delirium,
    "Delayed neurocognitive recovery" = sec_pocd,
    # "Stroke" = sec_stroke,
    # "Intraoperative awareness" = sec_aware,
    # "Quality of recovery" = sec_recovery,
    # "Depression" = sec_depress,
    "Patient/caregiver satisfaction" = sec_satisfac,
    # "Valued life activities" = sec_val_life,
    "Functional status (ADL, IADL, mobility)" = sec_function,
    "HRQoL" = sec_qol,
    "Pain" = sec_pain,
    "Opioid use" = sec_opioid,
    "Complications" = sec_compl,
    "Length of stay" = sec_los,
    # "Discharge location" = sec_dc_loc,
    "Readmission" = sec_readmit,
    "Mortality (30-, 180-, 365-day)" = sec_mort,
    "Other" = sec_other
  ) |>
    arrange(design_f_abbrev) |>
    mutate(
      design_f_abbrev = fct_drop(design_f_abbrev)
    ) |>
    group_by(design_f_abbrev) |>
    tbl_summary(
      by = design_f_abbrev,
      missing = "no"
    ) |> 
    modify_header(label = "**Outcome**") |>
    # modify_footnote(update = everything() ~ NA) |>
    as_gt(id = "one") |> 
    cols_width(
      label          ~ px(350),
      stat_1         ~ px(90),
    ) |> 
    gt_theme_mg() |>
    sub_values(values = c("0 (0%)"), replacement = "â€”") |> 
    tab_footnote(md(other_foot), locations = cells_body(columns = c(stat_1), rows = label == "Other")) 

```

### Other

<font size = 4> `r table_ref()` Outcomes not specified as primary or secondary. </font>

```{r outcome_other}
#| echo: false

# other_foot <- study_char_dat |> 
#   select(sec_oth_other) |> 
#   filter(!is.na(sec_oth_other)) |> 
#   mutate(
#     oth_out_specify = firstup(sec_oth_other),
#     sec_oth_other = str_replace_all(sec_oth_other, "acceptibility", "[A]cceptibility"),
#     sec_oth_other = str_replace_all(sec_oth_other, ";$", ""),
#     sec_oth_other = str_replace_all(sec_oth_other, "$", "\\."),
#     sec_oth_other = paste0(sec_oth_other, "<br/>TT"),
#     sec_oth_other = str_replace_all(sec_oth_other, "; B", "; b"),
#     sec_oth_other = str_replace_all(sec_oth_other, "; H", "; h"),
#     sec_oth_other = str_replace_all(sec_oth_other, "homo", "hemo"),
#   ) |> 
#   pull(sec_oth_other) |> 
#   toString()
# 
# other_foot <- gsub("TT,|TT", "", other_foot)

study_char_dat |> 
  group_by(linked_references_all_refid) |>
  filter(n_enroll == max(n_enroll)) |>
  slice(1) |> 
  ungroup() |>
  select(design_f_abbrev, starts_with("sec_oth_"), -sec_oth_specify) |> # sec_oth_specify is for secondaty
  remove_empty(which = "cols") |>
  mutate(across(starts_with("sec_oth_"), ~ !is.na(.x))) |> # names() -> temp
  rename(
    "Postoperative delirium" = sec_oth_delirium,
    "Delayed neurocognitive recovery" = sec_oth_pocd,
    # "Stroke" = sec_oth_stroke,
    # "Intraoperative awareness" = sec_oth_aware,
    # "Quality of recovery" = sec_oth_recovery,
    "Depression" = sec_oth_depress,
    "Patient/caregiver satisfaction" = sec_oth_satisfac,
    # "Valued life activities" = sec_oth_val_life,
    # "Functional status (ADL, IADL, mobility)" = sec_oth_function,
    # "HRQoL" = sec_oth_qol,
    "Pain" = sec_oth_pain,
    "Opioid use" = sec_oth_opioid,
    "Complications" = sec_oth_compl,
    "Length of stay" = sec_oth_los,
    # "Discharge location" = sec_oth_dc_loc,
    # "Readmission" = sec_oth_readmit,
    # "Mortality (30-, 180-, 365-day)" = sec_oth_mort,
    # "Other" = sec_oth_other
  ) |>
    arrange(design_f_abbrev) |>
    mutate(
      design_f_abbrev = fct_drop(design_f_abbrev)
    ) |>
    group_by(design_f_abbrev) |>
    tbl_summary(
      by = design_f_abbrev,
      missing = "no"
    ) |> 
    modify_header(label = "**Outcome**") |>
    # modify_footnote(update = everything() ~ NA) |>
    as_gt(id = "one") |> 
    cols_width(
      label          ~ px(350),
      stat_1         ~ px(90),
    ) |> 
    gt_theme_mg() 
    # sub_values(values = c("0 (0%)"), replacement = "â€”") |> 
    # tab_footnote(md(other_foot), locations = cells_body(columns = c(stat_1), rows = label == "Other"))

```

