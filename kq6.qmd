---
title: "Delirium Prophylaxis"
editor: source
toc-title: "Delirium Prophylaxis"
toc-location: "left"
toc-depth: 4
toc_float: 
  collapsed: false
tbl-cap-location: "top"
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq6.bib"
csl: jama.csl
link-citations: false
nocite: '@*'
---

<!-- kq6.bib updated 2023-02-21 -->

## **Key Question**

Among older patients undergoing surgery and anesthesia, do dexmedetomidine, ketamine, ramelteon, or melatonin administered during the perioperative period decrease the risk of postoperative delirium or other adverse cognitive outcomes?

::: {.callout-note collapse="true" appearance="default" icon="true"}
## DRAFT results last updated `r lubridate::now()`

2023-04-13 mortality and length of stay added 

2023-04-11 delirium incidence completed with updated GRADE and risk of bias assessment conflicts adjudicated

2023-04-09 added studies from search update 2023-03-17; sensitivity analysis by risk of bias appraisals for delirium

2023-03-21 added sensitivity analysis according to delirium incidence proportion approximated by maximum daily incidence where incidence proportion was not reported

2023-03-19 updated dexmedetomidine and melatonin/ramelteon results with 3 additional studies reporting daily, but not overall, incidence proportion
:::

```{r read_data}
#| include: false
# CODE: * read data
# FIXME: ? delete 13734 
# FIXME: revise with purrr
source("code/load_data.R")
settings.meta(CIbracket = "(")
# load("data/geri_data_2023-03-13.Rdata")
kq6_refid <- kq6_refid[!kq6_refid %in% 13734] # Fan 2017b rhythim 
study_char_dat <- data_kq(study_char_dat, kq6_refid) 
study_arm_dat <- data_kq(study_arm_dat, kq6_refid) 
contin_dat <- data_kq(contin_dat, kq6_refid) 
likert_dat <- data_kq(likert_dat, kq6_refid) 
# VARIABLE: delirium_inc_prop <lgl> [dichot_dat] reported incidence proportion
# VARIABLE: neurocog_inc_prop <lgl> [dichot_dat] reported incidence proportion
# VARIABLE: delirium_day_max <num> [dichot_dat] max of daily 
# VARIABLE: neurocog_day_max <num> [dichot_dat] max of daily 

dichot_dat <- data_kq(dichot_dat, kq6_refid) |>
  mutate(
    delirium_inc_prop = !is.na(delitotal_n), 
    delirium_day_max = pmax(delirium_n1, delirium_n2, delirium_n3, delilast_n, na.rm = TRUE),
    delitotal_n = ifelse(is.na(delitotal_n), delirium_day_max, delitotal_n),
  ) |> 
  relocate(delirium_day_max, .after = delitotal_n) 
  
# rob_dat <- data_kq(rob_dat, kq6_refid) 
```

```{r delirium_refids_check}
#| eval = FALSE
# any of delirium_dichot_refid, delirium_contin_refid, delirium_likert_refid 
kq6_refid %in% delirium_refid
kq6_refid %in% cogfunc_refid
kq6_refid[!kq6_refid %in% c(delirium_refid, cogfunc_refid)]
```

## **Outcome Importance Rankings**

<font size = 4> `r table_ref()`</font> Rankings for the 5 most important outcomes (11 respondents).

```{r outcome_priority}
#| include: true
#| eval: true
# CODE: outcome priority rankings
# note also in appendix
outcome_dat <- rankings("KQ6")
outcome_tab(outcome_dat, 11)
```

### Reporting Frequency

<font size = 4> `r table_ref()` Dichotomous or count outcomes. </font>

```{r dichot_outcome_freq}
# CODE: reporting frequency tabulation
dichot_freq_fun(dichot_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

<font size = 4> `r table_ref()` Continuous outcomes. </font>

```{r cont_outcome_freq}
contin_freq_fun(contin_dat)
```

<font size = 4> `r table_ref()` Likert or ordinal outcomes. </font>

```{r likert_outcome_freq}
likert_freq_fun(likert_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

## **Included Studies**

<font size = 4> `r table_ref()` Number of studies by design. </font>

<!-- Number of studies by design ----------------------- (2022-12-28 10:44) @ --->

```{r studies_design}
# CODE: study design table â€” design and number; no duplicate counting
study_char_dat |>
  filter(refid %in% kq6_refid) |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(
    style = list(
      cell_fill(color = "#E4F3FE"),
      cell_text(weight = "bold"),
      cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))
    ),
    locations = cells_body(
      rows = design_f_lab == "Total"
    )
  ) |> 
  tab_style(
    style = list(
      cell_text(align = "left")),
      locations = cells_body(
        columns = design_f_lab
      )
    ) |> 
  tab_footnote("Counted randomized clinical trials with more than 1 publication only once (applied to 2 trials with 2 publications).")
```

### Design, centers, country, and surgery

<font size = 4> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </font>

<!-- design, enrollment, centers ... ------------------- (2022-12-28 10:44) @ --->

```{r drugs_by_arm}
#| label: design_contry_surg
#| tbl-cap: Study design, enrollment, centers, country, and surgery (see [References](#references) for citations).
#| message: false
# CODE: * drugs & recode drugs/comparators so that usable; "other" category recoded to comparator
# DATA: drugs_dat <- study_arm_dat include drug arm data; adds kq5/6 arms
## drugs; from kq6, add kq5 arm drugs ----------------- (2023-01-16 13:46) @----
# drugs for kq5 studies; needed to fill in "missings" for kq6 arms coded as kq5 arms
kq5_drug_by_arm <- read_csv("data/kq56_drug_by_arm.csv") |>
  rename(drug = drug_f) |> # arm drug
  mutate(drug = as.character(drug)) |> 
  select(refid, arm_id, drug, control_desc)

drugs_dat <- study_arm_dat |>
  # filter(refid %in% c(2598, 13171)) |> 
  select(refid, design_f_lab, study, study_l, study_l_w_linked, study_id, arm_id, arm_n, arm_kq6_proph_meds, kq6_control_desc:kq6_notes, multiple_kq) |>
  rename_with(~ str_replace(., "kq6_", ""), everything()) |>
  rename_with(~ str_replace(., "dex_", "dexmed_"), everything()) |>
  mutate(
    dexmed = ifelse(refid == 13171, NA, dexmed),
    drug = case_when(
      !is.na(dexmed) ~ dexmed,
      !is.na(ketamine) ~ ketamine,
      !is.na(melatonin) ~ melatonin,
      !is.na(ramelteon) ~ ramelteon,
      !is.na(ulinastatin) ~ ulinastatin, # all missing
      !is.na(none) ~ none
    ),
    drug = str_replace(drug, "kq6_", ""),
    drug = firstup(drug)
  ) |>
  relocate(drug, .after = arm_n) |>
  # update drug and control description for "kq5" arms
  left_join(kq5_drug_by_arm, by = c("refid", "arm_id")) |>
  mutate(
    drug = coalesce(drug.x, drug.y),
    control_desc = coalesce(control_desc.x, control_desc.y),
    control_desc = firstup(control_desc),
    arm_proph_meds = ifelse(is.na(arm_proph_meds), "kq5_arm", arm_proph_meds),
  ) |>
  select(-matches("\\.x|\\.y")) |>
  mutate(
  # FIXME: temporary fix for 13171
    drug = ifelse(refid == 13171 & arm_id == 1, "None", drug),
    drug_f = fct(drug,
      levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin", "Midazolam", "Oxazepam", "Haloperidol", "None", "Placebo", "Other")
    ),
    drug_f = fct_collapse(drug_f, "Control" = c("None", "Placebo", "Other"))
  ) |>
  group_by(refid) |>
  mutate(
    drug_study = case_when( # study drug
      if_any(drug_f, ~ . == "Dexmedetomidine") ~ "Dexmedetomidine",
      if_any(drug_f, ~ . == "Ketamine") ~ "Ketamine",
      if_any(drug_f, ~ . == "Melatonin") ~ "Melatonin",
      if_any(drug_f, ~ . == "Ramelteon") ~ "Ramelteon",
      if_any(drug_f, ~ . == "Ulinastatin") ~ "Ulinastatin"
      # TRUE ~ "MISSING" # NA_character_ for verification
    ),
    drug_study = fct(drug_study, levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin")),
    drug_recode = case_when(
      str_detect(other_spec, "Midazolam and propofol") ~ "Midazolam/propofol",
      str_detect(other_spec, "Midazolam and sevoflurane") ~ "Midazolam/sevoflurane",
      str_detect(other_spec, "[Mm]idazolam") ~ "Midazolam",
      str_detect(other_spec, "[Ss]ufentanil") ~ "Sufentanil",
      # str_detect(other_spec, "[Rr]hythim") ~ "Rhythim",
      str_detect(other_spec, "[Pp]ropofol") ~ "Propofol",
      str_detect(other_spec, "[Mm]orphine") ~ "Morphine",
      str_detect(other_spec, "[Pp]regabalin") ~ "Pregabalin",
      .default = drug
    ),
    drug_recode = ifelse(refid == 2748 & arm_id == 4, "Dexmedetomidine/Pregabalin", drug_recode),
    drug_recode = ifelse(refid == 13406 & arm_id == 3, "Dexmedetomidine/Ulinastatin", drug_recode),
    drug_recode = ifelse(refid == 13393 & arm_id == 1, "Dexmedetomidine/Ulinastatin", drug_recode),
    # FIXME: check Mahrose
    drug_recode = ifelse(refid == 13171 & arm_id == 2, "Melatonin/Dexmedetomidine", drug_recode),
    drug_recode = ifelse(refid == 13171 & arm_id == 1, "Dexmedetomidine", drug_recode),
    # HERE
    drug_recode = fct(drug_recode,
      levels = c("Dexmedetomidine", "Dexmedetomidine/Pregabalin", "Dexmedetomidine/Ulinastatin", "Ketamine", "Melatonin", "Melatonin/Dexmedetomidine","Ramelteon", "Ulinastatin", "Haloperidol", "Midazolam", "Oxazepam", "Midazolam/propofol", "Midazolam/sevoflurane", "Morphine", "Pregabalin", "Propofol", "Sufentanil", "Placebo", "None")
    ),
    drug_recode_abbr = fct_recode(drug_recode, Dex = "Dexmedetomidine", "Dex/Preg" = "Dexmedetomidine/Pregabalin", "Dex/Ulin" = "Dexmedetomidine/Ulinastatin", Ket = "Ketamine", Mel = "Melatonin", "Mel/Dex" = "Melatonin/Dexmedetomidine", Ram = "Ramelteon", Ulin = "Ulinastatin", Hal = "Haloperidol", Mid = "Midazolam", Oxaz = "Oxazepam", "Mid/Prop" = "Midazolam/propofol", "Mid/Sevo" = "Midazolam/sevoflurane", MS = "Morphine", Preg = "Pregabalin", Prop = "Propofol", Sufen = "Sufentanil", Plac = "Placebo"),
  ) |>
  ungroup() |>
  relocate(c(drug, drug_f, drug_recode, drug_recode_abbr, drug_study), .after = arm_id) |>
  relocate(c(other_spec, interv_desc, control_desc), .after = last_col()) |>
  arrange(refid, drug_study) |>
# FIXME: 2598  
  fill(drug_study) |>
  arrange(refid, arm_id)
```

```{r drug_tables}
#| eval = FALSE
# CODE: eval = FALSE; drug and drug_recode can save to desktop; working only 
drugs_dat |> tabyl(drug)
drugs_dat |> filter(drug == "Ulinastatin")
drugs_dat |> filter(is.na(drug))
drugs_dat |> tabyl(drug_recode)
drugs_dat |> tabyl(drug_recode_abbr)

drugs_dat |>
    labelled::set_variable_labels(
    drug_recode = "Drug(s)",
  ) |> 
  select(drug_recode) |>
  tbl_summary(
    # label = list(drug_recode ~ "Drug(s)")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |>
  gt_theme_mg()
  # as.data.frame() |> 
  # select(5:7) |> 
  # writexl::write_xlsx("/Users/mgrant/Desktop/temp.xlsx")

temp <- drugs_dat |> 
  select(refid, study, contains("drug"), other_spec, contains("_desc"))

writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")
writexl::write_xlsx(temp, "/Users/mgrant/Desktop/arm_comparator.xlsx")
```

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |> 
  select(refid, starts_with("design"), study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi, starts_with("surg")) |>
  # select(refid, study, starts_with("surg")) |> # compile surgeries
  rename_with(~ gsub("surg_", "", .x, fixed = TRUE)) |>
  mutate(across(various:other, ~ gsub("surg_", "", .x, fixed = TRUE)),
    ortho_any = ifelse(if_any(contains("ortho"), ~ !is.na(.x)), "ortho", NA),
    opth = ifelse(str_detect(other_desc, "[Cc]ataract") | !is.na(opth), "optho", opth),
    gi = ifelse(!is.na(colorectal) | !is.na(gi_other) | !is.na(abdominal), "GI/Abdominal", NA),
    across(c(various, cardiac, gyn, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other), ~ firstup(.x)),
  ) |>
  unite("surgs", various, cardiac, gyn, gi, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other, sep = "|", remove = FALSE, na.rm = TRUE) |>
  select(-c(various, abdominal, cardiac, colorectal, gyn, gi, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other, design_other, gi_other, starts_with("ortho"), list, other_desc, starts_with("hip"))) |>
  mutate(
    surgs = ifelse(str_count(surgs, "\\|") > 3, "Various", surgs)
  ) |>
  left_join(drugs_dat |> group_by(refid) |> slice(1) |> ungroup() |> select(refid, drug_study), by = "refid") |>
  # create new factor for table as gt not arranging properly
  mutate(
    drug_design = fct(paste0(drug_study, " - ", design_f_lab),
      levels = c(
        "Dexmedetomidine - Randomized Clinical Trial",
        "Dexmedetomidine - Nonrandomized Trial",
        "Ketamine - Randomized Clinical Trial",
        "Ketamine - Prospective Cohort",
        "Melatonin - Randomized Clinical Trial",
        "Ramelteon - Randomized Clinical Trial",
        "Ramelteon - Before-After/Time Series",
        "Ulinastatin - Randomized Clinical Trial"
      )
    )
  ) |>
  arrange(drug_design, surgs, study_l) |>
  select(refid, study_l, centers, n_enroll, country, drug_design, surgs, non_vh_hdi)
# 
# included_dat |>
#   mutate(drug_design = paste(drug_study, design_f_lab)) |>
#   filter(str_detect(drug_design, "NA"))
#   

included_dat |>
  group_by(drug_design) |>
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_hide(non_vh_hdi) |>
    fmt_markdown(columns = c(study_l)) |> 
  cols_width(
    refid ~ px(60),
    study_l ~ px(200),
    centers ~ px(60),
    n_enroll ~ px(60),
    country ~ px(100),
    surgs ~ px(220)
  ) |> 
  # opt_horizontal_padding(scale = 2) |>
  gt_theme_mg() |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c("refid"))) |> 
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote(footnote = md("Various indicates more than 4 different types of surgery."), locations = cells_column_labels(columns = surgs)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_column_labels(columns = country)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))) |>
  tab_footnote(footnote = "Studies examining drugs not directly relevant to recommendations but potentially relevant to the evidence space (eg, a connected network) were included.", 
locations = cells_row_groups(groups = )) |> 
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular.")


```

#### Country Summary

<font size = 4> `r table_ref()` Summary of studies by country where conducted. </font>

```{r country}
# CODE: table of countries
study_char_dat |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
  gt_theme_mg()

```

## **Interventions and Comparators**

#### Dexmedetomidine

<font size = 4> `r table_ref()` Selected characteristics, comparators, and dosing in dexmedetomidine trials. </font>

```{r dex_compare}
#| eval: true
# CODE: dexmedetomidine studies
# dexmedetomidine studies
dex_refid <- drugs_dat |> 
  filter(drug == "Dexmedetomidine") |> 
  pull(refid)

dex_by_arm <- drugs_dat |>
  filter(refid %in% dex_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(refid:arm_proph_meds, matches("^proph_|dexmed"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("dexmed_", "", .x, fixed = TRUE)) |>
  mutate(
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "â–‚")),
    maintain_range = ifelse(!is.na(maintain_low + maintain_up), paste0(maintain, " (", maintain_low, "â€“", maintain_up, ")"), maintain),
    maintain_range = str_replace(maintain_range, "NA ", ""),
    loading = ifelse(loading == "0", "", loading),
    loading = ifelse(loading == "1", "1.0", loading),
    # loading = ifelse(loading == "1000", "1.0", loading),
    loading = str_replace(loading, "-1$", "-1.0")
  ) |>
  arrange(year, refid, desc(drug)) |>
  rename(post = postop, ind = induct, intr = intra) |> 
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  mutate(dex_groups = paste0(surgs_single_f, " - ", design_f_lab))

dex_group_levels <- dex_by_arm |> 
  group_by(refid) |> 
  slice(1) |> 
  ungroup() |> 
  tabyl(dex_groups) |> 
  mutate(design = str_extract(dex_groups, "-.*$")) |> 
  arrange(desc(design), desc(n)) |> 
  pull(dex_groups)

dex_by_arm <- dex_by_arm |> 
  mutate(  
  dex_groups = factor(dex_groups, levels = dex_group_levels)) |> 
  select(refid, study, year, study_l, arm_n, drug_recode_abbr, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, loading, maintain_range, postdose, pre, ind, intr, post ,design_f_lab, dex_groups, surgs_single_f)

rm(dex_group_levels)
```

```{r dex_table}
#| echo = FALSE
# CODE: dexmedetomidine table 2023-02-21 draft; VERIFY NO
dex_by_arm |>
  arrange(dex_groups, year, study) |>
  group_by(study_l) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x)),
    volatile_tab = ifelse(refid == 328 & row_number() %in% c(2, 3), "âœ“", volatile_tab),
    tiva_tab = ifelse(refid == 328 & row_number() == 4, "âœ“", tiva_tab)
  ) |>
  ungroup() |>
  group_by(dex_groups) |>
  gt(id = "one") |> 
  cols_hide(c(year, study, refid, design_f_lab, surgs_single_f)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = md("Â Â PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    loading = "Load",
    maintain_range = md("Maint/hr"),
    postdose = md("Postop"),
    pre = "Pre",
    ind = "Ind",
    intr = "Intr",
    post = "Post"
    # drug_f = md("Comparator <br/> Detail")
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, ind, intr, post)) |>
  tab_spanner(label = "Dexmedetomidine mcg/kg", columns = c(loading, maintain_range, postdose), level = 1) |>
  # tab_spanner(label = "Maintenance/hr", columns = c(loading, maintain_range, postdose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:sedation_only_tab)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(age_table, pre_mmse, loading:postdose))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(loading, maintain_range, postdose))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_recode_abbr, study_l, pre:post))) |>
  tab_style(style = cell_text(font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(volatile_tab, regional_tab, sedation_only_tab,pre:post))) |>
  tab_style(style = cell_text(size = px(8)), locations = cells_column_labels(columns = c(tiva_tab))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode_abbr), rows = str_detect(drug_recode_abbr, "Dex"))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "â€”") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(30),
    tiva_tab ~ px(30),
    regional_tab ~ px(30),
    sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(90),
    loading ~ px(60),
    maintain_range ~ px(90),
    postdose ~ px(60),
    pre ~ px(30),
    ind ~ px(30),
    intr ~ px(30),
    post ~ px(35)
  ) |>
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Oralmax: oral and maxillofacial; Ophtho; ophthalmologic; Dex: Dexmedetomidine; Ulin: Ulinastatin; Hal: Haloperidol; Mid: Midazolam; Mid/Prop: Midazolam/propofol; Mid/Seve: Midazolam/sevoflurane; Preg: Pregabalin; Prop: Propofol; Plac; placebo; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Pre: preoperative; Ind: induction; Intr: intraoperative; Post(op): postoperative; â€”: unspecified.") |>
  tab_footnote("Maintenance range if reported in parentheses.", locations = cells_column_labels(columns = maintain_range)) |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote(md("Given as a single dose."), locations = cells_body(columns = maintain_range, rows = maintain_range %in% c("100", "200", "400")))
           
# gtsave("/Users/mgrant/Desktop/dex_arm_dose_table6.docx")
# |>  tab_info()
```

#### Ketamine

<font size = 4> `r table_ref()` Selected characteristics, comparators, and dosing in ketamine studies. </font>

```{r ket_compare}
#| eval: true
# CODE: ketamine studies
ket_refid <- drugs_dat |> 
  filter(drug == "Ketamine") |> 
  pull(refid)

# by arm
ket_by_arm <- drugs_dat |>
  filter(refid %in% ket_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(study, refid:arm_proph_meds, matches("^proph_|keta"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("ketamine_", "", .x, fixed = TRUE)) |>
  unite("time_admin", c(pre:unspec), sep = "|", na.rm = TRUE, remove = FALSE) |>
  mutate(
    time_admin = str_remove_all(time_admin, "proph_med_"),
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "\U2582")),
    drug = fct(drug, levels = c("Ketamine", "Haloperidol", "Placebo", "Other", "None")),
  ) |>
  relocate(time_admin, .after = arm_n) |>
  # dosing
  arrange(year, refid, desc(drug)) |>
  rename(post = postop, ind = induct, intr = intra) |> 
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
  mutate(ket_groups = paste0(surgs_single_f, " - ", design_f_lab))

ket_group_levels <- ket_by_arm |> 
  group_by(refid) |> 
  slice(1) |> 
  ungroup() |> 
  tabyl(ket_groups) |> 
  mutate(design = str_extract(ket_groups, "-.*$")) |> 
  arrange(desc(design), desc(n)) |> 
  pull(ket_groups)

ket_by_arm <- ket_by_arm |> 
  mutate(  
  ket_groups = factor(ket_groups, levels = ket_group_levels)) |> 
  select(study, year, refid, study_l, arm_n, drug, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose, dose_iv, pre, ind, intr, post, ket_groups)

rm(ket_group_levels)

# ket_by_arm |> tabyl(ket_groups)
```

```{r ket_table}
# CODE: ketamine table 2023-02-21  draft; VERIFY NO
ket_by_arm |> 
  arrange(ket_groups, year, study) |>
  group_by(refid) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x))) |> 
  ungroup() |>
  group_by(ket_groups) |>
  gt(id = "one") |>
  cols_hide(c(year, study, refid, ket_groups, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug = "Comparator",
    asa_ps_incl = md("Â Â PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("(mg/kg)"),
    dose_iv = md("Â Â (mg/kg)"),
    pre = "Pre",
    ind = "Ind",
    intr = "Intr",
    post = "Post"
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, ind, intr, post)) |>
  tab_spanner(label = "Maintenance", columns = c(dose_iv), level = 1) |>
  tab_spanner(label = "Dose", columns = c(dose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(dose, dose_iv))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug, dose, dose_iv, pre:post))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(pre:post))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug), rows = drug == "Ketamine")) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "â€”") |>
  # tab_row_group(label = "numbered", rows = 1:10) |> 
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    # sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(100),
    dose ~ px(80),
    dose_iv ~ px(100),
    pre ~ px(30),
    ind ~ px(30),
    intr ~ px(30),
    post ~ px(32)
  ) |>
  fmt_number(columns = dose, drop_trailing_zeros = TRUE, ) |>
# TODO: * fix ketamine footnote Bornemann and Tu  
  tab_footnote(footnote = md("S-Ketamine."), locations = cells_body(columns = drug, rows = refid %in% c(13184, 15285) & drug == "Ketamine")) |>
  tab_footnote(footnote = "Time administered not reported.", locations = cells_body(columns = pre, rows = arm_n == 38 & drug == "Ketamine")) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Plac; placebo; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Pre: preoperative; Ind: induction; Intr: intraoperative; Post: postoperative; â€”: unspecified.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) 

```

#### Melatonin/Ramelteon

```{r melatonin_ramelteon_compare}
#| eval: true
# CODE: melatonin ramelteon studies
mel_ram_refid <- drugs_dat |> 
  filter(drug %in% c("Melatonin", "Ramelteon")) |> 
  pull(refid)

# by arm
mel_ram_by_arm <- drugs_dat |>
  filter(refid %in% mel_ram_refid) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  select(refid:arm_proph_meds, matches("^proph_|mela|ramel"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename(post = postop) |> 
  unite("time_admin", c(pre:unspec), sep = "|", na.rm = TRUE, remove = FALSE) |> 
  mutate(
    time_admin = str_remove_all(time_admin, "proph_med_"),
    time_admin = str_remove_all(time_admin, "proph_med_"),
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "\U2582")),    
    dose = coalesce(melatonin_dose, ramelteon_dose),
    days = coalesce(as.character(melatonin_days), as.character(ramelteon_numberdoses)),
    dose = ifelse(!is.na(dose), paste0(dose, "mg Ã— ", days), dose),
   # to order drugs
   drug = fct(drug, levels = c("Melatonin", "Ramelteon", "Midazolam", "Oxazepam", "Placebo", "Other", "None"))
  ) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
    mutate(mel_ram_groups = paste0(surgs_single_f, " - ", design_f_lab)) |> 
  relocate(time_admin, .after = arm_n)

mel_ram_group_levels <- mel_ram_by_arm |> 
  group_by(refid) |> 
  slice(1) |> 
  ungroup() |> 
  tabyl(mel_ram_groups) |> 
  mutate(design = str_extract(mel_ram_groups, "-.*$")) |> 
  arrange(desc(design), desc(n)) |> 
  pull(mel_ram_groups)

mel_ram_by_arm <- mel_ram_by_arm |>
  mutate(
    mel_ram_groups = factor(mel_ram_groups, levels = mel_ram_group_levels)) |>
  select(study, year, refid, study_l, arm_n, drug, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose, pre, post, mel_ram_groups)

rm(mel_ram_group_levels)
```

<font size = 4> `r table_ref()` Selected characteristics, comparators, and dosing in Melatonin and ramelteon studies. </font>

```{r melatonin_ramelteon_table}
mel_ram_by_arm |>
  arrange(mel_ram_groups, year, study) |>
  group_by(refid) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x))) |> 
  ungroup() |>
  group_by(mel_ram_groups) |>
  gt(id = "one") |>
  # row_group_order(groups = c("Melatonin - Randomized Clinical Trial", "Ramelteon - Randomized Clinical Trial", "Ramelteon - Before-After/Time Series")) |>
  cols_hide(c(study, year, refid, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug = "Comparator",
    asa_ps_incl = md("Â Â PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("Dosing"),
    pre = "Pre",
    post = "Post"
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, post)) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug:post))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug, dose, pre, post))) |>
  tab_style(style = list(cell_text(color = "maroon")), locations = cells_body(columns = c(arm_n:drug), rows = drug %in% c("Melatonin", "Ramelteon"))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(pre, post))) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "â€”") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(100),
    dose ~ px(90),
    pre ~ px(30),
    post ~ px(32),
  ) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Pre: preoperative; Post: postoperative.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) 

```

## **Delirium Incidence**

```{r delirium_meta_data}
# CODE: delirium meta data munge; here to produce figure
# VARIABLE: postop_only <lgl> from study arm only post-op administration [postop_only_dat]
# study arm postop only
postop_only_dat <- study_arm_dat |> 
  select(refid, study, proph_med_pre, proph_med_induct, proph_med_intra, proph_med_postop) |> 
  # missing preop, induction, intraop
  filter(if_all(c(proph_med_pre, proph_med_induct, proph_med_intra), ~ is.na(.x))) |> 
  # not missing postop
  filter(!is.na(proph_med_postop)) |> 
  mutate(postop_only = TRUE) |> 
  select(refid, postop_only)

delirium_meta_dat <- dichot_dat |>
  filter(!is.na(delitotal_n)) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(postop_only_dat, by = "refid") |> 
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |> 
  select(refid, refid_c, arm_id, study, design_f_lab, country, surg_f, postop_only, arm, delitotal_n, arm_n, delitotal_perc, delirium_inc_prop) |>
  arrange(refid_c, arm_id) |>
  # collapse arms
  # group_by(refid) |>  filter(n() > 2) |>  ungroup() |> # verify collapsed arms; verified 2023-03-09
  mutate(
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    delitotal_n = case_when(
      study == "Lee 2018a" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), delitotal_n),
      study == "Avidan 2017" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Avidan 2017", c(2, 3), delitotal_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), delitotal_n),
      .default = delitotal_n
    ),
    arm_n = case_when(
      study == "Lee 2018a" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), arm_n),
      study == "Avidan 2017" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Avidan 2017", c(2, 3), arm_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), arm_n),
      .default = arm_n
    ),
    year = as.numeric(str_extract(study, "\\d{4}"))
  ) |>
  filter(!(study == "He 2018" & arm_id == 2)) |> 
  filter(!(study %in% c("Lee 2018a", "Avidan 2017") & arm_id == 3)) |>
  filter(!(study %in% c("Zhao 2020") & arm_id %in% c(3, 4))) |>
  filter(!(study %in% c("Lee 2018b") & arm_id %in% c(2, 4))) |> # remove pregabalin, pregabaline/dex arms
  filter(!(study %in% c("Hollinger 2021") & arm_id %in% c(2))) |> # remove haldol arm
  filter(!study == "Mahrose 2021") # compares different doses

# TODO: Compare calculated and reported percentages; verified 2023-04-08
# temp <- delirium_meta_dat |>
#   mutate(
#     calc_percent = delitotal_n / arm_n * 100,
#     diff = calc_percent - delitotal_perc
#   ) |>
#   select(refid, study, arm_id, arm, arm_n, delitotal_n, calc_percent, delitotal_perc, diff) |> 
#   # exclude collapsed arms
#   filter(!study %in% c("Lee 2018a", "Avidan 2017", "Zhao 2020")) |> 
#   filter(abs(diff) >= 0.05)
# 
# writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")

```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Delirium incidence by surgical category across all treatment arms in randomized clinical trials. </font>

```{r delirium_incidence_fig, out.width = "70%", out.height = "40%", fig.align = "left"}
#| warning: false
# CODE: boxplots delirium
par(mar = c(1, 1, 1, 1))
set.seed(1234)
# total to add
all_to_boxplot_dat <- delirium_meta_dat |>
  # filter(arm == "Plac/None") |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  mutate(deli_prop = delitotal_n / arm_n,
         surg_f = "Any") 

# placebo/none to add
plac_none_to_boxplot_dat <- delirium_meta_dat |>
  filter(arm == "Plac/None") |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  mutate(deli_prop = delitotal_n / arm_n,
         surg_f = "Plac/None") 

delirium_meta_dat |>
  # filter(arm == "Plac/None") |>
  filter(design_f_lab == "Randomized Clinical Trial") |>
  mutate(
    deli_prop = delitotal_n / arm_n
  ) |>
  bind_rows(all_to_boxplot_dat) |>
  bind_rows(plac_none_to_boxplot_dat) |>
  mutate(
        surg_f = fct_rev(factor(surg_f, levels = c("Ortho", "Cardiac", "GI/Abd", "Thoracic", "Oralmax", "Spine", "Various", "Any", "Plac/None")))
  ) |> 
  ggplot(aes(deli_prop, surg_f)) +
  geom_boxplot(width = 0.4, outlier.size = 1.3) +
  # geom_point(aes(color = arm)) +
  geom_jitter(size = 1.3, aes(color = arm)) +
  scale_colour_manual(values = c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#D4AC0D", "#a65628", "#946F33", "#273746")) +
  labs(y = "", x = "Incidence Proportion") +
  scale_x_continuous(limits = c(0, 1), labels = scales::percent) +
  theme(
    axis.text.x = element_text(size = 11),
    axis.text.y = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_blank()
  )
```
<foot_mg>Dex: dexmedetomidine; Ket: ketamine; Mel: melatonin; Ram: ramelteon; Oxaz: oxazepam; MS: morphine sulfate; Prop: propofol; Plac/None: placebo or no active comparator. </foot_mg> 

:::

### Dexmedetomidine

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in trials of dexmedetomidine. </font>

```{r delirium_total_dex_tab}
# CODE: delirium incidence dexmedetomidine
delirium_total_tab <- delirium_total_tab_fun(dex_refid) |> 
  left_join(dex_by_arm |> select(refid, dex_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = dex_groups) |> 
  mutate(delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time))

refid_max_of_days <- delirium_total_tab |> 
  filter(delitotal_time == "Note") |> 
  mutate(refid = as.numeric(refid)) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)
  
```

```{r delirium_total_dex_gt}
delirium_total_gt_fun("Dex") |>
  tab_footnote("RR: risk ratio; MMSE: Mini-Mental State Examination; Dex: Dexmedetomidine; Mid: Midazolam; Prop: Propofol; MS: Morphine; Preg: Pregabalin; Prop: Propofol; Rhyth: Rhythim; Plac: placebo;  DSM: Diagnostic and Statistical Manual of Mental Disorders; ICDSC: Intensive Care Delirium Screening Checklist; Psych: psychiatrist interview; NS; not specified.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates over patient hospital stay.", locations = cells_column_labels(columns = delitotal_time)) |>
  tab_footnote("Tool reported in the `Chinese Expert Consensus on the Prevention and Treatment of Postoperative Delirium in Elderly Patients.'", locations = cells_body(columns = scale_delirium, rows = scale_delirium == "Note")) |> 
  tab_footnote("Postoperative dexmedetomidine only.", locations = cells_body(columns = rr_ci, rows = refid %in% postop_only_dat$refid & rr_ci != "â€”")) |> 
  tab_footnote("Reported only daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = n_percent, rows = refid %in% refid_max_of_days)) |> 
  tab_footnote("Primary outcome was delirium on postoperative day 1 â€” OR 0.32 (95% CI, 0.10â€“0.83)", locations = cells_body(columns = study_l, rows = str_detect(study_l, "Qu 2023")))

rm(refid_max_of_days)
```

### Ketamine

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in ketamine studies. </font>

```{r delirium_total_ket_tab}
# CODE: delirium incidence ketamine
delirium_total_tab <- delirium_total_tab_fun(ket_refid) |> 
  left_join(ket_by_arm |> select(refid, ket_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = ket_groups)
```

```{r delirium_total_ket_gt}
delirium_total_gt_ket <- delirium_total_gt_fun("Ket")
# tab_info(delirium_total_gt_ket)
delirium_total_gt_ket |>
  tab_footnote("RR: risk ratio; Ket: ketamine; Plac: placebo; Prop: propofol; Hal: haloperidol; ICDSC: Intensive Care Delirium Screening Checklist;  CAM: Confusion Assessment Method.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence assessed. Stay indicates duration of hospital stay.", locations = cells_column_labels(columns = delitotal_time))
```

### Melatonin/Ramelteon

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in melatonin and ramelteon studies. </font>

```{r delirium_total_mel_ram_tab}
# CODE: delirium incidence melatonin ramelteon
delirium_total_tab <- delirium_total_tab_fun(mel_ram_refid) |> 
    left_join(mel_ram_by_arm |> select(refid, mel_ram_groups) |> distinct(), by = c("refid")) |> 
  mutate(scale_delirium = ifelse(refid == 3841, "CAM/DRS/DSM", scale_delirium)) |> 
  rename(compare_groups = mel_ram_groups) |> 
  mutate(delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time))

refid_max_of_days <- delirium_total_tab |> 
  filter(delitotal_time == "Note") |> 
  mutate(refid = as.numeric(refid)) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

```

```{r delirium_total_mel_ram_gt}
delirium_total_gt_mel_ram <- delirium_total_gt_fun("Mel|Ram") 

# tab_info(delirium_total_gt_mel_ram_gt)
delirium_total_gt_mel_ram |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "GI/Abd - Before-After/Time Series", "Thoracic - Before-After/Time Series")) |> 
  tab_footnote("RR: risk ratio; MMSE: Mini-Mental State Examination; Mel: melatonin; Ram: ramelteon; AMT: Abbreviated Mental Test; DRS: Delirium Rating Scale; DSM: Diagnostic and Statistical Manual of Mental Disorders; CAM: Confusion Assessment Method; ICDSC: Intensive Care Delirium Screening Checklist.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates over patient hospital stay.", locations = cells_column_labels(columns = delitotal_time)) |> 
  tab_footnote("Reported only daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = n_percent, rows = refid %in% refid_max_of_days))

rm(refid_max_of_days)
```

### *Pooled*

```{r nma_meta_dat}
#| eval: true
# CODE: * delirium meta data, pairwise and network (netmeta)
nma_rct_dat <- delirium_meta_dat |> 
  mutate(arm = fct_collapse(arm, "Benzo" = c("Oxaz", "Mid"))) |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  # filter(surg_f == "Cardiac") |> 
  # filter(postop_only == TRUE) |> 
  # filter(!country == "China")
  filter(str_detect(design_f_lab, "Random")) |> 
  mutate(across(c(arm, design_f_lab), ~ fct_drop(.x)))  

trts <- levels(nma_rct_dat$arm)

pairs_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = nma_rct_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_nma <- netmeta(
  pairs_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts,
  sm = "RR",
  reference.group = "Plac/None"
)

# pairwise for metabin
pairwise_dat <- pairs_dat |> 
  select(refid, studlab, treat1, treat2, event1, n1, event2, n2, country, surg_f, year, postop_only1, delirium_inc_prop) |> 
  rename(postop_only = postop_only1, study = studlab) |> 
  mutate(china_vs_other = ifelse(country == "China", "China", "Other countries")) |> 
  unite(to_select, treat1:treat2, sep = "|", remove = FALSE) |> 
  arrange(year, study)

# function to select subset pairwise data
# filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex"))

# combine ramelteon and melatonin
nma_rct_melram_dat <- nma_rct_dat |> 
  mutate(arm = fct_collapse(arm, "Mel/Ram" = c("Mel", "Ram")))

trts_melram <- levels(nma_rct_melram_dat$arm)

pairs_melram_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = nma_rct_melram_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_melram_nma <- netmeta(
  pairs_melram_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts_melram,
  sm = "RR",
  reference.group = "Plac/None"
)

```

#### Comparator Network

<font size = 4> `r figure_ref()` Randomized clinical trials and comparators reporting overall incidence of delirium. </font>

```{r delirium_nma_plot, warning = FALSE, fig.dim = c(6, 5), out.width = "50%", fig.align = "center"}
# ```{r delirium_nma_plot, fig.height = 8, fig.align = "left", warning = FALSE}
#| eval: true
# CODE: network plot
# FIXME: adjust offsets 
## Modify current setting for position of treatment labels
## (argument 'offset')
# tmp <- netgraph(net1)
# names(tmp)
# names(tmp$nodes)
# tmp$nodes$offset.x
# netgraph(net1, offset = cbind(tmp$nodes$offset.x, tmp$nodes$offset.y + 0.1))
# netgraph(net1, offset = cbind(tmp$nodes$offset.x + 0.1, tmp$nodes$offset.y))

par(mfrow = c(1, 1), mar = c(1, 1, 1, 1))

netgraph(netmeta_melram_nma,
  lwd = 4,
  plastic = FALSE,
  thickness = TRUE,
  points = TRUE,
  alpha.transparency = 2,
  col = "azure3",
  col.points = "#F39C12",
  number.of.studies = TRUE,
  # seq = trts_melram,
  rescale.pointsize = TRUE,
  # cex.points = c(1, 2, 3, 4, 5),
  # cex.points = node_size$n/40,
  cex.points = netmeta_melram_nma$n.trts,
  labels = paste0(trts, "\n(n=", round(n.trts), ")"),
  col.number.of.studies = "black",
  cex.number.of.studies = 1.2,
  col.highlight = "white",
  bg.number.of.studies = c("#FFFFFF"),
  offset = .02
)

```
<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin or ramelteon; Benz: benzodiazepine (midazolam or oxazepam); MS: Morphine sulfate; Plac/None: Placebo or no intervention; Prop: Propofol. </foot_mg>

<br/>

<!-- Dex: Dexmedetomidine; "Dex/Preg": Dexmedetomidine/Pregabalin; "Dex/Ulin": Dexmedetomidine/Ulinastatin; Ket: Ketamine; Mel: Melatonin; Ram: Ramelteon; Ulin: Ulinastatin; Hal: Haloperidol; Mid: Midazolam; "Mid/Prop": Midazolam/propofol; "Mid/Sevo": Midazolam/sevoflurane; MS: Morphine; Preg: Pregabalin; Prop: Propofol; Rhyth: Rhythim; Sufen: Sufentanil; Plac/None: Placebo or no comparator. -->

#### Dexmedetomidine

<font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention (randomized clinical trials). </font>

```{r nma_dat, fig.width = 14, fig.height = 8.5, fig.align = "left", warning = FALSE}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
dex_plac_refid <- pairwise_dat |> 
  filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex")) |> 
  pull(refid)

dex_meta_dat <- pairwise_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  filter(refid %in% dex_plac_refid) |>
  select(study, year, event2, n2, event1, n1, D1:Overall, china_vs_other, postop_only, delirium_inc_prop) |>
  mutate(
    postop_only = ifelse(!is.na(postop_only), "Only postop", "Includes other times"),
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "â€“" ~ "High"
    )
  )

# total_meta(dex_meta_dat)

dex_plac_meta <- metabin(event2, n2, event1, n1,
  data = dex_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE,
  )

# small study effects; here to have result of Harbord test
temp_meta <- dex_plac_meta
temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# summary(dex_plac_meta)
dex_meta_forest_fun <- function(data_meta, flag = FALSE) {
forest(data_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "DexÂ Â Â Â Â ",
  label.c = "Plac/NoneÂ Â ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  subgroup = flag,
  prediction.subgroup = flag,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: DexmedetomidineÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Placebo/None",
  addrows.below.overall = 4
)  
}

dex_meta_forest_fun(dex_plac_meta, flag = FALSE)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high â€“ . <a id="figure-4"></a><br/>
`r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> 
`r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, dex_plac_refid), "; a secondary outcome in ", prim_sec_out_fun(sec_delirium, dex_plac_refid), ".")`</foot_mg><br/>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` <a id="figure-china"></a> Dexmedetomidine compared with placebo or no intervention according to reporting incidence proportion (randomized clinical trials). </font>

```{r dex_meta_sens_incidence_prop, fig.width = 14, fig.height = 10.5, fig.align = "left"}
delirium_inc_pro_meta <- update(dex_plac_meta, subgroup = delirium_inc_prop)

dex_meta_forest_fun(delirium_inc_pro_meta, TRUE)

rm(delirium_inc_pro_meta)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high â€“ .  </foot_mg> 
::: 

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()`Dexmedetomidine compared with placebo or no intervention --- trials from China vs. other countries (randomized clinical trials). </font>

```{r nma_dat_china, fig.width = 14, fig.height = 10.5, fig.align = "left"}
china_meta <- update(dex_plac_meta, subgroup = china_vs_other)

temp_metareg <- update(china_meta, tau.common = TRUE, common = FALSE, method.random.ci = "HK")
temp_metareg <- metareg(temp_metareg)

dex_meta_forest_fun(china_meta, TRUE)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high â€“ . <br/>
`r paste0("Meta-regression (China vs. Other) IÂ² = ", digit0(temp_metareg$I2), "%.")`
`r rm(temp_metareg, china_meta)`
</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- postoperative administration only vs. other times (randomized clinical trials). </font>

```{r nma_dat_postop, fig.width = 14, fig.height = 10.5, fig.align = "left"}
dex_plac_meta_postop <- update(dex_plac_meta, subgroup = postop_only)

dex_meta_forest_fun(dex_plac_meta_postop, TRUE)

rm(dex_plac_meta_postop)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high â€“ .</foot_mg><a id="figure-7"></a>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention according to risk of bias appraisal (randomized clinical trials). </font>

```{r nma_dat_rob, fig.width = 14, fig.height = 11.7, fig.align = "left"}
rob_meta <- update(dex_plac_meta, subgroup = rob)

dex_meta_forest_fun(rob_meta, TRUE)

rm(rob_meta)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high â€“ . </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects --- funnel plot and limit meta-analysis. </font>

```{r dex_plac_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta, ylim = c(0.8, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

<foot_mg> Estimates (95% CI) from random effects models --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "â€“", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "â€“", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</font>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Summary risk of bias from randomized clinical trials of dexmedetomidine compared with placebo or no intervention. </font>

```{r rob2_summary_dex_plac, fig.height = 3, out.width = "60%"}
rob_summary_fun(cogfunc_refid)
```
:::

#### Ketamine

<font size = 4> `r figure_ref()` Ketamine compared with placebo (randomized clinical trials). </font>

```{r nma_ket_dat, fig.width = 14, fig.height = 3, fig.align = "left"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
# risk of bias
ket_plac_refid <- pairwise_dat |> 
  filter(str_detect(to_select, "Plac") & str_detect(to_select, "Ket")) |> 
  pull(refid)

ket_meta_dat <- pairwise_dat |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(refid %in% ket_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, china_vs_other)

ket_plac_meta <- metabin(event2, n2, event1, n1,
  data = ket_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  )

# summary(ket_plac_meta)
forest(ket_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Ketamine",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: KetamineÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Placebo",
  addrows.below.overall = 4
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```

<foot_mg> D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high â€“ . </foot_mg> <br/>

#### Melatonin/Ramelteon

<font size = 4> `r figure_ref()` Melatonin and ramelteon compared with placebo or no intervention (randomized clinical trials). </font>

```{r nma_mel_ram_dat, fig.width = 14, fig.height = 7.2, fig.align = "left"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
# risk of bias
mel_ram_plac_refid <- pairwise_dat |> 
  filter(treat2 %in% c("Mel", "Ram")) |> 
  filter(treat1 == "Plac/None") |> 
  pull(refid)

mel_ram_meta_dat <- pairwise_dat |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(refid %in% mel_ram_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, treat2, treat1) |> 
  filter(!treat2 == c("Benzo")) |> 
  filter(!treat1 == c("Benzo")) |> 
  mutate(mel_ram = ifelse(treat2 == "Mel", "Melatonin", "Ramelteon")) 

# total_meta(mel_ram_meta_dat)
# toString(mel_ram_plac_refid)

mel_ram_plac_meta <- metabin(event2, n2, event1, n1,
  data = mel_ram_meta_dat,
  studlab = study,
  # cluster = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = TRUE,
  allstudies = TRUE,
  subgroup = mel_ram
  )

# summary(mel_ram_plac_meta)
forest(mel_ram_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Mel/Ram",
  label.c = "Plac/None",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  text.subgroup.nohet = TRUE,
  xlim = c(0.1, 3),
  xlab = "Favors: Ram/MelÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Placebo",
  addrows.below.overall = 4
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```

<foot_mg> Mel: melatonin; Ram: ramelteon; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high â€“ .<br/>
`r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> 
`r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, mel_ram_plac_refid), ".")`</foot_mg><br/>
<a id="figure-13.-ramelteon-compared-with-placebo-before-after-studies."></a>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Melatonin or ramelteon compared with placebo or no intervention â€” small study effects. </font>

```{r mel_ram_plac_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta, ylim = c(1.2, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 7, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```
<foot_mg> Estimates (95% CI) from random effects models --- unadjusted OR `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "â€“", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "â€“", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</font>
:::

<font size = 4> `r figure_ref()` Ramelteon compared with placebo (before-after studies). </font>

```{r mel_ram_bef_after_meta, fig.width = 14, fig.height = 3, fig.align = "left"}
mel_ram_bef_aft_dat <- delirium_meta_dat |> 
  group_by(refid) |>
  filter(any(arm %in% c("Ram", "Mel"))) |>
  filter(design_f_lab == "Before-After/Time Series") |>
  ungroup()

pairwise_dat <- pairwise(
    treat = arm,
    event = delitotal_n,
    n = arm_n,
    studlab = study,
    data = mel_ram_bef_aft_dat,
    sm = "RR",
    keep.all.comparisons = TRUE
  ) |> 
  left_join(robinsi_meta_dat |> select(-Study), by = "refid") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, treat2, treat1) |> 
  mutate(treat2 = "Ramelteon",
         treat1 = "None") |> 
  group_by(study) |> 
  slice(1) |> 
  ungroup()
# TODO: after reconcile robins-i fix

mel_ram_bef_aft_meta <- metabin(event2, n2, event1, n1,
  data = pairwise_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE
)
  
forest(mel_ram_bef_aft_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Ramelteon",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = FALSE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  # colgap.forest.left = "10mm",
  # colgap.forest.right = "10mm",
  # colgap.left = "2mm",
  xlim = c(0.1, 2),  # at = c(0.1, 0.5, 1, c, ...),
  xlab = "Favors: RamelteonÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â None",
  addrows.below.overall = 4,
  text.addline1 = "Continuity correction of 0.5 in studies with zero cell frequencies."
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```

<foot_mg> D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable.</foot_mg>

#### All Comparators

<font size = 4> `r figure_ref()` Network meta-analysis of delirium incidence including all comparators.</font>

```{r nmaForest, fig.dim = c(6, 3.3), out.width = "45%", fig.align = "center"}
#| eval: true
# CODE: network meta results
# fig.width = 6, fig.height = 3.3, fig.align = "center"}
par(mar = c(1, 1, 1, 1))
forest(netmeta_melram_nma,
       xlab = "Risk Ratio")
       # xlim = c(.001, 2),
       # at = c(0.01, .1, 0.5, 1, 2))
```

<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin or Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>

<br/>

<font size = 4> `r table_ref()` League table of risk ratios and 95% confidence intervals from network meta-analysis (random effects model). Comparisons from direct evidence displayed in the upper diagonal; network comparisons shown on the lower diagonal. </font>

```{r leagueTable}
#| results: asis
nma_melram_league <- netleague(netmeta_melram_nma,
  digits = 2,
  common =  FALSE,
  # direct = FALSE,
  seq = trts_melram
)

as_tibble(nma_melram_league$random) |>
  mutate(
    across(V1:V7, ~ str_replace(.x, " \\(", "<br>\\(")),
    # across(V1:V8, ~ str_replace(.x, "\\]", "\\)")),
    across(V1:V7, ~ ifelse(.x == ".", "", .x))
  ) |>
  gt(id = "one") |>
  fmt_markdown(columns = everything()) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V1, rows = V1 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V2, rows = V2 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V3, rows = V3 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V4, rows = V4 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V5, rows = V5 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V6, rows = V6 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V7, rows = V7 %in% trts_melram)) |>
  # tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V8, rows = V8 %in% trts_melram)) |>
  rm_stubhead() |>
  gt_theme_mg() |>
  tab_options(column_labels.hidden = TRUE, table.font.size = px(14)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(V1:V7)) |>
  tab_footnote("Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin or Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator.")

# tab_info(temp)

```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Comparison adjusted funnel plot. </font>

```{r compare_adj_fun_delirium, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
par(mar = c(4, 4, 2, 1), bty = "n", xaxt = "s", yaxt = "s")
funnel(netmeta_melram_nma,
  order = trts_melram
)
```
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Comparison of direct and indirect evidence in network meta-analysis (node splitting forest plot). </font>

```{r, fig.height = 11, fig.width = 7, out.width = "60%", out.height = "60%", fig.align = 'center'}
netsplit(netmeta_melram_nma, order = trts_melram) %>%
  forest(.,
    xlab = "Risk Ratio",
    xlim = c(0.1, 10),
    leftcols = c("studlab", "k"),
    rightlabs = c("RR", "(95% CI)")
  )
```

<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin/Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>
:::

<br/>

## **Delayed NCR/NCD** 

```{r dncr_ncd_dat}
#| eval: false
# CODE: neurocog meta data munge; here to produce figure
# VARIABLE: postop_only <lgl> from study arm only post-op administration [postop_only_dat]

## ncd_dat -------------------------------------------- (2023-04-15 15:55) @----
ncd_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x > 30)) |> 
  # select(refid, study, arm_n, neurocog_update_arm_n, neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n, matches("neurocog.*time")) |> 
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    ncd_time = case_when(
      neurocog_time1 > 30 ~ neurocog_time1,
      neurocog_time2 > 30 ~ neurocog_time2,
      neurocog_time3 > 30 ~ neurocog_time3,
      neurocog_last_time > 30 ~ neurocog_last_time,
      neurocog_total_n > 30 ~ neurocog_total_time,
      .default = NA
    ),
   neurocog_total_n = case_when(
      neurocog_time1 > 30 ~ neurocog_n1,
      neurocog_time2 > 30 ~ neurocog_n2,
      neurocog_time3 > 30 ~ neurocog_n3,
      neurocog_last_time > 30 ~ neurocog_last_n,
      neurocog_total_time > 30 ~ neurocog_total_n
    )
  ) |> 
  # add drug (arm), country, surgery, postop only
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(postop_only_dat, by = "refid") |>
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |>
  select(refid, refid_c, arm_id, study, design_f_lab, country, surg_f, postop_only, arm, neurocog_total_n, arm_n,  ncd_time) |>
  arrange(refid_c, arm_id) |>
  mutate(
    year = as.numeric(str_extract(study, "\\d{4}")),
    # neurocog_inc_prop = ifelse(neurocog_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
  )

## dncr_dat ------------------------------------------- (2023-04-15 15:55) @----
dncr_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x <= 30)) |>
  # select(refid, study, arm_n, neurocog_update_arm_n, neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n, matches("neurocog.*time")) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    neurocog_n1 = ifelse(neurocog_time1 > 30, NA, neurocog_n1),
    neurocog_n2 = ifelse(neurocog_time2 > 30, NA, neurocog_n2),
    neurocog_n3 = ifelse(neurocog_time3 > 30, NA, neurocog_n3),
    neurocog_last_n = ifelse(neurocog_last_time > 30, NA, neurocog_last_n),
    neurocog_total_n = ifelse(neurocog_total_time > 30, NA, neurocog_total_n),
    neurocog_time1 = ifelse(neurocog_time1 > 30, NA, neurocog_time1),
    neurocog_time2 = ifelse(neurocog_time2 > 30, NA, neurocog_time2),
    neurocog_time3 = ifelse(neurocog_time3 > 30, NA, neurocog_time3),
    neurocog_last_time = ifelse(neurocog_last_time > 30, NA, neurocog_last_time),
    neurocog_total_time = ifelse(neurocog_total_time > 30, NA, neurocog_total_time),
    dncr_time = pmax(neurocog_time1, neurocog_time2, neurocog_time3, neurocog_last_time, neurocog_total_time, na.rm = TRUE),
    neurocog_total_n = case_when(
      neurocog_time1 == dncr_time ~ neurocog_n1,
      neurocog_time2 == dncr_time ~ neurocog_n2,
      neurocog_time3 == dncr_time ~ neurocog_n3,
      neurocog_last_time == dncr_time ~ neurocog_last_n,
      neurocog_total_time == dncr_time ~ neurocog_total_n
    )
  ) |>
  # find longest f/u
  # add drug (arm), country, surgery, postop only
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(postop_only_dat, by = "refid") |>
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |>
  select(refid, refid_c, arm_id, study, design_f_lab, country, surg_f, postop_only, arm, neurocog_total_n, arm_n, dncr_time) |>
  arrange(refid_c, arm_id) |>
  mutate(
    year = as.numeric(str_extract(study, "\\d{4}")),
    # neurocog_inc_prop = ifelse(neurocog_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
  )

dncr_rr_ref <- dncr_dat |>
  select(refid, refid_c, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid_c, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  ) |>
  select(-refid)




```

## **Length of Stay**

<font size = 4> `r table_ref()` Length of stay according to procedure classification and comparator. </font>

```{r length_of_stay}
#| eval: true

los_tab <- contin_dat |>
  mutate(los_for_tables(contin_dat)) |>
  filter(if_any(los_m:los_diff_pval, ~ !is.na(.))) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  mutate(
    refid_arm_id = paste0(refid, "-", arm_id),
    surg_groups = paste0(surgs_single_f, " - ", design_f_lab),
    mean_med = case_when(
      !is.na(los_m) ~ los_m,
      !is.na(los_med) ~ los_med
    ),
    drug_recode_abbr = fct_drop(drug_recode_abbr),
    calc_prop_25d = 100 * mean_med / 25,
    bar = case_when(
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(calc_prop_25d, color_1),
      str_detect(drug_recode_abbr, "Ket") ~ bar_prop(calc_prop_25d, color_2),
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(calc_prop_25d, color_3),
      .default = bar_prop(calc_prop_25d, color_4)
    )
  ) |>
  # select(refid, arm_id, arm_n, drug_recode_abbr, age_table, asa_ps_incl, surg_groups, study, los_table, bar, starts_with(("los"))) |>
  arrange(surg_groups, year, study, arm_id) |> 
  select(refid, refid_arm_id, study, study_l, arm_n, drug_recode_abbr, asa_ps_incl, age_table, los_table, bar, surg_groups)

# temp |> tabyl(drug_recode_abbr)

los_tab |>
  group_by(study) |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l)) |>
  ungroup() |>
  group_by(surg_groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "GI/Abd - Randomized Clinical Trial", "GI/Abd - Before-After/Time Series", "Thoracic - Randomized Clinical Trial", "Thoracic - Before-After/Time Series", "Various - Randomized Clinical Trial", "Oralmax - Randomized Clinical Trial", "Spine - Prospective Cohort" )) |> 
  cols_hide(c(refid, refid_arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = "Â N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = "PS",
    age_table = "Â Â Â Â Age",
    los_table = "Â Â Â Â LOS",
    bar = "0 â€“ 25 days"
  ) |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, drug_recode_abbr,  bar))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, drug_recode_abbr, asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = color_1)), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Dex"))) |> 
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Ket"))) |> 
  tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Mel|Ram"))) |> 
  tab_footnote(md("NS: not stated")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl)))
  
```


## **Complications**

```{r complications_check_missing}
#| eval: false
## check missings other than n ------------------------ (2023-03-23 12:52) @----
missing_non_n_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, study, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high"))
}

variables_temp <- c("cardarr", "intub", "airleak", "gastro", "medical", "pulcongest", "respfail", "pe", "ssi", "thromb", "kidneyinj", "myoinfarct", "othcomp", "pneum", "infect", "cardiac", "stroke", "pulm", "cardiac", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

adverse_events_dat <- map(variables_temp, missing_non_n_fun)

## bruit force ---------------------------------------- (2023-03-23 16:39) @----
# dichot_dat |> 
#   filter(!is.na(d_complication)) |> 
#   filter(if_any(cardarr_per:cardarr_95high, ~ !is.na(.x)) & is.na(cardarr_n))
#   filter(if_any(intub_per:intub_95high, ~ !is.na(.x)) & is.na(intub_n))
#   filter(if_any(airleak_per:airleak_95high, ~ !is.na(.x)) & is.na(airleak_n))
#   filter(if_any(gastro_per:gastro_95high, ~ !is.na(.x)) & is.na(gastro_n))
#   filter(if_any(medical_per:medical_95high, ~ !is.na(.x)) & is.na(medical_n))
#   filter(if_any(pulcongest_per:pulcongest_95high, ~ !is.na(.x)) & is.na(pulcongest_n))
#   filter(if_any(respfail_per:respfail_95high, ~ !is.na(.x)) & is.na(respfail_n))
#   filter(if_any(pe_per:pe_95high, ~ !is.na(.x)) & is.na(pe_n))
#   filter(if_any(ssi_per:ssi_95high, ~ !is.na(.x)) & is.na(ssi_n))
#   filter(if_any(thromb_per:thromb_95high, ~ !is.na(.x)) & is.na(thromb_n))
#   filter(if_any(kidneyinj_per:kidneyinj_95high, ~ !is.na(.x)) & is.na(kidneyinj_n))
#   filter(if_any(myoinfarct_per:myoinfarct_95high, ~ !is.na(.x)) & is.na(myoinfarct_n))
#   filter(if_any(othcomp_per:othcomp_95high, ~ !is.na(.x)) & is.na(othcomp_n))
#   filter(if_any(pneum_per:pneum_95high, ~ !is.na(.x)) & is.na(pneum_n))
#   filter(if_any(infect_per:infect_95high, ~ !is.na(.x)) & is.na(infect_n))
#   filter(if_any(cardiac_per:cardiac_95high, ~ !is.na(.x)) & is.na(cardiac_n)) 
#   filter(if_any(stroke_per:stroke_95high, ~ !is.na(.x)) & is.na(stroke_n))
#   filter(if_any(pulm_per:pulm_95high, ~ !is.na(.x)) & is.na(pulm_n))
#   filter(if_any(cardiac_per:cardiac_95high, ~ !is.na(.x)) & is.na(cardiac_n))

```

## **Mortality**

```{r mortality_data}
#| eval: true
mortality_dat <- dichot_dat |>
  filter(if_any(starts_with("mort"), ~ !is.na(.x))) |> 
  # filter(arm_n != mort_update_arm_n) |> 
  # select(refid, arm_n, mort_update_arm_n)
  mutate(
    # arm_n use mort_update_arm_n if different
    arm_n = ifelse(!is.na(mort_update_arm_n), mort_update_arm_n, arm_n)
  ) |> 
  select(refid, refid_c, arm_id, year, study, study_l, design_f_lab, arm_n, matches("_n|per") & starts_with("mort"), -mort_update_arm_n) |> 
  pivot_longer(
    cols = starts_with("mort"),
    names_to = "estimand",
    values_to = "estimate",
    values_drop_na = TRUE
  ) |>
  mutate(
    mort_period = str_remove(estimand, "_.*"),
    estimand = str_replace(estimand, ".*_(.*)$", "\\1")
  ) |>
  pivot_wider(
    names_from = estimand,
    values_from = estimate
  ) |>
  mutate(
    mort_period = case_when(
      str_detect(mort_period, "hosp") ~ "Hospital",
      str_detect(mort_period, "mort30") ~ "30-day",
      str_detect(mort_period, "mort90") ~ "90-day",
      str_detect(mort_period, "mort1") ~ "1-year"
    ), 
    per = per/100
  ) |>
  rename(mort_n = n, mort_per_rep = per) |>
  arrange(refid_c, arm_id) |>
  mutate(
    ref_arm_n = arm_n,
    ref_mort_n = mort_n
  ) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() > 1, NA, ref_mort_n)
  ) |>
  fill(ref_arm_n, ref_mort_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() == 1, NA, ref_mort_n)
  ) |>
  ungroup() |> 
  left_join(study_char_dat |> select(refid, surgs_single_f), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(asa_combine |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |> 
  mutate(mort_percent = mort_n/arm_n,
         mort_period = factor(mort_period, levels = c("Hospital", "30-day", "90-day", "1-year"))) |>
  select(refid, refid_c, arm_id, year, study, study_l, arm_n, drug_recode_abbr, asa_ps_incl, age_table, design_f_lab, mort_n, mort_percent, ref_mort_n, ref_arm_n, mort_period, mort_per_rep, surgs_single_f)

dex_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Dex")
ket_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Ket")
mel_ram_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Mel|Ram")

# skim(mortality_dat)
```

### Dexmedetomidine

<font size = 4> `r table_ref()` Reported in-hospital, 30-day, 90-day, and 1-year mortality in dexmedetomidine randomized clinical trials by comparator and surgical category.</font>

```{r mortality_dex_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  filter(refid %in% dex_mort_refid) |> 
  group_by(mort_period, study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(mort_percent * 100, "#0E6655"),
      str_detect(drug_recode_abbr, "Ulin|MS|Prop") ~ bar_prop(mort_percent * 100, "#F39C12"),
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, color_1)
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "â€”"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  rename(drug_recode = drug_recode_abbr) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  arrange(year, refid_c, arm_id) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day", "1-year")) |> 
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode = "Drug",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_recode, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, age_table, asa_ps_incl, mort_n_percent, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, drug_recode, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(mort_n_percent, rd_ci))) |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#0E6655")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Ulin|MS|Prop"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Dex"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    drug_recode ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Dex: Dexmedetomidine; Ulin: Ulinastatin; MS: morphine sulfate; Plac; placebo.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table))) |> 
  tab_footnote("Different lengths of follow-up from the same trial.", locations = cells_body(columns = study_l, rows = study %in% c("Su 2016", "Zhang 2019b"))) 

```

```{r mortality_dex_hosp_30d_meta}
#| eval: true
mortality_dex_dat <- mortality_dat |>
  filter(refid %in% dex_mort_refid, mort_period %in% c("Hospital", "30-day")) |>
  rename(arm = drug_recode_abbr) |>
  filter(!str_detect(arm, "Ulin")) |>
  # exclude Qu 2023 30-day; retain hospital
  filter(!(study == "Qu 2023" & mort_period == "30-day")) |> 
  # to include hospital and 30-day if reporte
  # group_by(study) |>
  # mutate(
  #   study = case_when(
  #     n() == 4 & mort_period == "Hospital" ~ paste(study, "Hosp"),
  #     n() == 4 & mort_period == "30-day" ~ paste(study, "30-d"),
  #     .default = study
  #   )
  # ) |>
  # ungroup() |>
  select(refid, study, arm, mort_n, arm_n, mort_period)

trts_mort_dex <- levels(fct_drop(mortality_dex_dat$arm))

pairwise_mort_dex_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_dex_dat,
  sm = "RD",
  keep.all.comparisons = TRUE
)

mortality_mel_ram_dat <- mortality_dat |>
  filter(refid %in% mel_ram_mort_refid, mort_period %in% c("Hospital", "30-day"), str_detect(design_f_lab, "Rand")) |>
  rename(arm = drug_recode_abbr) |>
  # group_by(study) |>
  # mutate(
  #   study = case_when(
  #     n() == 4 & mort_period == "Hospital" ~ paste(study, "Hosp"),
  #     n() == 4 & mort_period == "30-day" ~ paste(study, "30-d"),
  #     .default = study
  #   )
  # ) |>
  # ungroup() |>
  mutate(arm = fct_collapse(arm, "Mel/Ram" = c("Mel", "Ram"), "Plac/None" = c("Plac", "None"))) |> 
  select(refid, study, arm, mort_n, arm_n, mort_period)

trts_mort_mel_ram <- levels(fct_drop(mortality_mel_ram_dat$arm))

pairwise_mort_mel_ram_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_mel_ram_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

## nma ------------------------------------------------ (2023-04-11 16:36) @----
# dex_plac_refid <- pairwise_dat |> 
#   filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex")) |> 
#   pull(refid)
# 
# mort_dex_nma <- netmeta(
#   pairwise_mort_dex_dat,
#   random = FALSE,
#   prediction = FALSE,
#   seq = trts_mort_dex,
#   sm = "RR",
#   reference.group = "Plac"
# )
# 
# forest(mort_dex_nma, pscale = 100)
# netsplit(mort_dex_nma, order = trts_mort_dex) %>%
#   forest(.,
#     show = "all",
#     xlab = "Risk Difference",
#     xlim = c(-4, 4),
#     pscale = 100,
#     # leftcols = c("studlab", "k"),
#     rightlabs = c("RD", "(95% CI)")
#   )
```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
### <font size = 4> `r figure_ref()` Summary risk of bias from dexmedetomidine randomized clinical trials reporting mortality over any length of follow-up. </font>

```{r rob2_summary_dex_mort, fig.height = 3, out.width = "60%"}
rob_summary_fun(dex_mort_refid)
```
:::

### Ketamine

No studies

<br/>

### Melatonin/Ramelteon

<font size = 4> `r table_ref()` Reported in-hospital, 30-day, 90-day, and 1-year mortality in melatonin and ramelteon studies by comparator and surgical category.</font>

```{r mortality_mel_ram_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  filter(refid %in% mel_ram_mort_refid) |> 
  group_by(study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(mort_percent * 100, "#0E6655"),
      str_detect(drug_recode_abbr, "Ulin|MS|Prop") ~ bar_prop(mort_percent * 100, "#F39C12"),
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, color_1)
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "â€”"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  rename(drug_recode = drug_recode_abbr) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day")) |> 
  # row_group_order(groups = c("Hospital", "30 Day", "90 Day", "1 Year")) |> 
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode = "Drug",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_recode, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, age_table, asa_ps_incl, mort_n_percent, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, drug_recode, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(mort_n_percent, rd_ci))) |>
  tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#0E6655")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Ulin|MS|Prop"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Dex"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    drug_recode ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Ram: ramelteon; Mel: melatonin; Plac; placebo.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table))) |> 
  tab_footnote("Randomized clinical trial.", locations = cells_body(columns = study_l, rows = !str_detect(study_l, "Hokuto") & !is.na(study_l))) |> 
  tab_footnote("Before-after design.", locations = cells_body(columns = study_l, rows = study %in% c("Hokuto 2020")))
```

<!-- ::: {.callout-note collapse="true" appearance="minimal" icon="false"} -->
<!-- ### <font size = 4> `r figure_ref()` Summary risk of bias from melatonin and ramelteon randomized clinical trials reporting mortality. </font> -->

<!-- ```{r rob2_summary_mel_ram_mort, fig.height = 3, out.width = "60%"} -->
<!-- rob_summary_fun(mel_ram_mort_refid) -->
<!-- ``` -->
<!-- ::: -->

### *Pooled*

#### Dexmedetomidine

<font size = 4> `r figure_ref()` Risk difference for hospital mortality -- dexmedetomidine compared with placebo or no intervention (randomized clinical trials). </font>

```{r dex_mort_meta, fig.dim = c(14, 7), fig.align = "center"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
dex_mort_meta_dat <- pairwise_mort_dex_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(treat1 == "Plac" & treat2 == "Dex") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid)

# total_meta(dex_mort_meta_dat)
# refid_meta_fun(dex_mort_meta_dat)

dex_plac_mort_meta <- metabin(event2, n2, event1, n1,
  data = dex_mort_meta_dat,
  studlab = study,
  # cluster = refid,
  sm = "RD",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  subgroup = mort_period
)

# summary(dex_plac_meta)
forest(dex_plac_mort_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "DexÂ Â Â Â Â ",
  label.c = "PlacÂ Â Â Â Â ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RD", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits.TE = 1,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 1, 
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  xlab = "Favors: DexmedetomidineÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Placebo/None",
  addrows.below.overall = 4
)

```
<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high â€“ . 

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects --- funnel plot. </font>

```{r dex_plac_meta_funnel_limit_mort, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
dex_plac_mort_meta <- update(dex_plac_mort_meta, sm = "OR", subgroup = NULL)
thompson <- metabias(dex_plac_mort_meta, method.bias = "Thompson")$pval
# temp_limit_meta <- limitmeta(dex_plac_mort_meta)
# limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")
par(mar = c(4, 4, 2, 1))
par(bty = "n", xaxt = "s", yaxt = "s")

funnel(dex_plac_mort_meta,
  ylim = c(2.0, 0.0), xlim = c(0.05, 20), 
  pch = 20, 
  contour = c(0.9, 0.95, 0.99), 
  col.contour = limit_colors, 
  studlab = TRUE, 
  pos.studlab = 4,
  fs.smlab = 6, 
  ff.smlab = "italic"
)

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
# text(0.3, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```
<foot_mg> `r paste0("Thompson test for small study effects P = ", digit2(thompson), ".")` `r rm(thompson)`<br/> 
:::

#### Melatonin/Ramelteon

<font size = 4> `r figure_ref()` Risk difference for hospital mortality -- melatonin or ramelteon compared with placebo or no intervention (randomized clinical trials). </font>

```{r mel_ram_mort_meta, fig.dim = c(14, 4), fig.align = "center"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
mel_ram_mort_meta_dat <- pairwise_mort_mel_ram_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(treat1 == "Plac/None" & treat2 == "Mel/Ram") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid)

# total_meta(mel_ram_mort_meta_dat)
# refid_meta_fun(mel_ram_mort_meta_dat)

mel_ram_plac_mort_meta <- metabin(event2, n2, event1, n1,
  data = mel_ram_mort_meta_dat,
  studlab = study,
  sm = "RD",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  subgroup = mort_period
)

# summary(mel_ram_plac_meta)
forest(mel_ram_plac_mort_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Mel/RamÂ Â Â Â Â ",
  label.c = "Plac/NoneÂ ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RD", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits.TE = 1,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 1, 
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  xlab = "Favors: Mel/RamÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Placebo/None",
  addrows.below.overall = 4
)
```
<foot_mg> Mel: melatonin; Ram: ramelteon; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high â€“ . </foot_mg> <a id="figure-4"></a>

## Study Characteristics

```{r study_characteristics}

```

## Risk of Bias

### Randomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for randomized clinical trials. </font>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_dat |>
  filter(!is.na(Study) & refid %in% kq6_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind")
```

<font size = 4> `r figure_ref()` Risk of bias assessment for randomized clinical trials. </font>

```{r rob_overall_study, out.width = "55%", fig.height = 16}
rob_traffic_light(rob_temp_dat, psize = 4, tool = "ROB2", colour = "colourblind")
```

### Nonrandomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for nonrandomized studies. </font>

```{r nrsi_summary_overall, fig.height = 3, out.width = "60%"}
robinsi_temp_dat <- robinsi_dat |>
  filter(!is.na(Study) & refid %in% kq6_refid) |> 
  select(-refid)

rob_summary(robinsi_temp_dat, tool = "ROBINS-I", colour = "colourblind")
```

<font size = 4> `r figure_ref()` Risk of bias assessment for nonrandomized studies. </font>

```{r nrsi_overall_study, out.width = "55%", fig.height = 3.3}
rob_traffic_light(robinsi_temp_dat, psize = 4, tool = "ROBINS-I", colour = "colourblind")
```

## References {#references}
