---
title: "K6: Delirium Prophylaxis"
editor: source
toc-title: "Delirium Prophylaxis"
toc-location: "left"
toc-depth: 4
toc_float: 
  collapsed: false
tbl-cap-location: "top"
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq6.bib"
csl: jama.csl
link-citations: no
nocite: '@*'
---

<!-- kq6.bib updated 2023-02-21 -->

## **Key Question**

Among older patients undergoing surgery and anesthesia, do dexmedetomidine, ketamine, ramelteon, or melatonin administered during the perioperative period decrease the risk of postoperative delirium or other adverse cognitive outcomes?

<!-- setup -------------------------------------------- (2022-12-24 16:56) @ --->

```{r read_data}
#| include: false
# CODE: read data
source("code/readfiles_geri_2022-11-16.R")
study_char_dat <- data_kq(study_char_dat, kq6_refid)
study_arm_dat <- data_kq(study_arm_dat, kq6_refid)
contin_dat <- data_kq(contin_dat, kq6_refid)
dichot_dat <- data_kq(dichot_dat, kq6_refid)
likert_dat <- data_kq(likert_dat, kq6_refid)
```

```{r delirium_refids_check}
#| eval = FALSE
# any of delirium_dichot_refid, delirium_contin_refid, delirium_likert_refid 
kq6_refid %in% delirium_refid
kq6_refid %in% cogfunc_refid
kq6_refid[!kq6_refid %in% c(delirium_refid, cogfunc_refid)]
```

## **Outcome Importance Rankings**

<font size = 4> `r table_ref()`</font> Rankings for the 5 most important outcomes (11 respondents).

```{r outcome_priority}
#| include: true
#| eval: true
# CODE: outcome priority rankings
# note also in appendix
outcome_dat <- rankings("KQ6")
outcome_tab(outcome_dat, 11)
```

### Reporting Frequency

<font size = 4> `r table_ref()` Dichotomous or count outcomes. </font>

```{r dichot_outcome_freq}
# CODE: reporting frequency tabulation
dichot_freq_fun(dichot_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

<font size = 4> `r table_ref()` Continuous outcomes. </font>

```{r cont_outcome_freq}
contin_freq_fun(contin_dat)
```

<font size = 4> `r table_ref()` Likert or ordinal outcomes. </font>

```{r likert_outcome_freq}
likert_freq_fun(likert_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

## **Included Studies**

<font size = 4> `r table_ref()` Number of studies by design. </font>

<!-- Number of studies by design ----------------------- (2022-12-28 10:44) @ --->

```{r studies_design}
# CODE: study design table â€” design and number; no duplicate counting
study_char_dat |>
  filter(refid %in% kq6_refid) |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(
    style = list(
      cell_fill(color = "#E4F3FE"),
      cell_text(weight = "bold"),
      cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))
    ),
    locations = cells_body(
      rows = design_f_lab == "Total"
    )
  ) |> 
  tab_style(
    style = list(
      cell_text(align = "left")),
      locations = cells_body(
        columns = design_f_lab
      )
    ) |> 
  tab_footnote("Counted randomized clinical trials with more than 1 publication only once (applied to 2 trials with 2 publications).")
```

### Design, centers, country, and surgery

<font size = 4> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </font>

<!-- design, enrollment, centers ... ------------------- (2022-12-28 10:44) @ --->

```{r drugs_by_arm}
#| message: false
# CODE: drugs & recode drugs/comparators so that usable; "other" category recoded to comparator
# drugs_dat <- study_arm_dat include drug arm data; adds kq5/6 arms
## drugs; from kq6, add kq5 arm drugs ----------------- (2023-01-16 13:46) @----
# drugs for kq5 studies; needed to fill in "missings" for kq6 arms coded as kq5 arms
kq5_drug_by_arm <- read_csv("data/kq5_drug_by_arm.csv") |> 
  rename(drug = drug_f) |> 
  mutate(drug = as.character(drug)) |> 
  select(refid, arm_id, drug, control_desc)

drugs_dat <- study_arm_dat |>
  select(refid, design_f_lab, study, study_l, study_l_w_linked, study_id, arm_id, arm_n, arm_kq6_proph_meds, kq6_control_desc:kq6_notes, multiple_kq) |>
  rename_with(~ str_replace(., "kq6_", ""), everything()) |>
  rename_with(~ str_replace(., "dex_", "dexmed_"), everything()) |>
  mutate(
    drug = case_when(
      !is.na(dexmed) ~ dexmed,
      !is.na(ketamine) ~ ketamine,
      !is.na(melatonin) ~ melatonin,
      !is.na(ramelteon) ~ ramelteon,
      !is.na(ulinastatin) ~ ulinastatin, # all missing
      !is.na(none) ~ none
    ),
    drug = str_replace(drug, "kq6_", ""),
    drug = firstup(drug)
  ) |>
  relocate(drug, .after = arm_n) |>
  # update drug and control description for "kq5" arms
  left_join(kq5_drug_by_arm, by = c("refid", "arm_id")) |>
  mutate(
    drug = coalesce(drug.x, drug.y),
    control_desc = coalesce(control_desc.x, control_desc.y),
    control_desc = firstup(control_desc),
    arm_proph_meds = ifelse(is.na(arm_proph_meds), "kq5_arm", arm_proph_meds)
  ) |>
  select(-matches("\\.x|\\.y")) |>
  mutate(
    drug_f = fct(drug,
      levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin", "Midazolam", "Haloperidol", "None", "Placebo", "Other")
    ),
    drug_f = fct_collapse(drug_f, "Control" = c("None", "Placebo", "Other")),
  ) |>
  group_by(refid) |>
  mutate(
    drug_study = case_when( # study drug
      if_any(drug_f, ~ . == "Dexmedetomidine") ~ "Dexmedetomidine",
      if_any(drug_f, ~ . == "Ketamine") ~ "Ketamine",
      if_any(drug_f, ~ . == "Melatonin") ~ "Melatonin",
      if_any(drug_f, ~ . == "Ramelteon") ~ "Ramelteon"
      # TRUE ~ NA_character_ for verification
    ),
    drug_study = fct(drug_study, levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon")),
    drug_recode = case_when(
      str_detect(other_spec, "Midazolam and propofol") ~ "Midazolam/propofol",
      str_detect(other_spec, "Midazolam and sevoflurane") ~ "Midazolam/sevoflurane",
      str_detect(other_spec, "[Mm]idazolam") ~ "Midazolam",
      str_detect(other_spec, "[Ss]ufentanil") ~ "Sufentanil",
      str_detect(other_spec, "[Rr]hythim") ~ "Rhythim",
      str_detect(other_spec, "[Pp]ropofol") ~ "Propofol",
      str_detect(other_spec, "[Mm]orphine") ~ "Morphine",
      str_detect(other_spec, "[Pp]regabalin") ~ "Pregabalin",
      .default = drug
    ),
    drug_recode = ifelse(refid == 2748 & arm_id == 4, "Dexmedetomidine/Pregabalin", drug_recode),
    drug_recode = ifelse(refid == 13406 & arm_id == 3, "Dexmedetomidine/Ulinastatin", drug_recode),
    drug_recode = ifelse(refid == 13393 & arm_id == 2, "Dexmedetomidine/Ulinastatin", drug_recode),
    # HERE
    drug_recode = fct(drug_recode,
      levels = c("Dexmedetomidine", "Dexmedetomidine/Pregabalin", "Dexmedetomidine/Ulinastatin", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin", "Haloperidol", "Midazolam", "Midazolam/propofol", "Midazolam/sevoflurane", "Morphine", "Pregabalin", "Propofol", "Rhythim", "Sufentanil", "Placebo", "None")
    ),
    drug_recode_abbr = fct_recode(drug_recode, Dex = "Dexmedetomidine", "Dex/Preg" = "Dexmedetomidine/Pregabalin", "Dex/Ulin" = "Dexmedetomidine/Ulinastatin", Ket = "Ketamine", Mel = "Melatonin", Ram = "Ramelteon", Ulin = "Ulinastatin", Hal = "Haloperidol", Mid = "Midazolam", "Mid/Prop" = "Midazolam/propofol", "Mid/Sevo" = "Midazolam/sevoflurane", MS = "Morphine", Preg = "Pregabalin", Prop = "Propofol", Rhyth = "Rhythim", Sufen = "Sufentanil", Plac = "Placebo"),
  ) |>
  ungroup() |>
  relocate(c(drug, drug_f, drug_recode, drug_recode_abbr, drug_study), .after = arm_id) |>
  relocate(c(other_spec, interv_desc, control_desc), .after = last_col()) |>
  arrange(refid, drug_study) |>
  fill(drug_study) |>
  arrange(refid, arm_id)
```

```{r drug_tables}
#| eval = FALSE
# CODE: eval = FALSE; drug and drug_recode can save to desktop; working only 
drugs_dat |> tabyl(drug)
drugs_dat |> tabyl(drug_recode)
drugs_dat |> tabyl(drug_recode_abbr)

drugs_dat |>
    labelled::set_variable_labels(
    drug_recode = "Drug(s)",
  ) |> 
  select(drug_recode) |>
  tbl_summary(
    # label = list(drug_recode ~ "Drug(s)")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |>
  gt_theme_mg() |> 
  as.data.frame() |> 
  select(5:7) |> 
  writexl::write_xlsx("/Users/mgrant/Desktop/temp.xlsx")


temp <- drugs_dat |> 
  select(refid, study, contains("drug"), other_spec, contains("_desc"))

writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")
writexl::write_xlsx(temp, "/Users/mgrant/Desktop/arm_comparator.xlsx")
```

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |> 
  select(refid, starts_with("design"), study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi, starts_with("surg")) |>
  # select(refid, study, starts_with("surg")) |> # compile surgeries
  rename_with(~ gsub("surg_", "", .x, fixed = TRUE)) |>
  mutate(across(various:other, ~ gsub("surg_", "", .x, fixed = TRUE)),
    ortho_any = ifelse(if_any(contains("ortho"), ~ !is.na(.x)), "ortho", NA),
    opth = ifelse(str_detect(other_desc, "[Cc]ataract") | !is.na(opth), "optho", opth),
    gi = ifelse(!is.na(colorectal) | !is.na(gi_other) | !is.na(abdominal), "GI/Abdominal", NA),
    across(c(various, cardiac, gyn, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other), ~ firstup(.x)),
  ) |>
  unite("surgs", various, cardiac, gyn, gi, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other, sep = "|", remove = FALSE, na.rm = TRUE) |>
  select(-c(various, abdominal, cardiac, colorectal, gyn, gi, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other, design_other, gi_other, starts_with("ortho"), list, other_desc, starts_with("hip"))) |>
  mutate(
    surgs = ifelse(str_count(surgs, "\\|") > 3, "Various", surgs)
  ) |>
  left_join(drugs_dat |> group_by(refid) |> slice(1) |> ungroup() |> select(refid, drug_study), by = "refid") |>
  # create new factor for table as gt not arranging properly
  mutate(
    drug_design = fct(paste0(drug_study, " - ", design_f_lab),
      levels = c(
        "Dexmedetomidine - Randomized Clinical Trial",
        "Dexmedetomidine - Nonrandomized Trial",
        "Ketamine - Randomized Clinical Trial",
        "Ketamine - Prospective Cohort",
        "Melatonin - Randomized Clinical Trial",
        "Ramelteon - Randomized Clinical Trial",
        "Ramelteon - Before-After/Time Series"
      )
    )
  ) |>
  arrange(drug_design, surgs, study_l) |>
  select(refid, study_l, centers, n_enroll, country, drug_design, surgs, non_vh_hdi)
# 
# included_dat |>
#   mutate(drug_design = paste(drug_study, design_f_lab)) |>
#   filter(str_detect(drug_design, "NA"))
#   

included_dat |>
  group_by(drug_design) |>
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_hide(non_vh_hdi) |>
    fmt_markdown(columns = c(study_l)) |> 
  cols_width(
    refid ~ px(60),
    study_l ~ px(200),
    centers ~ px(40),
    n_enroll ~ px(55),
    country ~ px(100),
    surgs ~ px(220)
  ) |> 
  # opt_horizontal_padding(scale = 2) |>
  tab_footnote(
    footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."),
    locations = cells_column_labels(columns = country)
  ) |>
  tab_footnote(
    footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."),
    locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))
  ) |>
  tab_footnote(
        footnote = md("Various indicates more than 4 different types of surgery."),
        locations = cells_column_labels(columns = surgs)
      ) |>
  gt_theme_mg() |>
  tab_style(
    style = cell_text(align = "center"),
    locations = cells_column_labels(
      columns = c("refid")
    )
  ) |> 
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular.")
```

### Country Summary

<font size = 4> `r table_ref()` Summary of studies by country where conducted. </font>

```{r country}
# CODE: table of countries
study_char_dat |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
  gt_theme_mg()

```

## **Interventions and Comparators**

#### Dexmedetomidine

<font size = 4> `r table_ref()` Dosing and comparators in dexmedetomidine randomized clinical trials. </font>

```{r dex_compare}
#| eval: true
# CODE: dexmedetomidine studies
# dexmedetomidine studies
dex_refid <- drugs_dat |> 
  filter(drug == "Dexmedetomidine") |> 
  pull(refid)

dex_by_arm <- drugs_dat |>
  filter(refid %in% dex_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(refid:arm_proph_meds, matches("^proph_|dexmed"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("dexmed_", "", .x, fixed = TRUE)) |>
  mutate(
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "\U2582")),
    maintain_range = ifelse(!is.na(maintain_low + maintain_up), paste0(maintain, " (", maintain_low, "â€“", maintain_up, ")"), maintain),
    maintain_range = str_replace(maintain_range, "NA ", ""),
    loading = ifelse(loading == "0", "", loading),
    loading = ifelse(loading == "1", "1.0", loading),
    # loading = ifelse(loading == "1000", "1.0", loading),
    loading = str_replace(loading, "-1$", "-1.0")
  ) |>
  arrange(year, refid, desc(drug)) |>
  rename(post = postop, ind = induct, intr = intra) |> 
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f_lump), by = c("refid")) |>
  mutate(groups = paste0(surgs_single_f_lump, " - ", design_f_lab), 
  dex_groups = factor(groups, levels = c("Ortho - Randomized Clinical Trial", "Cardiac - Randomized Clinical Trial", "GI/Abd - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial","Urol - Randomized Clinical Trial", "Headneck - Randomized Clinical Trial", "Ophtho - Randomized Clinical Trial", "Various - Randomized Clinical Trial","Other - Randomized Clinical Trial", "Thoracic - Nonrandomized Trial", "GI/Abd - Nonrandomized Trial"))) |> 
  select(study, year, refid, study_l, arm_n, drug_recode, drug_recode_abbr, volatile_tab:sedation_only_tab, asa_ps_incl, age_table, pre_mmse, loading, maintain_range, postdose, pre:post, design_f_lab, dex_groups, surgs_single_f_lump)

```

```{r dex_table, warning = FALSE}
#| echo = FALSE
# CODE: dexmedetomidine table 2023-02-21 draft; VERIFY NO
dex_by_arm |>
  arrange(dex_groups, year, study) |>
  group_by(study_l) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    drug_recode = drug_recode_abbr,
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x)),
    volatile_tab = ifelse(refid == 328 & row_number() %in% c(2, 3), "âœ“", volatile_tab),
    tiva_tab = ifelse(refid == 328 & row_number() == 4, "âœ“", tiva_tab)
  ) |>
  ungroup() |>
  group_by(dex_groups) |>
  gt(id = "one") |> 
  cols_hide(c(year, study, refid, drug_recode_abbr, design_f_lab, surgs_single_f_lump)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode = "Comparator",
    asa_ps_incl = md("Â Â PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    loading = "Loading",
    maintain_range = md("per hr"),
    postdose = md("Postop"),
    pre = "Pre",
    ind = "Ind",
    intr = "Intr",
    post = "Post"
    # drug_f = md("Comparator <br/> Detail")
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, ind, intr, post)) |>
  tab_spanner(label = "Dexmedetomidine Dose mcg/kg", columns = c(loading, maintain_range, postdose), level = 2) |>
  # tab_spanner(label = "Timing", columns = c(pre:post)) |>
  tab_spanner(label = "Maintenance", columns = c(maintain_range), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:sedation_only_tab)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(loading:postdose))) |>
  # tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(drug_recode, loading:postdose))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(loading, maintain_range, postdose, pre:post))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_recode, study_l, pre:post))) |>
  tab_style(style = cell_text(font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(size = px(8)), locations = cells_column_labels(columns = c(volatile_tab:sedation_only_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(pre:post))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode), rows = str_detect(drug_recode, "Dex"))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "â€”") |>
  gt_theme_mg() |>
  cols_width(
    pre ~ px(30),
    ind ~ px(30),
    intr ~ px(30),
    post ~ px(32),
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(30),
    tiva_tab ~ px(30),
    regional_tab ~ px(30),
    sedation_only_tab ~ px(30),
    age_table = ~ px(80),
    pre_mmse ~ px(80),
    loading ~ px(80),
    maintain_range ~ px(100),
    postdose ~ px(80),
  ) |>
  opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("Dex: Dexmedetomidine; Uli: Ulinastatin; Hal: Haloperidol; Mid: Midazolam; Mid/Prop: Midazolam/propofol; Mid/Seve: Midazolam/sevoflurane; Preg: Pregabalin; Prop: Propofol; Rhyth: Rhythim; Plac; placebo; PS: performance status; MMSE: Mini-Mental State Exam; Pre: preoperative; Ind: induction; Intr: intraoperative; Post: postoperative; â€”: unspecified.") |>
  tab_footnote("Range if reported in parentheses.", locations = cells_column_labels(columns = maintain_range)) |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse)))

# gtsave("/Users/mgrant/Desktop/dex_arm_dose_table6.docx")
# |>  tab_info()
```

#### Ketamine

<font size = 4> `r table_ref()` Dosing and comparators in ketamine studies. </font>

```{r ket_compare}
#| eval: true
# CODE: ketamine studies
ket_refid <- drugs_dat |> 
  filter(drug == "Ketamine") |> 
  pull(refid)

# by arm
ket_by_arm <- drugs_dat |>
  filter(refid %in% ket_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(study, refid:arm_proph_meds, matches("^proph_|keta"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("ketamine_", "", .x, fixed = TRUE)) |>
  unite("time_admin", c(pre:unspec), sep = "|", na.rm = TRUE, remove = FALSE) |>
  mutate(
    time_admin = str_remove_all(time_admin, "proph_med_"),
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "\U2582")),
    drug = fct(drug, levels = c("Ketamine", "Haloperidol", "Placebo", "Other", "None")),
  ) |>
  relocate(time_admin, .after = arm_n) |>
  # dosing
  arrange(year, refid, desc(drug)) |>
  rename(post = postop, ind = induct, intr = intra) |> 
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
  mutate(ket_groups = paste0(surgs_single_f, " - ", design_f_lab),
         # key_groups = factor(ket_groups)) |> 
         ket_groups = factor(ket_groups, levels = c("Cardiac - Randomized Clinical Trial", "GI/Abd - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "Ophtho - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Spine - Prospective Cohort"))) |>
  select(study, year, refid, study_l, arm_n, drug, volatile_tab:sedation_only_tab, asa_ps_incl, age_table, pre_mmse, dose, dose_iv, time_admin, pre:post, design_f_lab, surgs_single_f, ket_groups, surgs)

# ket_by_arm |> tabyl(ket_groups)

```

```{r ket_table, warning = FALSE}
# CODE: ketamine table 2023-02-21  draft; VERIFY NO
ket_by_arm |> 
  arrange(ket_groups, year, study) |>
  group_by(refid) |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l)) |>
  ungroup() |>
  group_by(ket_groups) |>
  gt(id = "one") |>
  cols_hide(c(year, study, refid, time_admin, design_f_lab, surgs_single_f, ket_groups, surgs, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug = "Comparator",
    asa_ps_incl = md("Â PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("(mg/kg)"),
    dose_iv = md("Â Â (mg/kg)"),
    pre = "Pre",
    ind = "Ind",
    intr = "Intr",
    post = "Post"
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, ind, intr, post)) |>
  tab_spanner(label = "Maintenance", columns = c(dose_iv), level = 1) |>
  tab_spanner(label = "Dose", columns = c(dose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug, time_admin))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(dose, dose_iv))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug, dose, dose_iv, pre:post))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(pre:post))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug), rows = drug == "Ketamine")) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "â€”") |>
  # tab_row_group(label = "numbered", rows = 1:10) |> 
  gt_theme_mg() |>
  cols_width(
    pre ~ px(30),
    ind ~ px(30),
    intr ~ px(30),
    post ~ px(32),
    study_l ~ px(165),
    arm_n ~ px(45),
    drug ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    # sedation_only_tab ~ px(30),
    age_table = ~ px(80),
    pre_mmse ~ px(80),
    dose ~ px(80),
    dose_iv ~ px(100)
  ) |>
  opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |> 
  fmt_number(columns = dose, drop_trailing_zeros = TRUE, ) |>
  tab_footnote(footnote = md("S-Ketamine"), locations = cells_body(columns = drug, rows = arm_n %in% c(223, 227))) |>
  tab_footnote(footnote = "Time administered not reported.", locations = cells_body(columns = pre, rows = arm_n == 38 & drug == "Ketamine")) |>
  tab_footnote("Plac; placebo; PS: performance status; MMSE: Mini-Mental State Exam; Pre: preoperative; Ind: induction; Intr: intraoperative; Post: postoperative; â€”: unspecified.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse)))

```

#### Melatonin and Ramelteon

```{r melatonin_ramelteon_compare}
#| eval: true
# melatonin ramelteon studies
mel_ram_refid <- drugs_dat |> 
  filter(drug %in% c("Melatonin", "Ramelteon")) |> 
  pull(refid)

# by arm
mel_ram_by_arm <- drugs_dat |>
  filter(refid %in% mel_ram_refid) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  select(refid:arm_proph_meds, matches("^proph_|mela|ramel"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  unite("time_admin", c(pre:unspec), sep = "|", na.rm = TRUE, remove = FALSE) |> 
  mutate(
    time_admin = str_remove_all(time_admin, "proph_med_"),
    time_admin = str_remove_all(time_admin, "proph_med_"),
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "\U2582")),    
    dose = coalesce(melatonin_dose, ramelteon_dose),
    days = coalesce(as.character(melatonin_days), as.character(ramelteon_numberdoses)),
    dose = ifelse(!is.na(dose), paste0(dose, "mg Ã— ", days), dose),
   # to order drugs
   drug = fct(drug, levels = c("Melatonin", "Ramelteon", "Midazolam", "Placebo", "Other", "None"))
  ) |>
  relocate(time_admin, .after = arm_n) |> 
  # dosing
 arrange(year, refid, desc(drug)) |> 
    select(refid, study_id, year, study_l_w_linked, arm_n, drug, drug_f, drug_study, dose, time_admin, pre, postop, design_f_lab, interv_desc, control_desc)
```

<!-- :::{.callout-note collapse=true appearance='minimal' icon=false} -->

<!-- ## <font size = 4> `r table_ref()` Melatonin and ramelteon studies comparators and dosing. </font> -->

<font size = 4> `r table_ref()` Melatonin and ramelteon studies comparators and dosing. </font>

```{r melatonin_ramelteon_table}
mel_ram_by_arm |>
  arrange(year, study_id) |>
  rename(study_l = study_l_w_linked) |>
  mutate(groups = paste0(drug_study, " - ", design_f_lab)) |>
  group_by(refid) |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l)) |>
  ungroup() |>
  group_by(groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Melatonin - Randomized Clinical Trial", "Ramelteon - Randomized Clinical Trial", "Ramelteon - Before-After/Time Series")) |>
  cols_hide(c(year, refid, drug_f, design_f_lab, drug_study, study_id, interv_desc, control_desc, time_admin)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug = "Comparator",
    dose = md("Dosing"),
    pre = "Pre",
    postop = "Post"
  ) |>
  fmt_markdown(columns = c(study_l)) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug:postop))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug, dose, pre, postop))) |>
  tab_style(style = list(cell_text(color = "maroon")), locations = cells_body(columns = c(arm_n:drug), rows = drug %in% c("Melatonin", "Ramelteon"))) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(150),
    arm_n ~ px(45),
    drug ~ px(130),
    dose ~ px(90),
    pre ~ px(32),
    postop ~ px(60),
  ) |>
  tab_footnote("Pre: preoperative; Post: postoperative.")

# |>  tab_info()
# tab_source_note(footnote)
```

<!-- ::: -->

## **Outcomes**

### *Delirium*

#### Dexmedetomidine

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in randomized clinical trials of dexmedetomidine. </font>

```{r delirium_total_dex_tab}
# CODE: delirium incidence dexmedetomidine
delirium_total_tab <- delirium_total_tab_fun(dex_refid)
```

```{r delirium_total_dex_gt}
delirium_total_gt_dex <- delirium_total_gt_fun("Dex")
# tab_info(delirium_total_gt_dex)
delirium_total_gt_dex |> 
    tab_footnote("MMSE: Mini-Mental State Examination; Dex: Dexmedetomidine; Mid: Midazolam; Prop: Propofol; MS: Morphine; Preg: Pregabalin; Prop: Propofol; Rhyth: Rhythim; Plac: placebo; CAM: Confusion Assessment Method; DSM: Diagnostic and Statistical Manual of Mental Disorders; ICDSC: Intensive Care Delirium Screening Checklist; Psych: psychiatrist interview; NS; not specified.") |>
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates over patient hospital stay.", locations = cells_column_labels(columns = delitotal_time)) |>
  tab_footnote("Tool reported in the Chinese Expert Consensus on the Prevention and Treatment of Postoperative Delirium in Elderly Patients", locations = cells_body(columns = scale_delirium, rows = scale_delirium == "Note"))

```

#### Ketamine

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in randomized clinical trials of ketamine. </font>

```{r delirium_total_ket_tab}
# CODE: delirium incidence ketamine
delirium_total_tab <- delirium_total_tab_fun(ket_refid)
```

```{r delirium_total_ket_gt}
delirium_total_gt_ket <- delirium_total_gt_fun("Ket")
# tab_info(delirium_total_gt_ket)

delirium_total_gt_ket |>
  tab_footnote("MMSE: Mini-Mental State Examination; Ket: ketamine; Plac: placebo; Hal: haloperidol; ICDSC: Intensive Care Delirium Screening Checklist; Psych: psychiatrist interview; NS; not specified.") |>
  tab_footnote(md("Mean <u>Med</u> (SD) {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates over patient hospital stay.", locations = cells_column_labels(columns = delitotal_time))
```

#### Melatonin and Ramelteon

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in randomized clinical trials of melatonin and ramelteon. </font>

```{r delirium_total_mel_ram_tab}
# CODE: delirium incidence ketamine
delirium_total_tab <- delirium_total_tab_fun(mel_ram_refid)
```

```{r delirium_total_mel_ram_gt}
delirium_total_gt_mel_ram <- delirium_total_gt_fun("Mel|Ram")
# tab_info(delirium_total_gt_mel_ram_gt)

delirium_total_gt_mel_ram |>
  tab_footnote("MMSE: Mini-Mental State Examination; Mel: melatonin; Ram: ramelteon; AMT: Abbreviated Mental Test; DSM: Diagnostic and Statistical Manual of Mental Disorders; CAM: Confusion Assessment Method; ICDSC: Intensive Care Delirium Screening Checklist.") |>
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates over patient hospital stay.", locations = cells_column_labels(columns = delitotal_time))
```

## Study Characteristics

```{r study_characteristics}


```

## References {#references}
