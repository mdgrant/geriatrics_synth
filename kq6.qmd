---
title: "Delirium Prophylaxis"
editor: source
toc-title: "**Delirium Prophylaxis**"
toc-location: "left"
toc-depth: 5
toc_float: 
  collapsed: true
tbl-cap-location: "top"
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq6.bib"
csl: anesthesiology.csl
link-citations: false
nocite: '@*'
---

<!-- ::: {.callout-note collapse="true"} -->
<!-- ## Recent updates -->

<!-- | Date       | Modification                                                                                                                                                                    | -->
<!-- |:-----------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| -->
<!-- | 2024-06-03 | Updates through complications including additional sensitivity analyses for delirium (eg, see significance funnel plots).           | -->

<!-- ::: -->

## Key Question

Among older patients undergoing surgery and anesthesia, does dexmedetomidine, ketamine, ramelteon, or melatonin administered during the perioperative period decrease the risk of postoperative delirium or other adverse cognitive outcomes?

```{r read_data}
#| include: false
#| echo: false
#| warning: false
source("code/load_data.R")
settings.meta(CIbracket = "(")
conflicts_prefer(dplyr::lag)
kq6_refid <- kq6_refid[!kq6_refid %in% c(18979, 13546, 2598)] # 18979 Poeran gabapentin result; 13546 Zhang 2018 ulinastantin vs. placebo; 2598 Wang 2017 ulinastatin vs. placebo
# kq6_refid <- kq6_refid[!kq6_refid %in% c(13734, 13630, 2314, 17151, 16753, 13171, 18900, 18493, 2396, 17556)] # Fan 2017b rhythim, Gao 2021 5269 overlap with Gao 2020 1819, Xuan 2016 "Eligible patients were more than 60 years old with joint replacement surgery in ICU."; Sun 2019 2314 retracted; Ding 2015 16753 retracted; Xu 2022 17151 case control study no informative data; 13171 Mahrose 2021 nrc melatonin+dexmedetomidine vs dexmedetomidine; Wittwer 2023 ketamine+dexmedetomidine vs dexmedetomidine; 18493 Javaherforooshzadeh 2023 dex vs dex-melatonin; 2396 Shehabi dex vs MS; 17556 He 2022 in chinese; 2024-04-23 all excluded: kq6_refid[kq6_refid %in% c(13734, 13630, 2314, 17151, 16753, 13171, 18900, 18493, 2396, 17556)]

study_char_dat <- data_kq(study_char_dat, kq6_refid)
study_arm_dat <- data_kq(study_arm_dat, kq6_refid) 
contin_dat <- data_kq(contin_dat, kq6_refid) 
likert_dat <- data_kq(likert_dat, kq6_refid) 
# delirium_inc_prop <lgl> neurocog_inc_prop <lgl> [dichot_dat] reported incidence proportion
# delirium_day_max <num>  neurocog_day_max <num>  [dichot_dat] max of daily 

dichot_dat <- data_kq(dichot_dat, kq6_refid) |>
  mutate(
    delirium_inc_prop = !is.na(delitotal_n), 
    delirium_day_max = pmax(delirium_n1, delirium_n2, delirium_n3, delilast_n, na.rm = TRUE),
    delitotal_n = ifelse(is.na(delitotal_n), delirium_day_max, delitotal_n),
  ) |> 
  relocate(delirium_day_max, .after = delitotal_n) 

```

```{r drugs_by_arm}

# drugs & recode drugs/comparators so that usable; "other" category recode to comparator 
# drugs_dat <- study_arm_dat include drug arm data; adds kq5/6 arms

## drug levels and abbreviations ---------------------- (2024-04-14 08:45) @----
drug_recode_levels <- c(
  "Dexmedetomidine",
  "Dexmedetomidine/Pregabalin",
  "Dexmedetomidine/Ulinastatin",
  "Ulinastatin",
  "Haloperidol",
  "Ketamine",
  "Melatonin",
  "Ramelteon",
  "Gabapentin",
  "Pregabablin",
  "Midazolam",
  "Midazolam/propofol",
  "Midazolam/sevoflurane",
  "Remimazolam",
  "Oxazepam",
  # "Morphine",
  "Sufentanil",
  "Pregabalin",
  "Propofol",
  "Placebo",
  "None",
  "Other"
)

drug_recode_abbr <- c(
  Dex = "Dexmedetomidine",
  "Dex/Preg" = "Dexmedetomidine/Pregabalin",
  "Dex/Ulin" = "Dexmedetomidine/Ulinastatin",
  Ulin = "Ulinastatin",
  Hal = "Haloperidol",
  Ket = "Ketamine",
  Mel = "Melatonin",
  Ram = "Ramelteon",
  Gab = "Gabapentin",
  Preg = "Pregabablin",
  Mid = "Midazolam",
  "Mid/Prop" = "Midazolam/propofol",
  "Mid/Sevo" = "Midazolam/sevoflurane",
  Rem = "Remimazolam",
  Oxaz = "Oxazepam",
  # MS = "Morphine",
  Suf = "Sufentanil",
  Preg = "Pregabalin",
  Prop = "Propofol",
  Plac = "Placebo",
  None = "None",
  Other = "Other"
)

## drugs; from kq6, add kq5 arm drugs ----------------- (2023-01-16 13:46) @----
# drugs for kq5 studies; needed to fill in "missings" for kq6 arms coded as kq5 arms with detail there
kq5_drug_by_arm <- read_csv("data/kq56_drug_by_arm.csv", col_types = c("n", "n", "c", "c")) |>
  rename(drug = drug_f) |> # arm drug
  mutate(drug = as.character(drug)) |> 
  select(refid, arm_id, drug, control_desc) |> 
  rename(control_desc_kq5 = control_desc, drug_kq5 = drug)

## combine data from kq5 and kq6 ---------------------- (2024-04-14 08:45) @----
drugs_dat_prelim <- study_arm_dat |> 
  select(refid, design_f_lab, study, study_l, study_l_w_linked, study_id, arm_id, arm_n, arm_kq6_proph_meds, kq6_control_desc:kq6_notes, multiple_kq) |>
  rename_with(~ str_replace(., "kq6_", ""), everything()) |>
  rename_with(~ str_replace(., "dex_", "dexmed_"), everything()) |> # dexmed to avoid confusion w/dexamethasone
  mutate(
    drug = case_when(
      !is.na(dexmed) ~ dexmed,
      !is.na(ketamine) ~ ketamine,
      !is.na(melatonin) ~ melatonin,
      !is.na(ramelteon) ~ ramelteon,
      !is.na(gabapentin) ~ gabapentin,
      !is.na(ulinastatin) ~ ulinastatin, # all missing
      !is.na(none) ~ none
    ),
    drug = str_replace(drug, "kq6_", ""),
    drug = firstup(drug)
  ) |>
  relocate(drug, .after = arm_n) |>
  left_join(kq5_drug_by_arm, by = c("refid", "arm_id")) |>  # select(refid, study, arm_id, drug, drug_kq5, control_desc, control_desc_kq5)
  # populate drug and control description when recorded only in kq6 arms
  mutate( 
    drug = coalesce(drug, drug_kq5), 
    control_desc = coalesce(control_desc, control_desc_kq5),
    control_desc = firstup(control_desc),
    arm_proph_meds = ifelse(is.na(arm_proph_meds), "kq5_arm", arm_proph_meds), # for origin of data; bookeeping
  ) 

## convert to factors with clean labels for analysis -- (2024-04-14 08:45) @----
# only drug_study dex ket mel ranm
drugs_dat <- drugs_dat_prelim |>
  mutate(
    drug_f = fct(drug, levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin", "Midazolam", "Oxazepam", "Haloperidol", "Gabapentin", "Pregabablin", "Remimazolam", "None", "Placebo", "Other")),
    drug_f = fct_collapse(drug_f, "Control" = c("None", "Placebo", "Other"))
  ) |>
  group_by(refid) |>
  mutate(
    drug_study = case_when( # study drug
      if_any(drug_f, ~ . == "Dexmedetomidine") ~ "Dexmedetomidine",
      if_any(drug_f, ~ . == "Ketamine") ~ "Ketamine",
      if_any(drug_f, ~ . == "Melatonin") ~ "Melatonin",
      if_any(drug_f, ~ . == "Ramelteon") ~ "Ramelteon",
    ),
    drug_study = if_else(study == "Liao 2023", "Dexmedetomidine", drug_study),
    drug_study = if_else(study == "Zhou 2019b", "Dexmedetomidine", drug_study),
    drug_study = fct(drug_study, levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon")),
    drug_recode = case_when(
      str_detect(other_spec, "Midazolam and propofol") ~ "Midazolam/propofol",
      str_detect(other_spec, "Midazolam and sevoflurane") ~ "Midazolam/sevoflurane",
      str_detect(other_spec, "[Mm]idazolam") ~ "Midazolam",
      str_detect(other_spec, "[Ss]ufentanil") ~ "Sufentanil",
      str_detect(other_spec, "[Pp]ropofol") ~ "Propofol",
      str_detect(other_spec, "[Pp]regabalin") ~ "Pregabalin",
      .default = drug
    ),
    drug_recode = ifelse(refid == 2748 & arm_id == 3, "Dexmedetomidine/Pregabalin", drug_recode),
    drug_recode = ifelse(refid == 2748 & arm_id == 2, "Pregabalin", drug_recode),
    drug = if_else(refid == 2748 & arm_id == 2, "Pregabalin", drug),
    # drug_f = ifelse(refid == 2748 & arm_id == 2, "Pregabalin", drug_f),
    drug_recode = ifelse(refid == 13406 & arm_id == 3, "Dexmedetomidine/Ulinastatin", drug_recode),
    drug_recode = ifelse(refid == 13393 & arm_id == 1, "Dexmedetomidine/Ulinastatin", drug_recode),
    drug_recode = fct(drug_recode, levels = drug_recode_levels),
    drug_recode_abbr = fct_recode(drug_recode, !!!drug_recode_abbr),
  ) |>
  ungroup() |>
  relocate(c(drug, drug_f, drug_recode, drug_recode_abbr, drug_study), .after = arm_id) |>
  relocate(c(other_spec, interv_desc, control_desc), .after = last_col()) |>
  arrange(refid, drug_study) |>
  fill(drug_study) |>
  arrange(refid, arm_id)

# check if studies include > 1 included prophylactic drug
# drugs_dat |> #filter(study == "Oriby 2023") |> 
#   group_by(refid) |>
#   mutate(
#     drug_dex_study = if_else(if_any(drug_f, ~ . == "Dexmedetomidine"), "dex", ""),
#     drug_ket_study = if_else(if_any(drug_f, ~ . == "Ketamine"), "ket", ""),
#     drug_mel_ram_study = if_else(if_any(drug_f, ~ . %in% c("Melatonin", "Ramelteon")), "mel_ram", "")
#   ) |>
#   unite(drug_all, drug_dex_study, drug_ket_study, drug_mel_ram_study, sep = "", remove = TRUE) |> 
#   select(refid, study, drug_all) |> 
#   filter(drug_all != "") |>
#   distinct() |> 
#   group_by(refid) |> 
#   slice(2)
  
```

```{r unique_refid }
linked_refid <- study_char_dat |>
  filter(refid %in% kq6_refid) |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(2) |> 
  pull(refid) 

dex_refid <- drugs_dat |> 
  filter(drug == "Dexmedetomidine") |> 
  filter(!refid %in% linked_refid) |>
  pull(refid) 

mel_ram_refid <- drugs_dat |> 
  filter(drug %in% c("Melatonin", "Ramelteon")) |> 
  filter(!refid %in% linked_refid) |>
  pull(refid)

ket_refid <- drugs_dat |> 
  filter(drug == "Ketamine") |> 
  filter(!refid %in% linked_refid) |>
  pull(refid)

```

```{r delirium_refids_check}
#| eval = FALSE

kq6_refid %in% delirium_refid
kq6_refid %in% cogfunc_refid
kq6_refid[!kq6_refid %in% c(delirium_refid, cogfunc_refid)]
```

## Balance Tables

### Dexmedetomidine

<caption_mg> Benefits, harms, and strength of evidence (GRADE) for dexmedetomidine versus placebo or no intervention. </caption_mg>

```{r dex_balance}
kq6_balance_dex_main("include") |> 
  text_replace("see Appendix", "see below", locations = cells_body()) 
  # text_replace("see Appendix", "see Appendix", locations = cells_body())
```

<!-- <caption_mg> Included complications and strength of evidence (GRADE) for dexmedetomidine versus placebo or no intervention. </caption_mg> -->


```{r dex_complications}
#| eval: false

kq6_dex_complications()
```

<!-- ### Ketamine -->

<!-- <caption_mg> Benefits, harms, and strength of evidence (GRADE) for ketamine versus placebo or no intervention. </caption_mg> -->

```{r ket_balance}
#| eval: false

kq6_ketamine() |> 
  text_replace("see Appendix", "see below", locations = cells_body()) 
  # text_replace("see Appendix", "see Appendix", locations = cells_body())
```

<!-- ### Melatonin or Ramelteon -->

<!-- <caption_mg> Benefits, harms, and strength of evidence (GRADE) for melatonin or ramelteon versus placebo or no intervention. </caption_mg> -->

```{r mel_ram_balance}
#| eval: false

kq6_balance_mel_ram_main() |> 
  text_replace("see Appendix", "see below", locations = cells_body()) 
  # text_replace("see Appendix", "see Appendix", locations = cells_body())
```

<!-- <caption_mg> Included complications and strength of evidence (GRADE) for melatonin or ramelteon versus placebo or no intervention.</caption_mg> -->

```{r mel_ram_complications}
#| eval: false

kq6_balance_mel_ram_complications()
```

<!-- ## Outcome Importance -->

<!-- <caption_mg> Rankings for the 5 most important outcomes (11 respondents). </caption_mg> -->

<!-- ```{r outcome_priority} -->
<!-- #| include: true -->
<!-- #| eval: true -->
<!-- # note also in appendix -->
<!-- outcome_dat <- rankings("KQ6") -->
<!-- outcome_tab(outcome_dat, 11) -->
<!-- ``` -->

## Outcomes Reported

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
### <caption_mg> **Dexmedetomidine**  </caption_mg>

<caption_mg> `r table_ref()` Publications reporting dichotomous or count outcomes  in dexmedetomidine studies (not necessarily unique studies).</caption_mg>

```{r dichot_outcome_freq_dex}
dichot_freq_fun(dichot_dat |> filter(refid %in% dex_refid), "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

<caption_mg> `r table_ref()` Publications reporting continuous outcomes in dexmedetomidine studies (not necessarily unique studies). </caption_mg>

```{r cont_outcome_freq_dex}
contin_freq_fun(contin_dat |> filter(refid %in% dex_refid))
```

<caption_mg> `r table_ref()` Publications reporting likert or ordinal outcomes in dexmedetomidine studies (not necessarily unique studies). </caption_mg>

```{r likert_outcome_freq_dex}
likert_freq_fun(likert_dat |> filter(refid %in% dex_refid), "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
### <caption_mg> **Ketamine**  </caption_mg>

<caption_mg> `r table_ref()` Publications reporting dichotomous or count outcomes in ketamine studies (not necessarily unique studies).</caption_mg>

```{r dichot_outcome_freq_ket}
dichot_freq_fun(dichot_dat |> filter(refid %in% ket_refid), "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

<caption_mg> `r table_ref()` Publications reporting continuous outcomes in ketamine studies  (not necessarily unique studies). </caption_mg>

```{r cont_outcome_freq_ket}
contin_freq_fun(contin_dat |> filter(refid %in% ket_refid))
```

<caption_mg> `r table_ref()` Publications reporting likert or ordinal outcomes in ketamine studies  (not necessarily unique studies). </caption_mg>

```{r likert_outcome_freq_ket}
likert_freq_fun(likert_dat |> filter(refid %in% ket_refid), "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
### <caption_mg> **Melatonin or ramelteon**  </caption_mg>

<caption_mg> `r table_ref()` Publications reporting dichotomous or count outcomes in melatonin or ramelteon studies (not necessarily unique studies).</caption_mg>

```{r dichot_outcome_freq_mel_ram}
dichot_freq_fun(dichot_dat |> filter(refid %in% mel_ram_refid), "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

<caption_mg> `r table_ref()` Publications reporting continuous outcomes in melatonin or ramelteon studies (not necessarily unique studies). </caption_mg>

```{r cont_outcome_freq_mel_ram}
contin_freq_fun(contin_dat |> filter(refid %in% mel_ram_refid))
```

<caption_mg>`r table_ref()`  Publications reporting likert or ordinal outcomes in melatonin or ramelteon studies(not necessarily unique studies). </caption_mg>

```{r likert_outcome_freq_mel_ram}
likert_freq_fun(likert_dat |> filter(refid %in% mel_ram_refid), "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

:::

## **Included Studies**

<caption_mg> `r table_ref()` Number of studies by design. </caption_mg>

```{r studies_design}
#| layout: [[30, 30, 30]]
study_char_dat |>
  filter(refid %in% dex_refid) |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  tab_header(title = "Dexmedetomidine") |> 
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(design_f_lab))) |>
  tab_style(style = list(cell_fill(color = "#E4F3FE"), cell_text(weight = "bold"), cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))), locations = cells_body(rows = design_f_lab == "Total")) |> 
  tab_style(style = list(cell_text(align = "left")), locations = cells_body(columns = design_f_lab)) |> 
  tab_footnote("Studies with multiple publications counted only once (applied to 1 trial with 2 publications).")

study_char_dat |>
  filter(refid %in% ket_refid) |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  tab_header(title = "Ketamine") |> 
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(design_f_lab))) |>
  tab_style(style = list(cell_fill(color = "#E4F3FE"), cell_text(weight = "bold"), cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))), locations = cells_body(rows = design_f_lab == "Total")) |> 
  tab_style(style = list(cell_text(align = "left")), locations = cells_body(columns = design_f_lab)) 

study_char_dat |>
  filter(refid %in% mel_ram_refid) |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  tab_header(title = "Melatonin or Ramelteon") |> 
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(design_f_lab))) |>
  tab_style(style = list(cell_fill(color = "#E4F3FE"), cell_text(weight = "bold"), cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))), locations = cells_body(rows = design_f_lab == "Total")) |> 
  tab_style(style = list(cell_text(align = "left")), locations = cells_body(columns = design_f_lab)) 

```

```{r refids}
# change refid to all, not just unique studies
dex_refid <- drugs_dat |> filter(drug == "Dexmedetomidine") |> pull(refid) 
mel_ram_refid <- drugs_dat |> filter(drug %in% c("Melatonin", "Ramelteon")) |> pull(refid)
ket_refid <- drugs_dat |> filter(drug == "Ketamine") |> pull(refid)
```

### Design, centers, country, and surgery

<caption_mg> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </caption_mg>

```{r drugs_table}
#| eval: false
# drug_recode - includes combination; drug_recode_abbr - includes combination abbreviated

drugs_dat |>
  filter(str_detect(design_f_lab, "Rand")) |> 
  labelled::set_variable_labels(drug_recode = "Drug(s)") |> # filter(drug_recode == "Remimazolam")
  select(drug_recode) |> 
  mutate(drug_recode = as.character(drug_recode)) |>
  tbl_summary(
    label = list(drug_recode ~ "Comparator Arms"),
    sort = list(everything() ~ "frequency")
  ) |>
  modify_header(label ~ "RCTs", stat_0 = "Arms, N (%)") |> 
  as_gt(id = "one") |> 
  gt_theme_mg() 

drugs_dat |>
  filter(!str_detect(design_f_lab, "Rand")) |>
  labelled::set_variable_labels(drug_recode = "Drug(s)") |>
  select(drug_recode) |>
  mutate(drug_recode = as.character(drug_recode)) |>
  tbl_summary(
    label = list(drug_recode ~ "Comparator Arms"),
    sort = list(everything() ~ "frequency")
  ) |>
  modify_header(label ~ "Nonrandomized", stat_0 = "Arms, N (%)") |>
  as_gt(id = "one") |>
  gt_theme_mg()

  
# debug
# temp <- drugs_dat |> select(refid, study, contains("drug"), other_spec, contains("_desc"))
# drugs_dat |> tabyl(drug)
# drugs_dat |> filter(drug == "Ulinastatin")
# drugs_dat |> filter(is.na(drug))
# drugs_dat |> tabyl(drug_recode)
# drugs_dat |> tabyl(drug_recode_abbr)
# writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")
# writexl::write_xlsx(temp, "/Users/mgrant/Desktop/arm_comparator.xlsx")
```

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |> 
  select(refid, starts_with("design"), study, study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi, surgs) |>
  left_join(drugs_dat |> group_by(refid) |> slice(1) |> ungroup() |> select(refid, drug_study), by = "refid") |>
  # create new factor for table as gt not arranging properly
  mutate(
    drug_study = if_else(study == "Liao 2023", "Dexmedetomidine", drug_study),
    drug_study = if_else(study == "Zhou 2019b", "Dexmedetomidine", drug_study),
    drug_design = fct(paste0(drug_study, " - ", design_f_lab),
      levels = c(
        "Dexmedetomidine - Randomized Clinical Trial",
        "Dexmedetomidine - Nonrandomized Trial",
        "Dexmedetomidine - Prospective Cohort",
        "Dexmedetomidine - Retrospective Cohort",
        "Ketamine - Randomized Clinical Trial",
        "Ketamine - Prospective Cohort",
        "Ketamine - Retrospective Cohort",
        "Melatonin - Randomized Clinical Trial",
        "Melatonin - Nonrandomized Trial", 
        "Ramelteon - Randomized Clinical Trial",
        "Ramelteon - Before-After/Time Series",
        "Ramelteon - Retrospective Cohort"
      )
    ),
  ) |>
  select(refid, study_l, study, drug_study, centers, n_enroll, country, drug_design, surgs, non_vh_hdi)

# duplicate 18960 Oriby for dexmedetomidine
oriby_add <- included_dat |> 
  filter(study == "Oriby 2023") |> 
  mutate(drug_design = "Dexmedetomidine - Randomized Clinical Trial")

included_dat <- bind_rows(included_dat, oriby_add) |> 
    arrange(drug_design, surgs, study_l)

# verfication
# included_dat |> tabyl(drug_design)
# included_dat |> filter(refid %in% dex_refid) |> tabyl(drug_design)
# included_dat |> filter(refid %in% dex_refid) |> filter(drug_design == "Ketamine - Randomized Clinical Trial")
# included_dat |> filter(refid %in% ket_refid) |> tabyl(drug_design)
# included_dat |> filter(refid %in% mel_ram_refid) |> tabyl(drug_design)

included_dat |>
  group_by(drug_design) |>
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_width(
    refid    ~ px(60),
    study_l  ~ px(235),
    centers  ~ px(60),
    n_enroll ~ px(80),
    country  ~ px(100),
    surgs    ~ px(180)
  ) |> 
  cols_hide(c(non_vh_hdi, study, drug_study)) |>
  fmt_markdown(columns = c(study_l)) |> 
  fmt_number(columns = c(n_enroll, centers), use_seps = TRUE, drop_trailing_zeros = TRUE) |>
  sub_missing(columns = everything(), missing_text = "") |>
  # opt_horizontal_padding(scale = 2) |>
  gt_theme_mg() |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c("refid"))) |> 
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote(footnote = md("Described as various or more than 4 different types of surgery."), locations = cells_body(columns = surgs, surgs == "Various")) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), locations = cells_column_labels(columns = country)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))) |>
  tab_footnote(footnote = "Studies examining drugs not directly relevant to recommendations but potentially to the evidence space (eg, a connected network including indirect evidence) are included here.", locations = cells_column_labels(columns = c(study_l))) |> 
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular; ENT: ear nose and throat.") |> 
  tab_footnote("Knee arthroplasty.", locations = cells_body(columns = surgs, rows = refid == 17136)) |> # Memtsoudis 2018b
  tab_footnote("Hip arthroplasty.", locations = cells_body(columns = surgs, rows = refid == 17130)) |> # Memtsoudis 2018g
  tab_footnote("Intraoperative ketamine.", locations = cells_body(columns = surgs, rows = refid == 17144)) |> # Weinstein 2018c
  tab_footnote("Postoperative ketamine.", locations = cells_body(columns = surgs, rows = refid == 14145))  # Weinstein 2018d

```

### Country Summary

<caption_mg> `r table_ref()` Summary of randomized clinical trials according to country. </caption_mg>

```{r country}
study_char_dat |>
  filter(design == "rct") |>
  mutate(linked_references = ifelse(is.na(linked_references), refid, linked_references)) |> 
  slice(1, .by = linked_references) |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
  gt_theme_mg()

```

## **Interventions & Comparators**

### Dexmedetomidine

<caption_mg> `r table_ref()` Selected characteristics, comparators, and dosing in dexmedetomidine trials. </caption_mg>

```{r dex_compare}
dex_refid <- drugs_dat |> 
  filter(drug == "Dexmedetomidine") |> 
  pull(refid)

timing <- drugs_dat |> 
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  select(refid, arm_id, pre:unspec) |> 
  mutate(
    # across(pre:unspec, ~ notna_to_x(.x, "▂")),
    across(pre:postop, ~ ifelse(!is.na(.x), "\U2586", "\U2581")),
    timing_all = paste0(pre, induct, intra, postop),
    timing_all = ifelse(timing_all == "▁▁▁▁", NA, timing_all),
    timing_all = ifelse(!is.na(unspec), "Unspecified", timing_all),
    timing_all = ifelse(refid == 2748 & arm_id %in% c(2,3), NA, timing_all) # Lee 2018b pregabalin arms leave unspecified
    ) |> 
  select(-c(pre:postop))

dex_by_arm <- drugs_dat |>
  filter(refid %in% dex_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(refid:arm_proph_meds, matches("^proph_|dexmed"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("dexmed_", "", .x, fixed = TRUE)) |>
  select(-c(pre:unspec)) |> # using timing_all instead; no unspecified as of 2023-10-18
  mutate(
    maintain_range = ifelse(!is.na(maintain_low + maintain_up), paste0(maintain, " (", maintain_low, "–", maintain_up, ")"), maintain),
    maintain_range = str_replace(maintain_range, "NA ", ""),
    loading = ifelse(loading == "0", "", loading),
    loading = ifelse(loading == "1", "1.0", loading),
    # loading = ifelse(loading == "1000", "1.0", loading),
    loading = str_replace(loading, "-1$", "-1.0")
  ) |>
  arrange(year, refid, desc(drug)) |>
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab, cog_imp_n), by = c("refid", "arm_id")) |>
  left_join(timing, by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  mutate(
    dex_groups = str_c(surgs_single_f, " - ", design_f_lab),
    cog_imp_nper = n_per_fun(cog_imp_n, arm_n),
    cog_imp_nper = ifelse(str_detect(cog_imp_nper, "NA"), "", cog_imp_nper)
  ) |> 
  select(-cog_imp_n, -cog_imp_nper) # remove no studies reported including cognitively impaired patients except Liu 2016 as indicated in the table.

# manually order dex_groups
# dex_by_arm |>
#   group_by(refid) |>
#   slice(1) |>
#   ungroup() |>
#   tabyl(dex_groups) |>
#   mutate(design = str_extract(dex_groups, "-.*$")) |>
#   arrange(desc(design), desc(n)) |>
#   pull(dex_groups) |>
#   glue_collapse(sep = "\n")


dex_group_levels <- c(
  "Cardiac - Randomized Clinical Trial", 
  "Ortho - Randomized Clinical Trial", 
  "GI/Abd - Randomized Clinical Trial", 
  "Various - Randomized Clinical Trial", 
  "Thoracic - Randomized Clinical Trial", 
  "Oralmax - Randomized Clinical Trial", 
  "Urol - Randomized Clinical Trial", 
  "Headneck - Randomized Clinical Trial", 
  "ENT - Randomized Clinical Trial",
  "Ortho - Nonrandomized Trial",
  "Spine - Nonrandomized Trial",
  "Ophtho - Randomized Clinical Trial", 
  "GI/Abd - Nonrandomized Trial", 
  "Thoracic - Nonrandomized Trial", 
  "GI/Abd - Prospective Cohort",
  # "Other - Prospective Cohort", 
  "Cardiac - Retrospective Cohort",
  "Ortho - Retrospective Cohort",
  "Urol - Retrospective Cohort")

dex_by_arm <- dex_by_arm |> 
  mutate(  
  dex_groups = factor(dex_groups, levels = dex_group_levels)) |> 
  select(refid, study, year, study_l, arm_n, arm_id, drug_recode_abbr, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, loading, maintain_range, postdose, timing_all, design_f_lab, dex_groups, surgs_single_f)

rm(dex_group_levels)
```

```{r dex_table}
#| echo = FALSE
dex_by_arm |> 
  arrange(dex_groups, year, study, arm_id) |>
  group_by(study_l) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "\U2713", .x)),
    volatile_tab = ifelse(refid == 328 & row_number() %in% c(2, 3), "\U2713", volatile_tab),
    tiva_tab = ifelse(refid == 328 & row_number() == 4, "\U2713", tiva_tab)
  ) |>
  ungroup() |>
  group_by(dex_groups) |>
  gt(id = "one") |> 
  cols_hide(c(year, study, refid, design_f_lab, surgs_single_f, arm_id)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode_abbr = "Arm",
    asa_ps_incl = md("  PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    sedation_only_tab = "Sed",
    age_table = "    Age",
    pre_mmse = "MMSE",
    loading = "Load",
    maintain_range = md("Maint/hr"),
    postdose = md("Postop"),
    timing_all = "Timing",
    # drug_f = md("Comparator <br/> Detail")
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, timing_all)) |>
  fmt_number(columns = c(postdose), drop_trailing_zeros = TRUE) |>
  tab_spanner(label = "Dexmedetomidine mcg/kg", columns = c(loading, maintain_range, postdose), level = 1) |>
  # tab_spanner(label = "Maintenance/hr", columns = c(loading, maintain_range, postdose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:sedation_only_tab)) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "—") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(170),
    arm_n ~ px(80),
    drug_recode_abbr ~ px(75),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(30),
    tiva_tab ~ px(30),
    regional_tab ~ px(30),
    sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(80),
    loading ~ px(60),
    maintain_range ~ px(100),
    postdose ~ px(60),
    timing_all ~ px(85),
  ) |>
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(age_table, pre_mmse, loading:postdose))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug_recode_abbr, pre_mmse, age_table))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(loading, maintain_range, postdose))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_recode_abbr, study_l))) |>
  tab_style(style = cell_text(font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(volatile_tab, regional_tab, sedation_only_tab))) |>
  tab_style(style = cell_text(size = px(8)), locations = cells_column_labels(columns = c(tiva_tab))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode_abbr:timing_all), rows = str_detect(drug_recode_abbr, "Dex"))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Oralmax: oral and maxillofacial; Ophtho; ophthalmologic; Urol: urologic; Dex: dexmedetomidine; Ulin: ulinastatin; Mid: midazolam; Mid/Prop: midazolam/propofol; Mid/Seve: midazolam/sevoflurane; Preg: pregabalin; Prop: propofol; Plac; placebo; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; Sed: sedation; MMSE: Mini-Mental State Exam.") |>
  tab_footnote("No studies reported including cognitively impaired patients except Liu 2016 as indicated.", locations = cells_column_labels(columns = pre_mmse)) |>
  tab_footnote("Maintenance range if reported in parentheses.", locations = cells_column_labels(columns = maintain_range)) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote(md("Given as a single dose."), locations = cells_body(columns = maintain_range, rows = maintain_range %in% c("100", "200", "400"))) |> 
  tab_footnote("Bars indicate adminstration times from left to right: preoperative, induction, intraoperative, and postoperative (includes PACU).", locations = cells_column_labels(columns = c(timing_all)))
```

<a id="ketamine_comparators"></a>

### Ketamine

<caption_mg> `r table_ref()` Selected characteristics, comparators, and dosing in ketamine studies. </caption_mg>

```{r ket_compare}
#| eval: true
ket_refid <- drugs_dat |> 
  filter(drug == "Ketamine") |> 
  pull(refid)

ket_by_arm <- drugs_dat |>
  filter(refid %in% ket_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(study, refid:arm_proph_meds, matches("^proph_|keta"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("ketamine_", "", .x, fixed = TRUE)) |>
  # unite("time_admin", c(pre:unspec), sep = "|", na.rm = TRUE, remove = FALSE) |>
  mutate(
    # time_admin = str_remove_all(time_admin, "proph_med_"),
    # across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    # across(pre:unspec, ~ notna_to_x(.x, "\U2582")),
    drug = fct(drug, levels = c("Ketamine", "Dexmedetomidine", "Haloperidol", "Placebo", "Other", "None")),
  ) |>
  left_join(timing, by = c("refid", "arm_id")) |>
  relocate(timing_all, .after = arm_n) |>
  # dosing
  arrange(year, refid, desc(drug)) |>
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
  mutate(ket_groups = str_c(surgs_single_f, " - ", design_f_lab))

# manually order ketamine groups
# ket_by_arm |>
#   group_by(refid) |>
#   slice(1) |>
#   ungroup() |>
#   tabyl(ket_groups) |>
#   mutate(design = str_extract(ket_groups, "-.*$")) |>
#   arrange(desc(design), desc(n)) |>
#   pull(ket_groups) |>
#   glue_collapse(sep = "\n")

# Ortho - Retrospective Cohort
# Thoracic - Retrospective Cohort
# Cardiac - Randomized Clinical Trial
# GI/Abd - Randomized Clinical Trial
# Ortho - Randomized Clinical Trial
# Ophtho - Randomized Clinical Trial
# Various - Randomized Clinical Trial
# Ortho - Prospective Cohort
# Other - Prospective Cohort
# Spine - Prospective Cohort

ket_group_levels <- c(
  "Cardiac - Randomized Clinical Trial", 
  "Ortho - Randomized Clinical Trial", 
  "GI/Abd - Randomized Clinical Trial", 
  "Various - Randomized Clinical Trial", 
  "Ophtho - Randomized Clinical Trial", 
  "Ortho - Prospective Cohort", 
  "Spine - Prospective Cohort", 
  "Other - Prospective Cohort", 
  "Ortho - Retrospective Cohort", 
  "Thoracic - Retrospective Cohort")

ket_by_arm <- ket_by_arm |> 
  mutate(  
  ket_groups = factor(ket_groups, levels = ket_group_levels)) |> 
  select(study, year, refid, study_l, arm_n, drug_recode_abbr, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose, dose_iv, timing_all, ket_groups)

rm(ket_group_levels)
```

```{r ket_table}
ket_by_arm |> 
  arrange(ket_groups, year, study) |>
  group_by(refid) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x))) |> 
  ungroup() |>
  group_by(ket_groups) |>
  gt(id = "one") |>
  cols_hide(c(year, study, refid, ket_groups, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode_abbr = "Arm",
    asa_ps_incl = md("  PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("(mg/kg)"),
    dose_iv = md("  (mg/kg)"),
    timing_all ~ "Timing",
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, timing_all)) |>
  fmt_number(columns = c(arm_n), use_seps = TRUE, drop_trailing_zeros = TRUE) |>
  fmt_number(columns = c(dose, dose_iv), drop_trailing_zeros = TRUE) |>
  tab_spanner(label = "Maintenance", columns = c(dose_iv), level = 1) |>
  tab_spanner(label = "Dose", columns = c(dose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "—") |>
  # tab_row_group(label = "numbered", rows = 1:10) |> 
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(80),
    drug_recode_abbr ~ px(55),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    # sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(80),
    dose ~ px(80),
    dose_iv ~ px(100),
    timing_all ~ px(85),
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug_recode_abbr))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(dose, dose_iv))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(dose, dose_iv))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug_recode_abbr, timing_all))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(timing_all))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode_abbr:timing_all), rows = drug_recode_abbr == "Ket")) |>
  tab_footnote(footnote = md("S-Ketamine."), locations = cells_body(columns = drug_recode_abbr, rows = refid %in% c(13184, 15285) & drug_recode_abbr == "Ket")) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Dex: dexmedetomidine; Hal: haloperidol; Suf: sufentanil; Prop: propofol; Plac; placebo; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote("No studies reported including cognitively impaired patients.", locations = cells_column_labels(columns = pre_mmse)) |>
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote("Bars indicate adminstration times from left to right: preoperative, induction, intraoperative, and postoperative (includes PACU).", locations = cells_column_labels(columns = c(timing_all)))

```

<a id="mel_ram_comparators"></a>

### Melatonin/Ramelteon

```{r melatonin_ramelteon_compare}
#| eval: true
mel_ram_refid <- drugs_dat |> 
  filter(drug %in% c("Melatonin", "Ramelteon")) |> 
  pull(refid)

mel_ram_by_arm <- drugs_dat |>
  filter(refid %in% mel_ram_refid) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  select(refid:arm_proph_meds, matches("^proph_|mela|ramel"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  mutate(
    dose = coalesce(melatonin_dose, ramelteon_dose),
    days = coalesce(as.character(melatonin_days), as.character(ramelteon_numberdoses)),
    dose = ifelse(!is.na(dose), paste0(dose, "mg × ", days), dose),
   # to order drugs
   drug = fct(drug, levels = c("Melatonin", "Ramelteon", "Midazolam", "Oxazepam", "Placebo", "Other", "None"))
  ) |>
  left_join(timing |> select(-c(unspec)), by = c("refid", "arm_id")) |>
  mutate(
    timing_all = paste0(str_sub(timing_all, 1, 1), str_sub(timing_all, 4, 4)),
    timing_all = ifelse(timing_all == "NANA", NA_character_, timing_all),
  ) |> 
  relocate(timing_all, .after = arm_n) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab, cog_imp_n), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
  mutate(mel_ram_groups = str_c(surgs_single_f, " - ", design_f_lab))

# mel_ram_by_arm$cog_imp_n |> table()
  
# manually order melatonin/ramelteon groups
# mel_ram_by_arm |>
#   group_by(refid) |>
#   slice(1) |>
#   ungroup() |>
#   tabyl(mel_ram_groups) |>
#   mutate(design = str_extract(mel_ram_groups, "-.*$")) |>
#   arrange(desc(design), desc(n)) |>
#   pull(mel_ram_groups) |>
#   glue_collapse(sep = "\n")

# Headneck - Retrospective Cohort
# Ortho - Randomized Clinical Trial
# Cardiac - Randomized Clinical Trial
# Various - Randomized Clinical Trial
# GI/Abd - Randomized Clinical Trial
# Thoracic - Randomized Clinical Trial
# Cardiac - Nonrandomized Trial
# GI/Abd - Before-After/Time Series
# Thoracic - Before-After/Time Series

mel_ram_group_levels <- c(
  "Cardiac - Randomized Clinical Trial", 
  "Ortho - Randomized Clinical Trial", 
  "GI/Abd - Randomized Clinical Trial", 
  "Thoracic - Randomized Clinical Trial", 
  "Various - Randomized Clinical Trial", 
  "Cardiac - Nonrandomized Trial",
  "GI/Abd - Before-After/Time Series", 
  "Thoracic - Before-After/Time Series",
  "Headneck - Retrospective Cohort"
  )

mel_ram_by_arm <- mel_ram_by_arm |>
  mutate(
    mel_ram_groups = factor(mel_ram_groups, levels = mel_ram_group_levels)) |>
  select(study, year, refid, study_l, arm_n, drug_recode_abbr, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose, timing_all, mel_ram_groups)

rm(mel_ram_group_levels)
```

<caption_mg> `r table_ref()` Selected characteristics, comparators, and dosing in melatonin and ramelteon studies. </caption_mg>

```{r melatonin_ramelteon_table}
mel_ram_by_arm |>
  arrange(mel_ram_groups, year, study) |>
  mutate(
    dose = ifelse(study == "Ishibashi-Kanno 2020a" & arm_n == 35, "NR", dose),
  ) |> # filter(study == "Ishibashi-Kanno 2020a")
  group_by(refid) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x))) |> 
  ungroup() |>
  group_by(mel_ram_groups) |>
  gt(id = "one") |>
  # row_group_order(groups = c("Melatonin - Randomized Clinical Trial", "Ramelteon - Randomized Clinical Trial", "Ramelteon - Before-After/Time Series")) |>
  cols_hide(c(study, year, refid, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode_abbr = "Arm",
    asa_ps_incl = md("  PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("Dosing"),
    timing_all = "Timing"
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, timing_all)) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "—") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(80),
    drug_recode_abbr ~ px(55),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(80),
    dose ~ px(90),
    timing_all ~ px(85)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug_recode_abbr:timing_all))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug_recode_abbr, dose, timing_all))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:timing_all), rows = drug_recode_abbr %in% c("Mel", "Mel/Dex", "Ram"))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Mel: melatonin; Ram: ramelteon; Oxaz: oxazepam; Dex: dexmedetomidine; Mid: midazolam; Plac; placebo; NR: not reported.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote("No studies reported including cognitively impaired patients.", locations = cells_column_labels(columns = pre_mmse)) |>  
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote("Bars indicate adminstration times: preoperative left and postoperative right.", locations = cells_column_labels(columns = c(timing_all))) 
  

```

```{r add_arm_from_drug_recode_abbr}
# TODO: fix drug_recode_abbr to arm

# study_arm_dat <- study_arm_dat |> 
#   left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |> 
#   rename(arm = drug_recode_abbr) |> 
#   relocate(arm, .after = arm_id) 

# dichot_dat <- dichot_dat |> 
#   left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
#   rename(arm = drug_recode_abbr) |> 
#   relocate(arm, .after = arm_id) 

```

## **Delirium Incidence**

```{r delirium_meta_data}

postop_only_dat <- study_arm_dat |> # filter(design_f_lab == "Randomized Clinical Trial") |> 
  select(refid, study, proph_med_pre, proph_med_induct, proph_med_intra, proph_med_postop) |> 
  filter(if_all(c(proph_med_pre, proph_med_induct, proph_med_intra), ~ is.na(.x))) |>
  filter(!is.na(proph_med_postop)) |> 
  mutate(postop_only = TRUE) |> 
  select(refid, postop_only) |> 
  distinct()

postop_any_dat <- study_arm_dat |> # filter(design_f_lab == "Randomized Clinical Trial") |> 
  select(refid, study, proph_med_pre, proph_med_induct, proph_med_intra, proph_med_postop) |> 
  filter(!is.na(proph_med_postop)) |> 
  mutate(postop_any = TRUE) |> 
  select(refid, postop_any) |> 
  distinct()

delirium_meta_dat <- dichot_dat |>
  filter(!is.na(delitotal_n)) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = "refid") |>
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |> 
  left_join(postop_only_dat, by = "refid") |> 
  left_join(postop_any_dat, by = "refid") |> 
  select(refid, refid_c, arm_id, year, study, design_f_lab, country, surg_f, postop_only, postop_any, arm, delitotal_n, arm_n, deli_update_arm_n, delitotal_perc, delirium_inc_prop) |>
  arrange(refid_c, arm_id) |> # group_by(refid) |>filter(n() > 2) |> filter(arm %in% c("Plac", "Dex", "Ket", "Mel", "Ram")) # arms to collapse Lee 2018a, Avidan 2017, Zhao 2020 2024-04-24
  mutate(
    arm_n = ifelse(!is.na(deli_update_arm_n), deli_update_arm_n, arm_n),
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    delitotal_n = case_when(
      study == "Lee 2018a" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), delitotal_n),
      study == "Avidan 2017" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Avidan 2017", c(2, 3), delitotal_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), delitotal_n), # collapses all doses
      .default = delitotal_n
    ),
    arm_n = case_when(
      study == "Lee 2018a"   & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), arm_n),
      study == "Avidan 2017" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Avidan 2017", c(2, 3), arm_n),
      study == "Zhao 2020"   & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), arm_n),
      .default = arm_n
    )
  ) |>
  filter(!(study %in% c("Lee 2018a", "Avidan 2017") & arm_id == 3)) |> 
  filter(!(study %in% c("Zhao 2020") & arm_id %in% c(3, 4))) |> 
  # keep arms ↓ when creating kq56 file following
  filter(!(study == "He 2018" & arm_id == 2)) |> # midazolam arm
  filter(!(study %in% c("Lee 2018b") & arm_id %in% c(2, 3))) |> # remove pregabalin, pregabaline/dex arms
  filter(!(study %in% c("Hollinger 2021") & arm_id %in% c(2))) |> # remove haldol arm
  filter(!(study %in% c("Sultan 2010") & arm_id %in% c(2))) # remove midazolam arm
  

## calculated vs reported percentages ----------------- (2024-04-24 14:29) @----
# verified 2024-04-24
# temp <- delirium_meta_dat |>
#   mutate(
#     calc_percent = delitotal_n / arm_n * 100,
#     diff = calc_percent - delitotal_perc
#   ) |>
#   select(refid, study, arm_id, arm, arm_n, delitotal_n, calc_percent, delitotal_perc, diff) |> 
#   # exclude collapsed arms
#   filter(!study %in% c("Lee 2018a", "Avidan 2017", "Zhao 2020")) |> 
#   filter(abs(diff) >= 0.05)
# 
# writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")
```

```{r delirium_meta_dat_kq56}
#| eval: false

delirium_meta_kq5_dat <- read_csv("data/delirium_meta_kq5_dat.csv") |> 
  rename(arm = arm_up) |> 
  select(refid, study, arm_id, arm, drug_up, year, design_f_lab, surg_f, delitotal_n, arm_n)

# NOTE !! : must edit above creation of delirium_meta_dat above not exclude arms of interest
delirium_meta_kq6_dat <- delirium_meta_dat |> 
  filter(!refid %in% delirium_meta_kq5_dat$refid) |>
  mutate(drug_up = NA_character_) |>
  select(refid, study, arm_id, arm, drug_up, year, design_f_lab, surg_f, delitotal_n, arm_n)

delirium_combined <- bind_rows(delirium_meta_kq5_dat, delirium_meta_kq6_dat) |> 
  filter(str_detect(design_f_lab, "Randomized Clinical Trial")) |>
  mutate(
    drug_up = case_when(
      arm == "Prop" ~ "Propofol",
      arm == "Dex" ~ "Dexmedetomidine",
      arm == "none" ~ "Plac/None",
      arm == "placebo" ~ "Plac/None",
      arm == "Plac/None" ~ "Plac/None",
      arm == "Mel/Dex" ~ "Melatonin/Dexmedetomidine",
      arm == "Ram" ~ "Ramelteon",
      arm == "Mel" ~ "Melatonin",
      arm == "Ket" ~ "Ketamine",
      # arm == "MS" ~ "Morphine Sulfate",
      .default = drug_up
    )
  )

# for appendix nma 
# write_csv(delirium_combined, "data/delirium_combined_2024-10-17.csv", na = "")

```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Box plots displaying delirium incidence by surgical category across all treatment arms in randomized clinical trials. </caption_mg>

```{r delirium_incidence_fig, out.width = "70%", out.height = "40%", fig.align = "left"}
#| warning: false
par(mar = c(1, 1, 1, 1))
set.seed(1234)
# total to add
all_to_boxplot_dat <- delirium_meta_dat |>
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  mutate(deli_prop = delitotal_n / arm_n,
         surg_f = "Any") 

# placebo/none to add
plac_none_to_boxplot_dat <- delirium_meta_dat |>
  filter(arm == "Plac/None") |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  mutate(deli_prop = delitotal_n / arm_n,
         surg_f = "Plac/None") 

set.seed(333)
delirium_meta_dat |>
  # filter(arm == "Plac/None") |>
  filter(design_f_lab == "Randomized Clinical Trial") |>
  mutate(
    deli_prop = delitotal_n / arm_n,
  ) |>
  bind_rows(all_to_boxplot_dat) |>
  bind_rows(plac_none_to_boxplot_dat) |> 
  filter(arm != "Other") |> # He 2022 sevoflurane
  mutate(
    surg_f = fct_rev(factor(surg_f, levels = c("Ortho", "Cardiac", "GI/Abd", "Thoracic", "Oralmax", "ENT", "Spine", "Various", "Any", "Plac/None"))),
    surg_f = fct_recode(surg_f, Plac = "Plac/None"),
    arm = fct_recode(arm, Plac = "Plac/None")
  ) |>
  ggplot(aes(deli_prop, surg_f)) +
  geom_boxplot(width = 0.2, outliers = FALSE) +
  geom_jitter(aes(color = arm)) + # geom_point(aes(color = arm)) 
  scale_colour_manual(values = c("#e41a1c", "#8B0000", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#D4AC0D", "#170a8a", "black", "gray")) +
  labs(y = "", x = "Incidence Proportion") +
  scale_x_continuous(limits = c(0, 1), labels = scales::percent) +
  theme(
    axis.text.x = element_text(size = 11),
    axis.text.y = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.position = "right",
    legend.title = element_blank()
  )

```

<foot_mg>Dex: dexmedetomidine; Ket: ketamine; Mel: melatonin; Ram: ramelteon; Oxaz: oxazepam; MS: morphine sulfate; Prop: propofol; Plac: placebo or no active comparator. <br/> The "Any" and "Plac" box plots are not mutually exclusive. <br/> Outliers not designated. </foot_mg>
:::

### Dexmedetomidine

<caption_mg> `r table_ref()` Delirium incidence and ascertainment during hospitalization in randomized clinical trials of dexmedetomidine. </caption_mg>

```{r delirium_total_dex_tab}

dex_refid_rct <- study_char_dat |> 
  filter(refid %in% dex_refid) |>
  filter(str_detect(design_f_lab, "Randomized Clinical Trial")) |> 
  pull(refid)

delirium_total_tab <- delirium_total_tab_fun(dex_refid_rct) |> 
  left_join(dex_by_arm |> select(refid, dex_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = dex_groups) |> 
  mutate(delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time)) |> 
  left_join(dex_by_arm |> select(refid, timing_all, arm_id), by = c("refid", "arm_id")) 
            
refid_max_of_days <- delirium_total_tab |> 
  filter(delitotal_time == "Note") |> 
  mutate(refid = as.numeric(refid)) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

delirium_total_tab |>
  arrange(year, study, arm_id) |>
  group_by(study_l) |>
  mutate(
    delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
    study_l = ifelse(row_number() > 1, "", study_l),
    delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
    scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
    bar = case_when(
      drug_recode_abbr == "Dex" ~ bar_prop(calc_percent, "#A93226"),
      str_detect(drug_recode_abbr, "Prop|Mid|Preg|Dex/Preg") ~ bar_prop(calc_percent, "#104E8B"),
      .default = bar_prop(calc_percent, "#969696")
    ),
  ) |>
  ungroup() |>
  rename(drug_recode = drug_recode_abbr) |>
  group_by(compare_groups) |>
  gt(id = "one") |>
  cols_hide(c(year, refid, refid_c, arm_id, study, design_f_lab, pre_mmse, age_table, calc_percent)) |>
  cols_label(
    study_l = "Study",
    arm_n = " N",
    # age_table = "  Age",
    drug_recode = md("Arm"),
    # pre_mmse = md("  MMSE<br/>  (preop)"),
    scale_delirium = "Scale",
    delitotal_time = "Day(s)",
    n_percent = "N (%)",
    bar = "0 – 100%",
    rr_ci = "RR (95% CI)", 
    timing_all = "Timing"
  ) |>
  fmt_markdown(columns = c(study_l, bar)) |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(80),
    # age_table ~ px(100),
    drug_recode ~ px(70),
    # pre_mmse ~ px(95),
    scale_delirium ~ px(105),
    delitotal_time ~ px(55),
    n_percent ~ px(90),
    bar ~ px(100),
    rr_ci ~ px(140),
    timing_all ~ px(85)
  ) |>
  tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  text_replace("- Randomized Clinical Trial", "", locations = cells_row_groups()) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(study, drug_recode, scale_delirium))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, delitotal_time, rr_ci))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(drug_recode, scale_delirium, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_column_labels(columns = c(n_percent))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(n_percent))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:timing_all), rows = drug_recode == "Dex")) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Oralmax: oral and maxillofacial; Ophtho; ophthalmologic; Urol: urologic; RR: risk ratio; Dex: dexmedetomidine; Mid: midazolam; Prop: propofol; Preg: pregabalin; Plac: placebo; DSM: Diagnostic and Statistical Manual of Mental Disorders; ICDSC: Intensive Care Delirium Screening Checklist; Psych: psychiatrist interview; Nu-DESC: Nursing Delirium Screening Scale; NS: not specified.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Day(s) over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |>
  tab_footnote("Tool reported in the `Chinese Expert Consensus on the Prevention and Treatment of Postoperative Delirium in Elderly Patients.'", locations = cells_body(columns = scale_delirium, rows = scale_delirium == "Note")) |>
  tab_footnote("Postoperative dexmedetomidine only.", locations = cells_body(columns = drug_recode, rows = refid %in% postop_only_dat$refid & rr_ci != "—")) |>
  tab_footnote("Reported only daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |>
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = n_percent, rows = refid %in% refid_max_of_days), placement = "right") |>
  tab_footnote("Primary outcome was delirium on postoperative day 1 — OR 0.32 (95% CI, 0.10–0.83)", locations = cells_body(columns = rr_ci, rows = str_detect(n_percent, "14 \\(7.4\\)"))) |> # Qu 2023
  tab_footnote("Bars indicate adminstration times from left to right: preoperative, induction, intraoperative, and postoperative (includes PACU).", locations = cells_column_labels(columns = c(timing_all))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:pre_mmse, rr_ci), rows = str_detect(drug_recode, "Prop|Mid|Preg|Dex/Preg"))) 

# rm(refid_max_of_days)

```

```{r timing_checks}
#| eval: false

delirium_total_tab |> 
  filter(drug_recode_abbr == "Dex") |>
  # group_by(study_l) |>
  # slice(1) |> 
  # ungroup() |> 
  filter(refid %in% dex_plac_refid) |> 
  arrange(timing_all) |> 
  tabyl(timing_all) |> 
  adorn_totals("row") 

```


<a id="ketamine_incidence"></a>

### Ketamine

<caption_mg> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in ketamine studies. </caption_mg>

```{r delirium_total_ket_tab}
delirium_total_ket_dat <- delirium_total_tab_fun(ket_refid) |> 
  left_join(ket_by_arm |> select(refid, ket_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = ket_groups)

delirium_total_ket_dat |>
    arrange(year, study, arm_id) |>
    group_by(study_l) |>
    mutate(
      delitotal_time = ifelse(delitotal_time == 999, "Stay", as.character(delitotal_time)),
      study_l = ifelse(row_number() > 1, "", study_l),
      delitotal_time = ifelse(row_number() > 1, "", delitotal_time),
      scale_delirium = ifelse(row_number() > 1, "", scale_delirium),
      bar = case_when(
        str_detect(drug_recode_abbr, "Ket") ~ bar_prop(calc_percent, "#A93226"),
        .default = bar_prop(calc_percent, "#969696")
      ),
    ) |>
    ungroup() |>
    rename(drug_recode = drug_recode_abbr) |>
    group_by(compare_groups) |>
    gt(id = "one") |>
    cols_hide(c(year, refid, refid_c, arm_id, study, design_f_lab, pre_mmse, age_table, calc_percent)) |>
    cols_label(
      study_l = "Study",
      arm_n = " N",
      # age_table = "  Age",
      drug_recode = md("Arm"),
      # pre_mmse = md("  MMSE<br/>  (preop)"),
      scale_delirium = "Scale",
      delitotal_time = "Day(s)",
      n_percent = "N (%)",
      bar = "0 – 100%",
      rr_ci = "RR (95% CI)"
    ) |>
    fmt_markdown(columns = c(study_l, bar)) |>
    fmt_number(columns = c(arm_n), use_seps = TRUE, drop_trailing_zeros = TRUE) |>
    tab_spanner(label = "Incidence Proportion", columns = c(n_percent, bar)) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_recode, scale_delirium))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, delitotal_time, rr_ci))) |>
    tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_recode, scale_delirium, bar))) |>
    tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(delitotal_time, rr_ci))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(n_percent))) |>
    tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(n_percent))) |>
    tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:n_percent), rows = str_detect(drug_recode, "Ket"))) |>
    gt_theme_mg() |>
    cols_width(
      study_l ~ px(165),
      arm_n ~ px(80),
      # age_table ~ px(100),
      drug_recode ~ px(55),
      # pre_mmse ~ px(95),
      scale_delirium ~ px(105),
      delitotal_time ~ px(55),
      n_percent ~ px(90),
      bar ~ px(100),
      rr_ci ~ px(140)
    ) |> 
  tab_footnote("RR: risk ratio; Ket: ketamine; Plac: placebo; Prop: propofol; Hal: haloperidol; ICDSC: Intensive Care Delirium Screening Checklist; CAM: Confusion Assessment Method; Nu-DESC: Nursing Delirium Screening Scale; ICD: ICD codes.") |>
  tab_footnote("Claims-based algorithm.", locations = cells_body(columns = scale_delirium, rows = str_detect(study_l, "Memtsoudis"))) |>
  # tab_footnote(md("Mean <u>Med</u> (SD) {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence assessed. Stay indicates duration of hospital stay.", locations = cells_column_labels(columns = delitotal_time))  

```

<a id="mel_ram_incidence"></a>

### Melatonin/Ramelteon

<caption_mg> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in melatonin and ramelteon studies. </caption_mg>

```{r delirium_total_mel_ram_tab}
refid_max_of_days <- delirium_total_tab |> 
  filter(delitotal_time == "Note") |> 
  mutate(refid = as.numeric(refid)) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

delirium_total_tab <- delirium_total_tab_fun(mel_ram_refid) |> 
    left_join(mel_ram_by_arm |> select(refid, mel_ram_groups) |> distinct(), by = c("refid")) |> 
  mutate(scale_delirium = ifelse(refid == 3841, "CAM/DRS/DSM", scale_delirium)) |> 
  rename(compare_groups = mel_ram_groups) |> 
  mutate(delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time))

delirium_total_mel_ram_gt <- delirium_total_gt_fun("Mel|Ram|Mel/Dex") 

delirium_total_mel_ram_gt |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "GI/Abd - Before-After/Time Series", "Thoracic - Before-After/Time Series")) |> 
  tab_footnote("RR: risk ratio; MMSE: Mini-Mental State Examination; Mel: melatonin; Ram: ramelteon; Dex: dexmedetomidine; Oxaz: oxazepam; Mid: midazolam; AMT: Abbreviated Mental Test; DRS: Delirium Rating Scale; DSM: Diagnostic and Statistical Manual of Mental Disorders; CAM: Confusion Assessment Method; ICDSC: Intensive Care Delirium Screening Checklist.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Day(s) over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |> 
  tab_footnote("Reported only daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = n_percent, rows = refid %in% refid_max_of_days), placement = "right")

rm(refid_max_of_days)
```

<a id="dex-plac-meta"></a>

### *Pooled*

```{r delirium_nma_meta_dat}

# FIXME: Correct Weinstein summary

nma_rct_dat <- delirium_meta_dat |> 
  mutate(arm = fct_collapse(arm, "Benzo" = c("Oxaz", "Mid"))) |>
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  filter(str_detect(design_f_lab, "Random")) |> 
  mutate(across(c(arm, design_f_lab), ~ fct_drop(.x))) |> 
  select(refid, study, year, arm, delitotal_n, arm_n)

# write_csv(nma_rct_dat, "data/nma_rct_dat.csv", na = "")

trts <- levels(nma_rct_dat$arm)

pairs_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = nma_rct_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_nma <- netmeta(
  pairs_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts,
  sm = "RR",
  reference.group = "Plac/None"
)

pairwise_dat <- pairs_dat |> 
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = "refid") |>
  left_join(dichot_dat |> select(refid, delirium_inc_prop) |> group_by(refid) |> slice(1) |> ungroup(), by = "refid") |> 
  left_join(postop_only_dat, by = "refid") |> 
  left_join(postop_any_dat, by = "refid") |> 
  rename(surg_f = surgs_single_f)  |> 
  select(refid, studlab, study, treat1, treat2, event1, n1, event2, n2, country, surg_f, year, postop_only, postop_any, delirium_inc_prop) |> 
  mutate(china_vs_other = ifelse(country == "China", "China", "Other countries")) |> 
  unite(to_select, treat1:treat2, sep = "|", remove = FALSE) |> 
  arrange(year, study) 

nma_rct_melram_dat <- nma_rct_dat |> 
  mutate(arm = fct_collapse(arm, "Mel/Ram" = c("Mel", "Ram")))

trts_melram <- levels(nma_rct_melram_dat$arm)

pairs_melram_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = nma_rct_melram_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_melram_nma <- netmeta(
  pairs_melram_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts_melram,
  sm = "RR",
  reference.group = "Plac/None"
)

pairs_melram_or_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = nma_rct_melram_dat,
  sm = "OR",
  keep.all.comparisons = TRUE
)

netmeta_melram_or_nma <- netmeta(
  pairs_melram_or_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts_melram,
  sm = "OR",
  reference.group = "Plac/None"
)

```

#### Dexmedetomidine

<caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention. </caption_mg>

```{r dex_meta}
dex_plac_refid <- pairwise_dat |> 
  filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex")) |> 
  pull(refid)

dex_meta_dat <- pairwise_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  filter(refid %in% dex_plac_refid) |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall, china_vs_other, postop_only, postop_any, delirium_inc_prop, surg_f) |>
  mutate(
    postop_only = ifelse(!is.na(postop_only), "Only postop", "Any preop through intraop ± postop"),
    postop_any = ifelse(!is.na(postop_any), "Postop ± preop through intraop", "Any preop through intraop (no postop)"),
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    study = ifelse(china_vs_other == "China", paste0(study, "*"), study),
    size = n1 + n2,
    # total_samp = n1 + n2,
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  ) |> 
  arrange(year, study)

dex_meta_baseline_dat <- dex_meta_dat |> 
  mutate(
    baseline_risk = event1 / n1,
    baseline_cat = case_when(
      baseline_risk < 0.15 ~ "<15%",
      baseline_risk >= 0.15 & baseline_risk <= 0.3 ~ "10-30%",
      baseline_risk > 0.3 ~ ">30%"
    ),
    baseline_cat = factor(baseline_cat, levels = c("<15%", "10-30%", ">30%"))
  ) 

# length(unique(dex_plac_refid))
# toString(sort(dex_plac_refid))
# total_meta(dex_meta_dat)

dex_plac_meta <- metabin(event2, n2, event1, n1,
  data = dex_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "HK",
  method.predict = "HK",
  prediction = TRUE,
  allstudies = TRUE
)

dex_plac_meta_size <- metabin(event2, n2, event1, n1,
  data = dex_meta_dat |> arrange(size),
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "HK",
  method.predict = "HK",
  prediction = TRUE,
  allstudies = TRUE
)

dex_plac_base_sub_meta <- metabin(event2, n2, event1, n1,
  data = dex_meta_baseline_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "HK",
  method.predict = "HK",
  prediction = TRUE,
  allstudies = TRUE,
  subgroup = baseline_cat
)

dex_meta_noasterisk_dat <- dex_meta_dat |> 
  mutate(study = str_remove(study, "\\*")) 

dex_plac_noasterisk_meta <- metabin(event2, n2, event1, n1,
  data = dex_meta_noasterisk_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "HK",
  method.predict = "HK",
  prediction = TRUE,
  allstudies = TRUE
)

dex_plac_country_meta <- update(dex_plac_noasterisk_meta, subgroup = china_vs_other, prediction.subgroup = TRUE)
dex_plac_china_meta <- update(dex_plac_noasterisk_meta, subset = china_vs_other == "China", subgroup = NULL)
dex_plac_other_meta <- update(dex_plac_noasterisk_meta, subset = china_vs_other != "China", subgroup = NULL)

# small study effects using OR (temp)
temp_meta <- update(dex_plac_meta, subgroup = NULL, sm = "OR")
temp_china_meta <- update(dex_plac_meta, subgroup = NULL, sm = "OR", subset = china_vs_other == "China")
temp_other_meta <- update(dex_plac_meta, subgroup = NULL, sm = "OR", subset = china_vs_other != "China")

temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)
# temp_metabias <- metabias(temp_meta, method.bias = "Thompson", k.min = 10)
temp_china_metabias <- metabias(temp_china_meta, method.bias = "Harbord", k.min = 10)
temp_other_metabias <- metabias(temp_other_meta, method.bias = "Harbord", k.min = 10)

dex_meta_forest <- function(data_meta, ...) {
forest(data_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4,
  ...
)  
}

dex_meta_forest_sub <- function(data_meta) {
forest(data_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  subgroup = TRUE,
  prediction.subgroup = TRUE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
)  
}

dex_meta_forest_surg_sub <- function(data_meta, surgery, hk = "HK", hk_predict = "HK", prediction_forest = TRUE, ...) {
  
data_meta <- update(data_meta,
  method.random.ci = hk,
  method.predict = hk_predict,  
  subset = surg_f == surgery
)  
  
forest(data_meta,
  allstudies = TRUE,
  common = TRUE,
  main = paste("Surgery:", surgery),
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = prediction_forest,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4,
  ...
)  
}

# summary(update(dex_plac_meta, subset = study != c("Turan 2020")))
# bias table
# tabyl(dex_plac_meta$dat$Overall)
# meta_ancred(update(dex_plac_meta, subset = china_vs_other == "China"))
# meta_ancred(dex_plac_meta)

# save dex_meta_dat for sensitivity analysis
dex_sens_dat <- dex_meta_dat |> 
  select(study, event1, n1, event2, n2, size) 
  # mutate(
  #   study = str_remove(study, "\\*")
  # ) 

# write_csv(dex_sens_dat, "data/dex_meta_dat_sens.csv")

```

```{r dex_delirium_all_forest}
#| echo: false
#| include: false

png("assets/kq6_dex_delirium_all.png", width = 9.78, height = 9, units = "in", res = 300)
dex_meta_forest(dex_plac_meta, text.addline2 = risk_diff_meta_rr(dex_plac_meta, scale = 100))
dev.off() 

# sort by size
# forest(dex_plac_meta,
#   allstudies = TRUE,
#   common = TRUE,
#   label.e = "Dex     ",
#   label.c = "Plac/None  ",
#   rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
#   rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "All"),
#   just.addcols.right = "left",
#   digits = 2,
#   digits.tau2 = 1,
#   overall.hetstat = TRUE,
#   print.I2.ci = TRUE,
#   prediction = TRUE,
#   fs.xlab = 11,
#   pooled.events = TRUE,
#   print.pval.Q = FALSE,
#   xlim = c(0.1, 3),
#   xlab = "Favors: Dexmedetomidine               Placebo/None",
#   addrows.below.overall = 4,
#   sortvar = size
# )

```

![](assets/kq6_dex_delirium_all.png){fig.align="left" width="70%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <a id="figure-4"></a><br/> `r paste0("Harbord test for small study effects P = ", formatC(temp_metabias$pval, digits = 5, format = "f"), ".")`<br/> `r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, dex_plac_refid), "; a secondary outcome in ", prim_sec_out_fun(sec_delirium, dex_plac_refid), ".")`<br/> Excluding Turan 2020: RR 0.56 (95% CI, 0.49-0.64; *I*<sup> 2</sup> = 21%, $\tau$<sup>2</sup>. <br/>\*Trials conducted in China.</foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### Meta-analysis methods detail.

```{r}
#| include: false  

temp <- print(dex_plac_meta) |> 
  str_replace_all("\\n", "<br/> ") |>
  str_remove("<br/> Details on meta-analytical method:<br/> ") |> 
  str_replace_all("tau\\^2", "tau<sup>2</sup>") |> 
  str_replace_all("tau", "&tau;")

```

<foot_mg> `r temp` </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}  
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **China vs. other countries**. </caption_mg>

```{r dex_delirium_country}
#| echo: false
#| include: false

png("assets/kq6_dex_delirium_country.png", width = 9.81, height = 11.5, units = "in", res = 300)
dex_meta_forest_sub(dex_plac_country_meta)
dev.off()

temp_metareg <- update(dex_plac_country_meta, tau.common = TRUE, common = FALSE, method.tau = "REML", method.random.ci = "HK")
temp_metareg <- metareg(temp_metareg)

```

![](assets/kq6_dex_delirium_country.png){fig.align="left" width="70%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <br/> Meta-regression (China vs. Other), *I*<sup> 2</sup> = `r paste0(digit0(temp_metareg$I2), "%.")` </foot_mg>
::: 

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **small study effects**. </caption_mg>  

```{r dex_plac_meta_funnel_limit}
#| echo: false
#| include: false
  
temp_meta <- update(dex_plac_meta, sm = "OR")
temp_limit_meta <- limitmeta(temp_meta)

png("assets/kq6_dex_delirium_all_funnel.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
funnel(temp_limit_meta, ylim = c(0.9, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, cex.studlab = 0.6, ff.smlab = "italic")
legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = limit_colors, bty = "n")
text(1.15, 0.05, labels = "Adjusted estimate", col = "#5a5a5a", pos = 3, cex = .9)
dev.off()

# copas(temp_meta)
# trimfill(temp_meta)
# temp_limit_meta <- limitmeta(temp_meta, method.adjust = "betalim")
# metabias(temp_meta, method = "Harbord")$pval
# metabias(update(temp_meta, subset = study != "Turan 2020"), method = "Harbord") = 0.0006 no Turan

```

![](assets/kq6_dex_delirium_all_funnel.png){width="70%"}

<foot_mg> Estimates from random effects models --- unadjusted OR `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (95% CI, ", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects in a limit meta-analysis OR `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (95% CI, ", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.<br/> \*Trials conducted in China.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **significance funnel plots**. </caption_mg>

```{r significance_funnel_plot}
#| echo: false
#| include: false

dat <- metafor::escalc(measure = "RR", ai = event2, n1i = n2, ci = event1, n2i = n1, data = dex_sens_dat)

png("assets/kq6_significance_funnel_plot.png", width = 8.5, height = 5.5, units = "in", res = 300)
PublicationBias::significance_funnel(yi = dat$yi, vi = dat$vi, favor_positive = FALSE, alpha_select = 0.05) + # scale_x_continuous(labels=latex2exp::TeX(c("$Test^{89}$","$Oh_{i,j}^{99}$")))
  scale_x_continuous(breaks = c(-0.9163, -.5, -.2231, 0), labels = c("0.4", "0.5", "0.8", "1")) + 
  xlab("RR") + 
  scale_y_continuous() + ylab("SE(log[RR])") +
  theme(
    axis.text.y = element_text(size = 15), 
    axis.text.x = element_text(size = 15),
    axis.title.y = element_text(size = 16),
    axis.title.x = element_text(size = 16),
    legend.text = element_text(size = 16)) 
dev.off()

```

```{r significance_funnel_plot_nonchina}
#| echo: false
#| include: false

dex_sens_nonchina_dat <- dex_sens_dat |> filter(!str_detect(study, "\\*"))

dat <- metafor::escalc(measure = "RR", ai = event2, n1i = n2, ci = event1, n2i = n1, data = dex_sens_nonchina_dat)

png("assets/kq6_significance_funnel_plot_nonchina.png", width = 8.5, height = 5.5, units = "in", res = 300)
PublicationBias::significance_funnel(yi = dat$yi, vi = dat$vi, favor_positive = FALSE, alpha_select = 0.05) + 
  scale_x_continuous(breaks = c(-0.9163, -.5, -.2231, 0), labels = c("0.4", "0.5", "0.8", "1")) + 
  xlab("RR") + 
  scale_y_continuous() + ylab("SE(log[RR])") +
  theme(
    axis.text.y = element_text(size = 15), 
    axis.text.x = element_text(size = 15),
    axis.title.y = element_text(size = 16),
    axis.title.x = element_text(size = 16),
    legend.text = element_text(size = 16)) 

dev.off()

```

::: {layout-ncol=2}
![All Trials](assets/kq6_significance_funnel_plot.png){fig.align="left" width="65%"}

![Trials conducted outside China](assets/kq6_significance_funnel_plot_nonchina.png){fig.align="left" width="65%"}
:::

<foot_mg> Black diamond represents pooled estimate for all studies and the grey for only non-affirmative ones (p>0.05). For the entire set of included trials, achieving a non-significant result would require affirmative studies >50 times more like to be published and unlikely plausible (see [Mathur 2024](https://www.bmj.com/content/384/bmj-2023-076851.full.pdf) and [Mathur 2020](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7590147/pdf/RSSC-69-1091.pdf)). For trials conducted outside of China, the pooled result for non-affirmative trials is null.</foot_mg> 

:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **small study effects for trials conducted in China**. </caption_mg>

```{r dex_plac_china_meta_funnel_limit}
#| echo: false
#| include: false

temp_limit_meta <- limitmeta(temp_china_meta, method.adjust = "beta0")
# temp_limit_meta <- limitmeta(temp_china_meta, method.adjust = "betalim") 

png("assets/kq6_dex_delirium_china_funnel.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
funnel(temp_limit_meta, ylim = c(0.9, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, cex.studlab = 0.6, ff.smlab = "italic")
legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
text(0.98, 0.05, labels = "Adjusted estimate", col = "#5a5a5a", pos = 3, cex = .9)
dev.off()

```

![](assets/kq6_dex_delirium_china_funnel.png){width="70%"}


<foot_mg> Estimates from random effects models --- unadjusted OR `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (95% CI, ", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects in a limit meta-analysis OR `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (95% CI, ", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.<br/> `r paste0("Harbord test for small study effects P = ", formatC(temp_metabias$pval, digits = 4, format = "f"), ".")`<br/></foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}  
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **small study effects in trials conducted outside of China**. </caption_mg>

```{r dex_plac_other_meta_funnel}
#| echo: false
#| include: false

temp_limit_meta <- limitmeta(temp_other_meta, method.adjust = "beta0")
# temp_limit_meta <- limitmeta(temp_meta, method.adjust = "betalim") 

png("assets/kq6_dex_delirium_other_funnel.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
funnel(temp_limit_meta, ylim = c(0.9, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, cex.studlab = 0.6, ff.smlab = "italic")
legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
text(1.6, 0.05, labels = "Adjusted estimate", col = "#5a5a5a", pos = 3, cex = .9)
dev.off()

```

![](assets/kq6_dex_delirium_other_funnel.png){width="70%"}

<foot_mg> Estimates from random effects models --- unadjusted OR `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (95% CI, ", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects in a limit meta-analysis OR `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (95% CI, ", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.<br/> `r paste0("Harbord test for small study effects P = ", formatC(temp_other_metabias$pval, digits = 4, format = "f"), ".")`<br/></foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}  
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **postoperative administration only or at other times**. </caption_mg>

```{r meta_dat_postop_only}
#| echo: false
#| include: false

# TODO: verify timing
dex_plac_meta_postop <- update(dex_plac_meta, subgroup = postop_only, method.predict = "HK", prediction.subgroup = TRUE)

png("assets/kq6_dex_plac_meta_postop.png", width = 9.79, height = 11.5, units = "in", res = 300)
dex_meta_forest_sub(dex_plac_meta_postop)
dev.off()

rm(dex_plac_meta_postop)
```

![](assets/kq6_dex_plac_meta_postop.png){fig.align="left" width="70%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> \*Trials conducted in China.</foot_mg><a id="figure-7"></a>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **any postoperative administration or at other times**. </caption_mg>

```{r meta_postop_any}
#| echo: false
#| include: false

dex_plac_meta_postop_any <- update(dex_plac_meta, subgroup = postop_any)

png("assets/kq6_dex_plac_meta_postop_any.png", width = 9.79, height = 11.5, units = "in", res = 300)
dex_meta_forest_sub(dex_plac_meta_postop_any)
dev.off()

rm(dex_plac_meta_postop_any)
```
![](assets/kq6_dex_plac_meta_postop_any.png){fig.align="left" width="70%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> \*Trials conducted in China.</foot_mg><a id="figure-7"></a>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **by surgical category**. </caption_mg>

```{r nma_dat_postop}
#| echo: false
#| include: false

png("assets/kq6_dex_plac_meta_ortho.png", width = 10.5, height = 7.5, units = "in", res = 300)
dex_meta_forest_surg_sub(dex_plac_meta, "Ortho", "HK", "HK")
dev.off()
trim_image("kq6_dex_plac_meta_ortho.png")

png("assets/kq6_dex_plac_meta_various.png", width = 10.5, height = 7.5, units = "in", res = 300)
dex_meta_forest_surg_sub(dex_plac_meta, "Various", "HK", "HK")
dev.off()
trim_image("kq6_dex_plac_meta_various.png")

png("assets/kq6_dex_plac_meta_cardiac.png", width = 10.5, height = 7.5, units = "in", res = 300)
dex_meta_forest_surg_sub(dex_plac_meta, "Cardiac", "HK", "HK")
dev.off()
trim_image("kq6_dex_plac_meta_cardiac.png")

png("assets/kq6_dex_plac_meta_thoracic.png", width = 10.5, height = 7.5, units = "in", res = 300)
dex_meta_forest_surg_sub(dex_plac_meta, "Thoracic", "HK", "HK")
dev.off()
trim_image("kq6_dex_plac_meta_thoracic.png")

png("assets/kq6_dex_plac_meta_gi-abd.png", width = 10.5, height = 7.5, units = "in", res = 300)
dex_meta_forest_surg_sub(dex_plac_meta, "GI/Abd", "classic", "HTS", prediction_forest = FALSE)
dev.off()
trim_image("kq6_dex_plac_meta_gi-abd.png")

```

<br/>

Orthopedic 

![](assets/kq6_dex_plac_meta_ortho.png){fig.align="left" width="68%"}
Various

![](assets/kq6_dex_plac_meta_various.png){fig.align="left" width="68%"}

Cardiac

![](assets/kq6_dex_plac_meta_cardiac.png){fig.align="left" width="68%"}

Thoracic

![](assets/kq6_dex_plac_meta_thoracic.png){fig.align="left" width="68%"}

GI/Abdominal

![](assets/kq6_dex_plac_meta_gi-abd.png){fig.align="left" width="68%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <br/> Hartung-Knapp adjustment not applied owing to \< 5 trials in some subgroups.<br/> \*Trials conducted in China.</foot_mg><a id="figure-7"></a>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **according to risk of bias appraisal**. </caption_mg>

```{r nma_dat_rob}
#| echo: false
#| include: false

dex_rob_meta <- update(dex_plac_meta, subgroup = rob)

png("assets/kq6_dex_rob_meta.png", width = 9.79, height = 12.65, units = "in", res = 300)
dex_meta_forest_sub(dex_rob_meta)
dev.off()

rm(dex_rob_meta)
```
![](assets/kq6_dex_rob_meta.png){fig.align="left" width="70%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> \*Trials conducted in China.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` <a id="figure-china"></a> Dexmedetomidine compared with placebo or no intervention --- **according to reporting incidence proportion**. </caption_mg>

```{r dex_meta_sens_incidence_prop}
#| echo: false
#| include: false

delirium_inc_pro_meta <- update(dex_plac_meta, subgroup = delirium_inc_prop)
png("assets/kq6_delirium_inc_pro_meta.png", width = 9.78, height = 11.5, units = "in", res = 300)
dex_meta_forest_sub(delirium_inc_pro_meta)
dev.off()

rm(delirium_inc_pro_meta)
```
![](assets/kq6_delirium_inc_pro_meta.png){fig.align="left" width="70%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> Hartung-Knapp adjustment not applied.<br/> \*Trials conducted in China.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Placebo delirium incidence proportion and relative effects (standard and Bayesian meta-regression models). </caption_mg> <a id="dex-bubble-plot"></a>
```{r bubble_plot_delirium}
#| echo: false
#| include: false

# temp <- update(dex_plac_meta, subset = size < 150, sm = "OR")
temp <- update(dex_plac_meta, sm = "OR")
temp <- bubble_plot_data(temp) |> 
  mutate(china = str_detect(slab, "\\*"))
# temp <- bubble_plot_data(dex_plac_meta) 

fitted_meta <- metafor::rma(yi = yi_meta, sei = sei_meta, mods = ~ I(control_event_rate), slab = slab, method = "DL", data = temp)
# fitted_meta <- metafor::rma(yi = yi_meta, sei = sei_meta, mods = ~ I(control_event_rate) * china, slab = slab, method = "DL", data = temp)

png("assets/kq6_delirium_meta_bubble.png", width = 8, height = 6, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
metafor::regplot(fitted_meta,
  xlab = "Placebo delirium incidence proportion (baseline risk)",
  ylab = "Odds Ratio", 
  # xlim = c(0.05, 0.61),
  # at = log(c(0.2, 0.4, 0.57, 0.8, 1, 2)),
  xlim = c(0.0, 0.67),
  at = log(c(0.1, 0.2, 0.4, 0.57, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6)),
  # predlim = c(0, 0.30),
  atransf = exp, 
  labsize = 0.7, 
  las = 1,
  label = TRUE,
  offset = c(0.2, 1),
  lwd = 0.5,
)
plotrix::ablineclip(log(0.57), 0, col = "red", lty = 2, lwd = 0.75, x1 = 0.05, x2 = 0.64)
plotrix::ablineclip(0, 0, col = "black", lty = 2, lwd = 0.75, x1 = 0.05, x2 = 0.64)
dev.off()

rm(temp, fitted_meta)

```
<foot_mg> Bubble plot of control arm/baseline delirium risk and odds ratios. Bubble size proportional to the number of patients. The red dashed line represents the pooled risk ratio. Obtained from a standard meta-regression.</foot_mg>      

![](assets/kq6_delirium_meta_bubble.png){width="70%"}

<br/>

<caption_mg> Similar plot for odds ratios obtained from a Bayesian meta-regression (fitted using Stan and multinma). </caption_mg>

<br/>

![](assets/kq6_bubble_dex_plac_stan.png){fig.align="left" width="70%"}

:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Risk ratios according to baseline risk subgroups (placebo delirium incidence proportion) — <15%, 15% to 30%, and >30%. </caption_mg> <a id="dex-bubble-plot"></a>

```{r baseline_risk_dex_subgroups}
#| echo: false
#| include: false

png("assets/kq6_dex_plac_base_sub_meta.png", width = 10.5, height = 14, units = "in", res = 300)
dex_meta_forest_sub(dex_plac_base_sub_meta)
dev.off()

trim_image("kq6_dex_plac_base_sub_meta.png")

```

![](assets/kq6_dex_plac_base_sub_meta.png){fig.align="left" width="68%"}
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Summary risk of bias from randomized clinical trials of dexmedetomidine compared with placebo or no intervention (delirium, weighted). </caption_mg>

```{r rob2_summary_dex_plac, fig.height = 3, out.width = "60%"}
rob_summary_meta_weighted_fun(dex_plac_meta)
```
:::

####    Subgroup Summary

<caption_mg> `r figure_ref()` Summary of subgroup results. </caption_mg>

```{r dex_subgroup_summary}

subgroup_dat <- readxl::read_excel(
  "data/forester_data.xlsx",
  sheet = "dex_subgroups_risk",
  range = "A1:H27"
) |>
  mutate(
    Subgroup = ifelse(!is.na(Studies) & Subgroup != "Overall", paste0("   ", Subgroup), Subgroup),
    Subgroup = ifelse(Subgroup  %in% c("<15%", "15% to 30%", ">30%"), paste0("   ", Subgroup), Subgroup),
    # Subgroup = str_remove(Subgroup, "^a"),
    `   I²` = ifelse(!is.na(`   I²`), paste0(as.character(round(`   I²`*100, 0)), "%   "), NA)
    # Subgroup = ifelse(Subgroup  %in% c("0.10", "0.20", "0.40"), paste0("    ", Subgroup), Subgroup)
  )
  # rename("         Dex" = Dex)

with(subgroup_dat,
  forester::forester(
  left_side_data = subgroup_dat[, c(1, 2, 3, 4, 8)],
  estimate = rr,
  estimate_col_name = "Risk Ratio (95% CI)",
  ci_low = `CI low`,
  ci_high = `CI high`,
  ci_sep = "–",
  display = FALSE,
  estimate_precision = 2,
  add_plot_gap = TRUE,
  null_line_at = 1,
  # arrows = TRUE,
  # nudge_y = -.3,
  # nudge_width = 1.2,
  # null_line_at = 1.5,
  justify = c(0, 0.5, 0.5, 0.5, 0.5, 0),
  xbreaks = c(0.2, 0.5, 1, 1.5),
  # uncomment to save file
  file_path = "assets/subgroup_summary.png",
  font_family = "Fira Sans",
  xlim = c(0.2, 1.5),
  arrows = TRUE,
  arrow_labels = c("Dexmedetomidine Better", "Placebo Better")
)
)


```

![](assets/subgroup_summary.png){#subgroup_summary width="75%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio. </foot_mg>

<!-- <a id="timing-network-meta-analysis"></a> -->

<!-- {{< include timing-NMA.qmd >}} -->

<a id="ketamine_meta_rct"></a>

#### Ketamine

<caption_mg> `r figure_ref()` Ketamine compared with placebo (randomized clinical trials). </caption_mg>

```{r ket_meta}
#| echo: false
#| include: false

ket_plac_refid <- pairwise_dat |> 
  filter(str_detect(to_select, "Plac") & str_detect(to_select, "Ket")) |> 
  pull(refid)

ket_meta_dat <- pairwise_dat |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(refid %in% ket_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, china_vs_other)

ket_plac_meta <- metabin(event2, n2, event1, n1,
  data = ket_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "classic",
  method.predict = "HTS",
  hakn = FALSE,
  prediction = TRUE,
  allstudies = TRUE,
  )

png("assets/kq6_ket_plac_meta.png", width = 9.78, height = 3.4, units = "in", res = 300)
forest(ket_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Ketamine",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Ketamine               Placebo",
  addrows.below.overall = 4,
  addrows.below = 1,
  text.addline2 = risk_diff_meta_rr(ket_plac_meta, scale = 100)
)
dev.off()

# soe_meta_result_rr_or(ket_plac_meta, "RR")
# soe_meta_rd_rr(ket_plac_meta)
```
![](assets/kq6_ket_plac_meta.png){fig.align="left" width="72%"}

<foot_mg> D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . </foot_mg> <br/>

<a id="ketamine_meta_nrsi"></a>

<br/>

<caption_mg> `r figure_ref()` Ketamine compared with placebo (non-randomized studies). </caption_mg>

```{r ket_nrsi_meta, fig.width = 14, fig.height = 3, fig.align = "left"}
#| include: false
#| echo: false

ket_nrsi_dat <- delirium_meta_dat |>
  group_by(refid) |>
  filter(any(arm %in% c("Ket"))) |>
  filter(design_f_lab != "Randomized Clinical Trial") |>
  ungroup()

# adjusted odds ratios when reported
or_adjusted <- dichot_dat |> 
  filter(refid %in% ket_nrsi_dat$refid) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  rename(arm = drug_recode_abbr) |>
  relocate(arm, .after = arm_id) |> 
  filter(if_all(c(delitotal_effect, delitotal_95low, delitotal_95high), ~ !is.na(.x))) |> 
  mutate(TE_adj = log(delitotal_est), seTE_adj = se_ci_fun(log(delitotal_95low), log(delitotal_95high))) |> 
  select(refid, TE_adj, seTE_adj)
  # select(refid, arm, arm_id, study, TE, seTE, delitotal_est, delitotal_effect, delitotal_95low, delitotal_95high, delitotal_adjcrude) 

# get odds ratios from all studies
pairwise_ket_nrsi_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = ket_nrsi_dat,
  sm = "OR",
  keep.all.comparisons = TRUE
  ) |>
  mutate(
    treat2 = "Ketamine",
    treat1 = "None"
  ) |>
  group_by(study) |>
  slice(1) |>
  ungroup() |>
  select(refid, study, design_f_lab, treat1, treat2, TE, seTE, event1, n1, event2, n2, surg_f, country) |>
  left_join(or_adjusted, by = "refid")

pairwise_ket_nrsi_dat <- pairwise_ket_nrsi_dat |>
  mutate(
    TE = ifelse(!is.na(TE_adj), TE_adj, TE),
    seTE = ifelse(!is.na(seTE_adj), seTE_adj, seTE),
    year = as.numeric(str_extract(study, "\\d{4}")),
    study_id = str_extract(study, "\\w*\\s\\d{4}"),
  ) |>
  left_join(robinsi_meta_dat |> select(-Study), by = "refid") |> 
  arrange(year, study)

pairwise_ket_nrsi_dat[nrow(pairwise_ket_nrsi_dat) + 1,] <- NA

pairwise_ket_nrsi_dat <- pairwise_ket_nrsi_dat |> 
  mutate(
    event1 = ifelse(is.na(event1), sum(pairwise_ket_nrsi_dat$event1, na.rm = TRUE), event1),
    n1 = ifelse(is.na(n1), sum(pairwise_ket_nrsi_dat$n1, na.rm = TRUE), n1),
    event2 = ifelse(is.na(event2), sum(pairwise_ket_nrsi_dat$event2, na.rm = TRUE), event2),
    n2 = ifelse(is.na(n2), sum(pairwise_ket_nrsi_dat$n2, na.rm = TRUE), n2),
    study = ifelse(is.na(study), " ", study)
  ) 

ket_nrsi_meta <- metagen(TE, seTE, 
  data = pairwise_ket_nrsi_dat,
  cluster = study_id,
  studlab = study,
  sm = "OR",
  method.random.ci = "HK",
  method.predict = "HK",
  method.tau = "REML",
  prediction = TRUE,
  allstudies = TRUE
)

png("assets/kq6_ket_nrsi_meta.png", width = 11.68, height = 4.2, units = "in", res = 300)
forest(ket_nrsi_meta,
  allstudies = TRUE,
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("OR", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  leftcols = c("study", "event2", "n2", "event1", "n1"), 
  leftlabs = c("Study", "Events", "Ketamine\n Total", "Events", "None\n Total"),
  just.addcols.right = "left",
  just.addcols.left = "right",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  big.mark = ",",
  print.pval.Q = FALSE,
  xlim = c(0.1, 10),
  xlab = "Favors: Ketamine                           None",
  addrows.below.overall = 4,
  fs.hetstat = 10,
)
dev.off()

```
![](assets/kq6_ket_nrsi_meta.png){fig.align="left" width="85%"}

<foot_mg> D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable.<br/>Confidence intervals may not exactly match published; variances were calculated from rounded figures as reported.<br/> Multilevel model accounting for within-study dependent effects.<br/>Weinstein 2018c intraoperative ketamine; Weinstein 2018d postoperative ketamine; Memtsoudis 2019b hip arthroplasty; Memtsoudis 2019g total knee arthroplasty. </foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Ketamine versus none non-randomized designs **small study effects** (funnel plot). </caption_mg>  

```{r ket_plac_meta_funnel_limit}
#| echo: false
#| include: false

png("assets/kq6_ket_delirium_nrsi_funnel.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
funnel(ket_nrsi_meta, ylim = c(0.9, 0.0), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 2, cex.studlab = 0.6, ff.smlab = "italic")
legend(2, 0.01, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
dev.off()

```

![](assets/kq6_ket_delirium_nrsi_funnel.png){width="70%"}
:::

<a id="mel_ram_meta"></a>

#### Melatonin/Ramelteon

<caption_mg> `r figure_ref()` Melatonin and ramelteon compared with placebo or no intervention. </caption_mg>

```{r nma_mel_ram_dat}
#| echo: false
#| include: false

mel_ram_plac_refid <- pairwise_dat |> 
  filter(treat2 %in% c("Mel", "Ram")) |> 
  filter(treat1 == "Plac/None") |> 
  pull(refid)

mel_ram_meta_dat <- pairwise_dat |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(refid %in% mel_ram_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, treat2, treat1) |> 
  filter(!treat2 == c("Benzo")) |> 
  filter(!treat1 == c("Benzo")) |> 
  mutate(mel_ram = ifelse(treat2 == "Mel", "Melatonin", "Ramelteon")) 

# total_meta(mel_ram_meta_dat)
# toString(mel_ram_plac_refid)

mel_ram_plac_meta <- metabin(event2, n2, event1, n1,
  data = mel_ram_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "HK",
  method.predict = "HK",
  prediction = TRUE,
  allstudies = TRUE,
  subgroup = mel_ram
  )

temp_meta <- mel_ram_plac_meta 
temp_meta <- update(mel_ram_plac_meta, subgroup = NULL, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

png("assets/kq6_mel_ram_plac_meta.png", width = 9.78, height = 7.4, units = "in", res = 300)
forest(mel_ram_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Mel/Ram",
  label.c = "Plac/None",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  text.subgroup.nohet = TRUE,
  xlim = c(0.1, 3),
  xlab = "Favors: Ram/Mel                   Placebo",
  addrows.below.overall = 4,
  text.addline2 = risk_diff_meta_rr(mel_ram_plac_meta, scale = 100)
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
dev.off()

```

![](assets/kq6_mel_ram_plac_meta.png){fig.align="left" width="72%"}


<!-- <foot_mg> Mel: melatonin; Ram: ramelteon; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> `r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, mel_ram_plac_refid), ".")`</foot_mg><br/> <a id="figure-13.-ramelteon-compared-with-placebo-before-after-studies."></a> -->

<foot_mg>Mel: melatonin; Ram: ramelteon; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.</foot_mg>

<foot_mg>Risk of bias ratings: low +, some concerns ?, high -- .</foot_mg>

<foot_mg>`r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`</foot_mg>

<foot_mg>`r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, mel_ram_plac_refid), ".")`</foot_mg>

<a id="figure-13.-ramelteon-compared-with-placebo-before-after-studies."></a>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Melatonin or ramelteon compared with placebo or no intervention --- **small study effects**. </caption_mg>

```{r mel_ram_plac_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}

temp_limit_meta <- limitmeta(temp_meta)

png("assets/kq6_mel_ram_plac_meta_funnel.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(mar = c(4, 4, 2, 1), bty = "n", xaxt = "s", yaxt = "s")
funnel(temp_limit_meta, ylim = c(1.2, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 7, ff.smlab = "italic")
legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
dev.off()

```
![](assets/kq6_mel_ram_plac_meta_funnel.png){fig.align="left" width="70%"}

<foot_mg> Estimates (odds ratio and 95% CI) from random effects models --- unadjusted OR `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects OR `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Melatonin or ramelteon compared with placebo or no intervention --- **significance funnel plot**. </caption_mg>

```{r mel_ram_significance_funnel_plot}
#| echo: false
#| include: false

mel_ram_sens_dat <- mel_ram_meta_dat |> 
  mutate(size = n1 + n2) |> 
  select(study, event1, n1, event2, n2, size) |> 
  mutate(
    study = str_remove(study, "\\*")
  ) 

dat <- metafor::escalc(measure = "RR", ai = event2, n1i = n2, ci = event1, n2i = n1, data = mel_ram_sens_dat)

png("assets/kq6_mel_ram_significance_funnel_plot.png", width = 8.5, height = 5.5, units = "in", res = 300)
PublicationBias::significance_funnel(yi = dat$yi, vi = dat$vi, favor_positive = FALSE, alpha_select = 0.05) +
  scale_x_continuous(breaks = c(-1.6094, -0.9163, -.5, -.2231, 0, .1823), labels = c("0.2", "0.4", "0.5", "0.8", "1", "1.2")) + 
  xlab("RR") + 
  scale_y_continuous() + ylab("SE(log[RR])") +
  theme(
    axis.text.y = element_text(size = 15), 
    axis.text.x = element_text(size = 15),
    axis.title.y = element_text(size = 16),
    axis.title.x = element_text(size = 16),
    legend.text = element_text(size = 16)) 

dev.off()

```

![](assets/kq6_mel_ram_significance_funnel_plot.png){fig.align="left" width="65%"}

<foot_mg> Black diamond represents pooled estimate for all studies and the grey for only non-affirmative ones (p>0.05). To achieve a non-significant result, would require affirmative studies 2.9 times more like to be published (see [Mathur 2020](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7590147/pdf/RSSC-69-1091.pdf)) and the pooled result from non-affirmative studies does not appear to yield a clinically substantive decrease in risk.  </foot_mg> 

:::

<caption_mg> `r figure_ref()` Ramelteon compared with placebo (before-after studies). </caption_mg>

```{r mel_ram_bef_after_meta}
#| echo: false
#| include: false

mel_ram_bef_aft_dat <- delirium_meta_dat |> 
  group_by(refid) |>
  filter(any(arm %in% c("Ram", "Mel"))) |>
  filter(design_f_lab == "Before-After/Time Series") |>
  ungroup()

pairwise_dat <- pairwise(
    treat = arm,
    event = delitotal_n,
    n = arm_n,
    studlab = study,
    data = mel_ram_bef_aft_dat,
    sm = "RR",
    keep.all.comparisons = TRUE
  ) |> 
  left_join(robinsi_meta_dat |> select(-Study), by = "refid") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, treat2, treat1) |> 
  mutate(treat2 = "Ramelteon",
         treat1 = "None") |> 
  group_by(study) |> 
  slice(1) |> 
  ungroup()

mel_ram_bef_aft_meta <- metabin(event2, n2, event1, n1,
  data = pairwise_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.random.ci = "classic",
  method.tau = "REML",
  prediction = FALSE,
  allstudies = TRUE
)

png("assets/kq6_mel_ram_bef_aft_meta.png", width = 10.32, height = 2.3, units = "in", res = 300)
forest(mel_ram_bef_aft_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Ramelteon",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = FALSE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  # colgap.forest.left = "10mm",
  # colgap.forest.right = "10mm",
  # colgap.left = "2mm",
  xlim = c(0.1, 2),  # at = c(0.1, 0.5, 1, c, ...),
  xlab = "Favors: Ramelteon                   None",
  addrows.below.overall = 4,
  # text.addline1 = "Continuity correction of 0.5 in study with zero cell frequency"
)
dev.off()

```
![](assets/kq6_mel_ram_bef_aft_meta.png){fig.align="left" width="70%"}

<a id="delirium_nma"></a>

<foot_mg> D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable.</foot_mg>

<br/>

<a id="nma_tables"></a>

#### **Network**

```{r nma_characteristics}
#| echo: false
#| warning: false
#| layout: [[40, 60]]
delirium_nma_bugsnet_dat <- BUGSnet::data.prep(
  arm.data = nma_rct_dat,
  varname.t = "arm",
  varname.s = "study"
)

delirium_nma_char <- BUGSnet::net.tab(
  data = delirium_nma_bugsnet_dat,
  outcome = "delitotal_n",
  N = "arm_n",
  type.outcome = "binomial",
  time = NULL
)

delirium_nma_char$network |> 
  mutate(
    Value = suppressWarnings(trimws(if_else(!is.na(as.numeric(Value)), format(as.numeric(Value), big.mark = ","), Value)))) |> 
  gt(id = "one") |>
  cols_width(
    Characteristic ~ px(350),
    Value ~ px(80)
  ) |>
  tab_header(title = glue::glue("{table_ref()}Summary of studies included in the network.")) |> 
  fmt_number(columns = c(Value), drop_trailing_zeros = TRUE) |>
  gt_theme_mg()

delirium_nma_char$comparison |>
  mutate(
    n.outcomes = n_per_fun(n.outcomes, n.patients)
  ) |>
  gt(id = "one") |>
  cols_hide(proportion) |>
  cols_label(
    comparison       = "Comparison",
    n.studies        = "Studies",
    n.patients       = "Patients",
    n.outcomes       = "Events (%)"
  ) |>
  cols_width(
    comparison ~ px(180),
    n.studies ~ px(60),
    n.patients ~ px(80),
    n.outcomes ~ px(120)
  ) |>
  tab_header(title = glue::glue("{table_ref()}Summary of events by comparisons in the network.")) |>
  fmt_number(columns = c(n.patients), drop_trailing_zeros = TRUE) |>
  gt_theme_mg()

```

<a id="nma_figures"></a>

<br/><br/>

<caption_mg> `r figure_ref()` Network structure of randomized clinical trials and comparators reporting delirium incidence. </caption_mg>

```{r delirium_nma_plot}
#| include: false
#| echo: false

## Modifying current setting for position of treatment labels
## (argument 'offset')
# tmp <- netgraph(net1)
# names(tmp)
# names(tmp$nodes)
# tmp$nodes$offset.x
# netgraph(net1, offset = cbind(tmp$nodes$offset.x, tmp$nodes$offset.y + 0.1))
# netgraph(net1, offset = cbind(tmp$nodes$offset.x + 0.1, tmp$nodes$offset.y))

# par(mfrow = c(1, 1), mar = c(1, 1, 1, 1))

png("assets/kq6_nma.png", width = 6.6, height = 4.5, units = "in", res = 300)
par(mar = rep(0, 4), xaxs='i', yaxs='i')
netgraph(netmeta_melram_nma,
  lwd = 4,
  plastic = FALSE,
  thickness = TRUE,
  points = TRUE,
  alpha.transparency = 2,
  col = "azure3",
  col.points = "#F39C12",
  number.of.studies = TRUE,
  # seq = trts_melram,
  rescale.pointsize = TRUE,
  # cex.points = c(1, 2, 3, 4, 5),
  # cex.points = node_size$n/40,
  cex.points = netmeta_melram_nma$n.trts/3,
  labels = paste0(trts, "\n(n=", round(n.trts), ")"),
  col.number.of.studies = "black",
  pos.number.of.studies = .4, #c(0.5, 0.5, 0.5, 0.5, 0.43, 0.4, 0.4),
  cex.number.of.studies = 1.5,
  col.highlight = "white",
  bg.number.of.studies = c("#FFFFFF"),
  offset = c(.01, -.015),
  cex = 1.5
  # offset = .02
)
dev.off()

```
![](assets/kq6_nma.png){fig.align="left" width="35%"}

<foot_mg> Dex: dexmedetomidine; Ket: ketamine; Mel/Ram: melatonin or ramelteon; Benz: benzodiazepine (midazolam or oxazepam); Plac/None: placebo or no intervention; Prop: propofol.</foot_mg>  

<br/>   

<caption_mg> `r figure_ref()` Network meta-analysis of delirium incidence including all comparators.</caption_mg>

```{r nmaForest}
#| include: false
#| echo: false

png("assets/kq6_nma_forest.png", width = 4.82, height = 2.8, units = "in", res = 300)
par(mar = c(1, 1, 1, 1))
forest(netmeta_melram_nma,
       xlab = "Risk Ratio")
       # xlim = c(.001, 2),
       # at = c(0.01, .1, 0.5, 1, 2))
dev.off()

```
![](assets/kq6_nma_forest.png){fig.align="left" width="35%"}       

<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin or Ramelteon; Benzo: Benzodiazepine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>

<a id="league_table_delirium"></a>

<br/>

<caption_mg> `r table_ref()` League table of risk ratios and 95% confidence intervals from network meta-analysis (random effects model). Comparisons from direct evidence displayed in the upper diagonal; network comparisons shown on the lower diagonal. </caption_mg>


```{r leagueTable}
#| results: asis

nma_melram_league <- netleague(netmeta_melram_nma,
  digits = 2,
  common =  FALSE,
  seq = trts_melram
)

as_tibble(nma_melram_league$random) |>
  mutate(
    across(V1:V6, ~ str_replace(.x, " \\(", "<br>\\(")),
    across(V1:V6, ~ ifelse(.x == ".", "", .x))
  ) |>
  gt(id = "one") |>
  cols_width(
    everything() ~ px(110),
  ) |>
  fmt_markdown(columns = everything()) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V1, rows = V1 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V2, rows = V2 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V3, rows = V3 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V4, rows = V4 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V5, rows = V5 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V6, rows = V6 %in% trts_melram)) |>
  rm_stubhead() |>
  gt_theme_mg() |>
  tab_options(column_labels.hidden = TRUE, table.font.size = px(14)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(V1:V6)) |>
  tab_footnote("Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin or Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator.")

```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Comparison-adjusted funnel plot for delirium. </caption_mg>

```{r compare_adj_fun_delirium}
#| include: false
#| echo: false

png("assets/kq6_netmeta_funnel.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(mar = c(4, 4, 4, 1), bty = "n", xaxt = "s", yaxt = "s")
funnel(netmeta_melram_or_nma,
  order = trts_melram,
  method.bias = "Thompson"
)
dev.off()
```
![](assets/kq6_netmeta_funnel.png){fig.align="left" width="55%"}

:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Comparison of direct and indirect evidence in network meta-analysis of delirium (node splitting forest plot). </caption_mg>

```{r node_split_all}
#| echo: false
#| include: false

png("assets/kq6_all_net_split.png", width = 6.28, height = 9.8, units = "in", res = 300)
netsplit(netmeta_melram_nma, order = trts_melram) %>%
  forest(.,
    xlab = "Risk Ratio",
    xlim = c(0.1, 10),
    leftcols = c("studlab", "k"),
    rightlabs = c("RR", "(95% CI)")
  )
dev.off()

```

![](assets/kq6_all_net_split.png){fig.align="left" width="48%"}

<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin/Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>
:::

<br/>

## **Neurocognitive Disorder <30 days**

```{r dncr_ncd_dat}

dncr_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  filter(if_any(matches("neurocog.*time.*"), ~ .x < 30)) |>
  # remove Gao 2021 as subset of Gao 2020
  filter(refid != 5269) |> 
  # select(refid, study, arm_n, neurocog_update_arm_n, neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n, matches("neurocog.*time")) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    neurocog_n1 = ifelse(neurocog_time1 >= 30, NA, neurocog_n1),
    neurocog_n2 = ifelse(neurocog_time2 >= 30, NA, neurocog_n2),
    neurocog_n3 = ifelse(neurocog_time3 >= 30, NA, neurocog_n3),
    neurocog_last_n = ifelse(neurocog_last_time >= 30, NA, neurocog_last_n),
    neurocog_total_n = ifelse(neurocog_total_time >= 30, NA, neurocog_total_n),
    neurocog_time1 = ifelse(neurocog_time1 >= 30, NA, neurocog_time1),
    neurocog_time2 = ifelse(neurocog_time2 >= 30, NA, neurocog_time2),
    neurocog_time3 = ifelse(neurocog_time3 >= 30, NA, neurocog_time3),
    neurocog_last_time = ifelse(neurocog_last_time >= 30, NA, neurocog_last_time),
    neurocog_total_time = ifelse(neurocog_total_time >= 30, NA, neurocog_total_time),
    dncr_time = pmax(neurocog_time1, neurocog_time2, neurocog_time3, neurocog_last_time, neurocog_total_time, na.rm = TRUE),
    neurocog_total_n = case_when(
      neurocog_time1 == dncr_time ~ neurocog_n1,
      neurocog_time2 == dncr_time ~ neurocog_n2,
      neurocog_time3 == dncr_time ~ neurocog_n3,
      neurocog_last_time == dncr_time ~ neurocog_last_n,
      neurocog_total_time == dncr_time ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n/arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  left_join(study_char_dat |> select(refid, country, neuro_threshold, surgs_design), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(postop_only_dat, by = "refid") |> # 2023-04-18 none postop only 
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |>
  arrange(refid_c, arm_id) |>
  mutate(
    bar = case_when(
      str_detect(arm, "Dex|Ket|Mel|Ram") ~ bar_prop(neurocog_prop * 100, "#A93226"),
      str_detect(arm, "Plac|None") ~ bar_prop(neurocog_prop * 100, "#969696"),
      .default = bar_prop(neurocog_prop * 100, "#104E8B")),
    year = as.numeric(str_extract(study, "\\d{4}")),
    # arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    scale_mmse = ifelse(!is.na(neurocog_scale_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_scale_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal") | !is.na(neurocog_scale_moca), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other = ifelse(!is.na(neurocog_scale_unspec), "Not specified", scale_other),
    scale_other = ifelse(!is.na(neurocog_scale_apa_pocd), "APA POCD criteria", scale_other),
    scale_other = ifelse(!is.na(neurocog_scale_spmsq), "SPMSQ", scale_other),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |> 
  select(refid, refid_c, year, arm_id, study, study_l, design_f_lab, surgs_design, pre_mmse, country, surg_f, postop_only, arm, pre_mmse, dncr_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf, neuro_threshold)

# add referents for rr calculation
dncr_rr_ref <- dncr_dat |>
  select(refid, refid_c, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid_c, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  ) |>
  select(-refid)

#| DATA: neurocog_allarms_meta_dat for subsequent pooling, arms not collapsed
neurocog_allarms_meta_dat <- dncr_dat |> 
  select(refid, study, design_f_lab, year, arm_id, arm, neurocog_total_n, arm_n, dncr_time, surg_f) |> 
  filter(study != "Lu 2017") # both dex arms; different dose

dncr_dat <- dncr_dat |> 
  left_join(dncr_rr_ref, by = c("refid_c", "arm_id")) |> 
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |> 
  select(refid, year, design_f_lab, surg_f, surgs_design, study, study_l, arm_id, arm_n, arm, pre_mmse, scale_mmse:scale_other_tf, neuro_threshold, dncr_time, neurocog_nper, bar, rr_ci)

rm(dncr_rr_ref)
```

### Dexmedetomidine

<caption_mg> `r table_ref()` Neurocognitive disorder <30 days incidence and ascertainment in trials of dexmedetomidine (includes only trials conducting cognitive testing at day 3 or later).</caption_mg>

```{r dncr_dex_gt}
#| eval: true
dncr_dex_refid <- dncr_dat |> 
  filter(str_detect(arm, "Dex")) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

dncr_ket_refid <- dncr_dat |> 
  filter(str_detect(arm, "Ket")) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

dncr_mel_ram_refid <- dncr_dat |> 
  filter(str_detect(arm, "Mel|Ram")) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

# dncr_dat |>
#   filter(refid %in% dncr_ket_refid, !is.na(scale_other)) |>
#   filter(refid %in% dncr_dex_refid, !is.na(scale_other)) |>
#   select(refid, study, scale_other)

# create footnotes for thresholds
# dncr_dat |>
#   select(refid, study, scale_mmse, scale_dst, scale_moca, neuro_threshold) |>
#   slice(1, .by = refid) |>
#   mutate(
#     neuro_threshold = str_replace(neuro_threshold, "≤-", "≥"), 
#     footnotes = case_when(
#     !is.na(scale_mmse) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == '", study, "')) |>"),
#     !is.na(scale_dst) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == '", study, "')) |>"),
#     !is.na(scale_moca) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == '", study, "')) |>")
#   ),
#   footnotes = ifelse(row_number() == n(), str_remove(footnotes, ".{2}$"), footnotes)) |> 
#   filter(!is.na(footnotes)) |> 
#   pull(footnotes) |> 
#   noquote()

dncr_dat |>
  arrange(year, study) |>
  filter(refid %in% dncr_dex_refid) |>
  filter(dncr_time >= 3) |>
  mutate(
    study_l = ifelse(row_number() > 1, NA, study_l),
    across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
    dncr_time = ifelse(row_number() > 1, NA, dncr_time),
    .by = study
  ) |>
  group_by(surgs_design) |>
  gt(id = "one") |>
  row_group_order(groups = c("GI/Abd - Randomized Clinical Trial", "Cardiac - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "Ophtho - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "Urol - Randomized Clinical Trial", "GI/Abd - Nonrandomized Trial")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other, design_f_lab, surg_f, neuro_threshold)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA",
    scale_other_tf   = "Other",
    dncr_time        = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  gt_theme_mg() |>
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |>
  fmt_number(dncr_time, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Neurocognitive Disorder <30 days", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    arm ~ px(70),
    pre_mmse ~ px(80),
    scale_mmse ~ px(50),
    scale_dst ~ px(50),
    scale_moca ~ px(50),
    scale_other_tf ~ px(50),
    dncr_time ~ px(60),
    neurocog_nper ~ px(90),
    bar ~ px(100),
    rr_ci ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, dncr_time, neurocog_nper, rr_ci))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study, arm, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(starts_with("scale"), dncr_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm, "Dex|Ket|Mel|Ram"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = !str_detect(arm, "Dex|Ket|Mel|Ram|Plac|None"))) |>
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Dex: Dexmedetomidine; Mid: Midazolam; Prop: Propofol; Ulin: ulinastatin; Plac/None: placebo or no intervention.") |>
  tab_footnote("Day of assessment.", locations = cells_column_labels(columns = c(dncr_time))) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Hasegawa's Dementia Scale; Trail-Making Test; Word Recall; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2015")) |>
  tab_footnote("Trail Making Test; Words Recall Test; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2015")) |>
  tab_footnote("American Psychiatric Association postoperative cognitive dysfunction diagnostic criteria.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Gao 2020")) |>
  tab_footnote("Visual Verbal Learning Tests; Trail Making Test; Stroop Color Word Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Chawdhary 2020")) |>
  tab_footnote("Stroop Color-Word Test; Associative Learning And Memory Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Li 2019")) |>
  tab_footnote("MMSE <26.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Mansouri 2019")) |>
  tab_footnote("Low score not specified.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Bao 2020")) |>
  tab_footnote("Z ≥1.96.", locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == "Zhou 2019b")) |>
  tab_footnote("Threshold not specified.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Wang 2019")) |>
  tab_footnote("Z ≥1.96.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Zhang 2018c")) |>
  tab_footnote("Difference from baseline ≥1 SD.", locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == "Ding 2015")) |>
  tab_footnote("Difference from baseline ≥2 SD.", locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == "Hudetz 2009a")) |>
  tab_footnote("MMSE <24.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Hollinger 2021")) |>
  tab_footnote("Z ≥1.96.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Lee 2015")) |>
  tab_footnote("Z ≥1.96.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Wang 2017")) |>
  tab_footnote("Difference from baseline >2 pts.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Lu 2017")) |>
  tab_footnote("Z >2.", locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == "Shi 2020")) |>
  tab_footnote("Difference from baseline >2 pts.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Zhao 2020")) |>
  tab_footnote("Difference from baseline ≥1 SD.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Ding 2015")) |>
  tab_footnote("Difference from baseline ≥1 SD.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Li 2021b")) |>
  tab_footnote("Difference from baseline ≥1 SD.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Li 2015")) |>
  tab_footnote("Difference from baseline ≥2 SD.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Chawdhary 2020")) |>
  tab_footnote("MMSE <27.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Chen 2013")) |>
  tab_footnote("Threshold not specified.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Zhang 2021")) |>
  tab_footnote("Z ≥1.96.", locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == "Li 2019")) |>
  tab_footnote("MMSE <24.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Chen 2020")) |>
  tab_footnote("Not specified.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Guo 2022")) |>
  tab_footnote("Short Portable Mental Status Questionnaire.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Rascon-Martinez 2016"))

```

### Ketamine

<caption_mg> `r table_ref()` Neurocognitive disorder <30 days incidence and ascertainment in randomized clinical trials of ketamine (includes only trials conducting cognitive testing at day 3 or later).</caption_mg>

```{r dncr_ket_gt}
#| eval: true
dncr_dat |> 
  arrange(year, study) |> 
  filter(dncr_time >= 3) |> 
  filter(refid %in% dncr_ket_refid) |> 
  mutate(study_l = ifelse(row_number() > 1, NA, study_l), 
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         dncr_time = ifelse(row_number() > 1, NA, dncr_time), 
                .by = study) |> 
  # tabyl(surgs_design) |> arrange(desc(percent)) |> select(surgs_design) |> pull() |> toString()
  group_by(surgs_design) |>
  gt(id = "one") |>
  row_group_order(groups = c("GI/Abd - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other, surg_f, design_f_lab, neuro_threshold)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA", 
    scale_other_tf   = "Other",
    dncr_time        = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |> 
  gt_theme_mg() |> 
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |> 
  fmt_number(dncr_time, decimals = 0) |> 
  sub_missing(columns = everything(), missing_text = "") |> 
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Neurocognitive Disorder <30 days", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    dncr_time        ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, dncr_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), dncr_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm, "Dex|Ket|Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = !str_detect(arm, "Plac|Dex|Ket|Mel|Ram"))) |> 
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Ket: ketamine; Hal: haloperidol; Plac: placebo.") |> 
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(dncr_time))) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Short Portable Mental Status Questionnaire.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Hudetz 2009a")) |> 
  tab_footnote("Repeatable Battery for the Assessment Of Neuropsychological Status Subtests; Brief Visual Memory Test Revised; Backward Digit Span; Semantic Fluency; Phonemic Fluency.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Rascon-Martinez 2016")) |> 
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Dex: Dexmedetomidine; Mid: Midazolam; Prop: Propofol; Ulin: ulinastatin; Plac/None: placebo or no intervention.") |> 
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(dncr_time))) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Hasegawa's Dementia Scale; Trail-Making Test; Word Recall; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2015")) |> 
  tab_footnote("Trail Making Test; Words Recall Test; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2015")) |> 
  tab_footnote("American Psychiatric Association postoperative cognitive dysfunction diagnostic criteria.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Gao 2020")) |> 
  tab_footnote("Visual Verbal Learning Tests; Trail Making Test; Stroop Color Word Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Chawdhary 2020")) |> 
  tab_footnote("Stroop Color-Word Test; Associative Learning And Memory Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Li 2019")) |> 
  tab_footnote('MMSE <26.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Mansouri 2019')) |>                       
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == 'Zhou 2019b')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2019')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2018c')) |>                          
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Ding 2015')) |>      
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Hudetz 2009a')) |>   
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Hollinger 2021')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lee 2015')) |>                             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2017')) |>                            
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lu 2017')) |>      
  tab_footnote('Z >2.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Shi 2020')) |>                                
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhao 2020')) |>    
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Ding 2015')) |>     
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2021b')) |>      
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2015')) |>       
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chawdhary 2020')) |>
  tab_footnote('MMSE <27.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2013')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2021')) |>                     
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Li 2019')) |>                               
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2020'))   
```

### Melatonin/Ramelteon

No studies

<a id="dncr_meta"></a>

### *Pooled*

```{r dncr_meta_dat}
# 2023-04-20 adding ketamine studies to dexmedetomidine dncr would not connect any network; so left distinct
# 2023-04-20 no dexmedetomidine studies included in dncr pooled results administered only postop

neurocog_meta_dat <- neurocog_allarms_meta_dat |>
  filter(dncr_time >= 5) |>
  mutate(
    neurocog_total_n = case_when(
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Zhao 2020", c(2, 3, 4), neurocog_total_n), # ok
      study == "Li 2021b" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Li 2021b", c(2, 3, 4), neurocog_total_n), # ok
      .default = neurocog_total_n
    ),
    arm_n = case_when(
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Zhao 2020", c(2, 3, 4), arm_n), # ok
      study == "Li 2021b" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Li 2021b", c(2, 3, 4), arm_n), # ok
      .default = arm_n
    ),
    arm = fct_collapse(arm, Plac = c("Plac", "None"))
  ) |>
  filter(!(study %in% c("Zhou 2019b") & arm_id %in% c(2, 3))) |> # exclude ulinastatin arms as not part even of augmented evidence space
  filter(!(study %in% c("Zhao 2020") & arm_id %in% c(3, 4))) |> # ok
  filter(!(study %in% c("Li 2021b") & arm_id %in% c(3, 4))) |> # ok
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(postop_only_dat, by = "refid")

## identify multiarm studies -------------------------- (2024-05-30 17:18) @----
# potential need to collapse arms in multiarm studies
# dncr_gt3_arms <- neurocog_allarms_meta_dat |> 
#   select(study, refid) |> 
#   group_by(study) |> 
#   filter(n() > 2) |>
#   ungroup() |> 
#   distinct() |> 
#   pull(refid)
# 
# temp <- neurocog_allarms_meta_dat |>
#   filter(refid %in% dncr_gt3_arms)

```

```{r dncr_meta}

nma_dncr_dat <- neurocog_meta_dat |>
  # mutate(arm = fct_collapse(arm, "Benzo" = c("Oxaz", "Mid"))) |> # no oxazepam studies
  # mutate(time = ifelse(dncr_time < 3, "at <3 days", "at ≥3 days" )) |> 
  # filter(time == "at ≥3 days") |> 
  select(-dncr_time) |> # 2024-06-01 verified all 5 to 7 days
  filter(design_f_lab == "Randomized Clinical Trial") |>
  # filter(surg_f == "Cardiac") |>
  # filter(postop_only == TRUE) |>
  # filter(!country == "China") |> 
  mutate(across(c(arm, design_f_lab), ~ fct_drop(.x)))

trts <- levels(nma_dncr_dat$arm)

pairs_dat <- pairwise(
  treat = arm,
  event = neurocog_total_n,
  n = arm_n,
  studlab = study,
  data = nma_dncr_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_dncr_nma <- netmeta(
  pairs_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts,
  sm = "RR",
  reference.group = "Plac"
)

```

#### Dexmedetomidine

<caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention (randomized clinical trials, delayed neurocognitive recovery assessed postoperative day 5 or later). </caption_mg>

```{r dncr_dex_plac_meta} 
#| echo: false
#| include: false

dncr_dex_meta_dat <- pairs_dat |>
  arrange(year, study) |> 
  filter(treat1 == "Plac" & treat2 == "Dex") |>
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall, country, surgs_single_f) |>
  mutate(
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    ),
    study = ifelse(country == "China", paste0(study, "*"), study),
  ) |> 
  arrange(year)

dncr_dex_plac_meta <- metabin(event2, n2, event1, n1,
  data = dncr_dex_meta_dat,
  studlab = study,
  sm = "RR",
  method.random.ci = "HK",
  method.predict = "HK",
  method.tau = "REML",
  prediction = TRUE,
  allstudies = TRUE,
  # subgroup = time
)

# refid_meta_fun(dncr_dex_meta_dat)

# small study effects; here to have result of Harbord test
temp_meta <- dncr_dex_plac_meta
temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
# temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)
# trimfill(temp_meta)

png("assets/kq6_dncr_dex_plac_meta.png", width = 11.61, height = 4.4, units = "in", res = 300)
forest(dncr_dex_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "surgs_single_f", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "Procedure", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  # subgroup = TRUE,
  # prediction.subgroup = FALSE,
  colgap.right = "5mm",
  # print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4,
  text.addline2 = risk_diff_meta_rr(dex_plac_meta, scale = 100)
)  
dev.off()

```
![](assets/kq6_dncr_dex_plac_meta.png){fig.align="left" width="85%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <a id="figure-4"></a><br/> 
`r paste0("Neurocognitive recovery a designated primary outcome in ", prim_sec_out_fun(prim_pocd, dex_meta_dat$refid), "; a secondary outcome in ", prim_sec_out_fun(sec_pocd, dex_meta_dat$refid), ".")`<br/> \*Triasl conducted in China.</foot_mg><br/>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention according to risk of bias appraisals (randomized clinical trials; delayed neurocognitive recovery). </caption_mg>

```{r dncr_rob_meta}
#| echo: false
#| include: false

rob_meta <- update(dncr_dex_plac_meta, subgroup = rob)

png("assets/kq6_dncr_dex_rob_meta.png", width = 9.78, height = 6.45, units = "in", res = 300)
forest(rob_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  subgroup = TRUE,
  prediction.subgroup = TRUE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  random.subgroup = FALSE,
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
)  
dev.off()

```
![](assets/kq6_dncr_dex_rob_meta.png){fig.align="left" width="73%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/>0.5 added to cells of studies without events in one arm. </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects --- funnel plot (delayed neurocognitive recovery). </caption_mg>

```{r dex_plac_dncr_meta_funnel}
#| echo: false
#| include: false

png("assets/kq6_dncr_dex_meta_funnel.png", width = 8.5, height = 5.5, units = "in", res = 300) 
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
funnel(temp_meta, pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")
legend(0.02, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
dev.off()

```
![](assets/kq6_dncr_dex_meta_funnel.png){fig.align="left" width="70%"}

:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Summary risk of bias from randomized clinical trials of dexmedetomidine compared with placebo or no intervention (delayed neurocognitive recovery, weighted). </caption_mg>

```{r rob2_summary_dncr_dex_plac, fig.height = 3, out.width = "60%"}
rob_summary_meta_weighted_fun(dncr_dex_plac_meta)
```
:::

#### Ketamine

<caption_mg> `r figure_ref()` Ketamine compared with placebo or no intervention (randomized clinical trials, delayed neurocognitive recovery). </caption_mg>

```{r dncr_ket_plac_meta}
#| echo: false
#| include: false

dncr_ket_meta_dat <- pairs_dat |>
  arrange(year, study) |>
  unite(to_select, treat1, treat2, sep = "/") |>
  filter(str_detect(to_select, c("Plac")) & str_detect(to_select, "Ket") & !str_detect(to_select, "Hal")) |>
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall, country, surgs_single_f) |>
  mutate(
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  ) |>
  arrange(study)

dncr_ket_plac_meta <- metabin(event2, n2, event1, n1,
  data = dncr_ket_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  method.random.ci = "classic",
  prediction = TRUE,
  allstudies = TRUE
)

# small study effects; here to have result of Harbord test
# temp_meta <- ket_plac_meta
# temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
# temp_metabias <- metabias(temp_meta, method.bias = "Egger", k.min = 10)
# trimfill(temp_meta)

# summary(ket_plac_meta)

png("assets/kq6_dncr_ket_plac_meta.png", width = 9.86, height = 2.8, units = "in", res = 300)
forest(dncr_ket_plac_meta,
  # sortvar = year,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Ketamine",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  # subgroup = TRUE,
  # prediction.subgroup = FALSE,
  # print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 5),
  xlab = "Favors: Ketamine               Placebo/None",
  addrows.below.overall = 4
)

dev.off()
```

![](assets/kq6_dncr_ket_plac_meta.png){fig.align="left" width="68%"}

<foot_mg> Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <br/> Too few studies to examine small study effects. </foot_mg><br/>

#### **Network**

```{r nma_dncr_characteristics}
#| echo: false
#| warning: false
#| layout: [[40, 60]]
delirium_nma_dncr_bugsnet_dat <- BUGSnet::data.prep(
  arm.data = nma_dncr_dat,
  varname.t = "arm",
  varname.s = "study"
)

delirium_nma_char <- BUGSnet::net.tab(
  data = delirium_nma_dncr_bugsnet_dat,
  outcome = "neurocog_total_n",
  N = "arm_n",
  type.outcome = "binomial",
  time = NULL
)

delirium_nma_char$network |> 
  mutate(
    Value = suppressWarnings(trimws(if_else(!is.na(as.numeric(Value)), format(as.numeric(Value), big.mark = ","), Value)))) |> 
  gt(id = "one") |>
  cols_width(
    Characteristic ~ px(350),
    Value ~ px(80)
  ) |>
  tab_header(title = glue::glue("{table_ref()}Summary of studies included in the network.")) |> 
  fmt_number(columns = c(Value), drop_trailing_zeros = TRUE) |>
  gt_theme_mg()

delirium_nma_char$comparison |>
  mutate(
    n.outcomes = n_per_fun(n.outcomes, n.patients)
  ) |>
  gt(id = "one") |>
  cols_hide(proportion) |>
  cols_label(
    comparison       = "Comparison",
    n.studies        = "Studies",
    n.patients       = "Patients",
    n.outcomes       = "Events (%)"
  ) |>
  cols_width(
    comparison ~ px(180),
    n.studies ~ px(60),
    n.patients ~ px(80),
    n.outcomes ~ px(120)
  ) |>
  tab_header(title = glue::glue("{table_ref()}Summary of events by comparisons in the network."), preheader = "Test") |>
  fmt_number(columns = c(n.patients), drop_trailing_zeros = TRUE) |>
  gt_theme_mg()

```

<a id="nma_dncr_figures"></a>

<br/><br/>

<caption_mg> `r figure_ref()` Network structure of randomized clinical trials and comparators reporting delayed neurocognitive recovery. </caption_mg>

```{r dncr_nma_plot}
#| echo: false
#| include: false

png("assets/kq6_dncr_netgraph.png", width = 7.8, height = 6.7, units = "in", res = 300)
par(mar = rep(0, 4))
netgraph(netmeta_dncr_nma,
  lwd = 4,
  plastic = FALSE,
  thickness = TRUE,
  points = TRUE,
  alpha.transparency = 2,
  col = "azure3",
  col.points = "#F39C12",
  number.of.studies = TRUE,
  # seq = trts_melram,
  rescale.pointsize = TRUE,
  # cex.points = c(1, 2, 3, 4, 5),
  # cex.points = node_size$n/40,
  cex.points = netmeta_dncr_nma$n.trts,
  labels = paste0(trts, "\n(n=", round(n.trts), ")"),
  col.number.of.studies = "black",
  cex.number.of.studies = 1.5,
  col.highlight = "white",
  bg.number.of.studies = c("#FFFFFF"),
  offset = .02,
  cex = 1.6
)
dev.off()

```

![](assets/kq6_dncr_netgraph.png){fig.align="left" width="35%"}


<foot_mg> Dex: Dexmedetomidine; Ket: ketamine; Mid: midazolam; Prop: propofol; Plac: Placebo or no intervention; Prop: Propofol. <br/> Zhao 2020 no intervention (usual care) arm included as placebo.</foot_mg>

<br/>

<caption_mg> `r figure_ref()` Network meta-analysis of delayed neurocognitive recovery including all comparators.</caption_mg>

```{r dncr_nma_forest}
#| echo: false
#| include: false

png("assets/kq6_dncr_nma.png", width = 4.83, height = 2.57, units = "in", res = 300)
par(mar = c(0, 0, 0, 0))
forest(netmeta_dncr_nma,
  xlab = "Risk Ratio",
  xlim = c(.15, 2),
  at = c(0.2, 0.5, 1, 2)
)
dev.off()

```

![](assets/kq6_dncr_nma.png){fig.align="left" width="35%"}

<foot_mg> Dex: Dexmedetomidine; Ket: ketamine; Mid: midazolam; Prop: propofol; Plac: Placebo or no intervention; Prop: Propofol. </foot_mg>

<br/>

<caption_mg> `r table_ref()` League table of risk ratios and 95% confidence intervals from network meta-analysis (random effects model). Comparisons from direct evidence displayed in the upper diagonal; network comparisons shown on the lower diagonal. </caption_mg>

```{r dncr_nma_league}
#| results: asis
nma_dncr_league <- netleague(netmeta_dncr_nma,
  digits = 2,
  common = FALSE,
  # direct = FALSE,
  seq = trts
)

as_tibble(nma_dncr_league$random) |>
  mutate(
    across(V1:V5, ~ str_replace(.x, " \\(", "<br>\\(")),
    across(V1:V5, ~ ifelse(.x == ".", "", .x))
  ) |>
  gt(id = "one") |>
  fmt_markdown(columns = everything()) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V1, rows = V1 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V2, rows = V2 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V3, rows = V3 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V4, rows = V4 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V5, rows = V5 %in% trts)) |>
  rm_stubhead() |>
  gt_theme_mg() |>
  tab_options(column_labels.hidden = TRUE, table.font.size = px(14)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(V1:V5)) |>
  tab_footnote("Dex: Dexmedetomidine; Ket: ketamine; Mid: midazolam; Prop: propofol; Ulin: ulinastatin; Prop: Propofol; Plac/None: Placebo or no intervention.")

# tab_info(temp)
```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Comparison-adjusted funnel plot for delayed neurocognitive recovery. </caption_mg>

```{r compare_adj_fun_dncr}
#| echo: false
#| include: false

png("assets/kq6_dncr_netmeta.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(mar = c(4, 4, 2, 1), bty = "n", xaxt = "s", yaxt = "s")
funnel(netmeta_dncr_nma,
  method.bias = "Thompson",
  digits = 2,
  order = trts)
dev.off()

```

![](assets/kq6_dncr_netmeta.png){fig.align="left" width="55%"}
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Comparison of direct and indirect evidence in network meta-analysis of delayed neurocognitive recovery (node splitting forest plot). </caption_mg>

```{r dncr_netsplit}
#| echo: false
#| include: false

png("assets/kq6_dncr_netsplit.png", width = 6.38, height = 8.6, units = "in", res = 300)
netsplit(netmeta_dncr_nma, order = trts) %>%
  forest(.,
    xlab = "Risk Ratio",
    show = "with.direct",
    # xlim = c(0.15, 2),
    leftcols = c("studlab", "k"),
    rightlabs = c("RR", "(95% CI)")
  )
dev.off()

```

![](assets/kq6_dncr_netsplit.png){fig.align="left" width="48%"}

<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin/Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>
:::

## **Neurocognitive Disorder 30 days to 1 year**

### Dexmedetomidine, Ketamine, and Melatonin

<caption_mg> `r table_ref()` Neurocognitive disorder ≥30 days and ascertainment. </caption_mg>

```{r ncd_dat}

ncd_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  filter(if_any(matches("neurocog.*time.*"), ~ .x > 30)) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    ncd_time = case_when(
      neurocog_time1 > 30 ~ neurocog_time1,
      neurocog_time2 > 30 ~ neurocog_time2,
      neurocog_time3 > 30 ~ neurocog_time3,
      neurocog_last_time > 30 ~ neurocog_last_time,
      neurocog_total_time > 30 ~ neurocog_total_time,
      .default = NA
    ),
    neurocog_total_n = case_when(
      neurocog_time1 > 30 ~ neurocog_n1,
      neurocog_time2 > 30 ~ neurocog_n2,
      neurocog_time3 > 30 ~ neurocog_n3,
      neurocog_last_time > 30 ~ neurocog_last_n,
      neurocog_total_time > 30 ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n / arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(postop_only_dat, by = "refid") |> # 2023-04-18 none postop only
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |>
  arrange(refid_c, arm_id) |>
  mutate(
    year = as.numeric(str_extract(study, "\\d{4}")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    bar = case_when(
      str_detect(arm, "Dex|Ket|Mel|Ram") ~ bar_prop(neurocog_prop * 100, "#A93226"),
      str_detect(arm, "Plac") ~ bar_prop(neurocog_prop * 100, "#969696"),
      .default = bar_prop(neurocog_prop * 100, color_1)
    ),
    year = as.numeric(str_extract(study, "\\d{4}")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    scale_mmse = ifelse(!is.na(neurocog_scale_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_scale_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other = ifelse(!if_any(c(neurocog_scale_cst, neurocog_scale_ldct, neurocog_scale_stroop, neurocog_scale_vvlt), is.na), "Other", scale_other), 
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |>
  select(refid, refid_c, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, postop_only, arm, pre_mmse, ncd_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf) 

ncd_rr_ref <- ncd_dat |>
  select(refid, refid_c, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid_c, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  ) |>
  select(-refid)

ncd_dat <- ncd_dat |>
  left_join(ncd_rr_ref, by = c("refid_c", "arm_id")) |>
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |>
  select(refid, year, design_f_lab, study, study_l, arm_id, arm_n, arm, pre_mmse, scale_mmse:scale_other_tf, ncd_time, neurocog_nper, bar, rr_ci)

```

```{r ncd_gt}

ncd_dat |>
  arrange(year, study) |>
  mutate(
    study_l = ifelse(row_number() > 1, NA, study_l),
    across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
    ncd_time = ifelse(row_number() > 1, NA, ncd_time),
    .by = study
  ) |>
  mutate(
    ncd_time = ifelse(ncd_time == 999, 90, ncd_time)
  ) |>
  group_by(design_f_lab) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA",
    scale_other_tf   = "Other",
    ncd_time         = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |>
  gt_theme_mg() |>
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |>
  fmt_number(ncd_time, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Neurocognitive Disorder ≥30 days", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    arm ~ px(70),
    pre_mmse ~ px(80),
    scale_mmse ~ px(50),
    scale_dst ~ px(50),
    scale_moca ~ px(50),
    scale_other_tf ~ px(50),
    ncd_time ~ px(60),
    neurocog_nper ~ px(90),
    bar ~ px(100),
    rr_ci ~ px(140),
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, ncd_time, neurocog_nper, rr_ci))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study, arm, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(starts_with("scale"), ncd_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm, "Dex|Ket|Mel|Ram"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = !str_detect(arm, "Plac|Dex|Ket|Mel|Ram"))) |>
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Dex: dexmedetomidine: Mel: melatonin; Plac: placebo.") |>
  tab_footnote("Day of assessment.", locations = cells_column_labels(columns = c(ncd_time))) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Stroop Color-Word Test; Associative Learning And Memory Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Li 2019")) |>
  tab_footnote("Charlson Comorbidity Index Dementia & Informant Questionnaire on Cognitive Decline", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "de Johnghe 2014")) |>
  tab_footnote("Z ≥1.96.", locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == "Li 2019")) |>
  tab_footnote("Threshold not specified.", locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == "Wang 2019")) |>
  tab_footnote("Failed at least 2 of Visual Verbal Learning Tests, Stroop color word test, Letter Digit Coding Test, or Concept Shifting Test", locations = cells_body(columns = c(scale_other_tf), rows = arm_id == 1 & study == "Oriby 2023")) |> 
  tab_footnote("Assumed to be 90 days based on time of final reported neuropsychological assessment.", locations = cells_body(columns = c(ncd_time), rows = arm_id == 1 & study == "Oriby 2023"))

```

### *Pooled*

#### Dexmedetomidine

<caption_mg> `r figure_ref()` Neurocognitive disorder ≥30 days comparing dexmedetomidine with placebo. </caption_mg>  

```{r fig_pooled_dex}
#| echo: false
#| include: false

ncd_dex_meta_dat <- ncd_dat |> 
  filter(refid %in% dex_refid) |> 
  filter(any(arm == "Plac"), .by = study) |> 
  filter(arm != "Ket") |> 
  mutate(ncd_n = as.numeric(str_extract(neurocog_nper, "\\d{1,2}"))) |> 
  select(refid, study, year, arm, ncd_n, arm_n) 

ncd_dex_meta_dat <- pairwise(
  treat = arm,
  event = ncd_n,
  n = arm_n,
  studlab = study,
  data = ncd_dex_meta_dat,
  sm = "RR",
  keep.all.comparisons = TRUE) |>
  left_join(rob2_meta_dat, by = "refid") 

ncd_dex_meta <- metabin(event2, n2, event1, n1,
  data = ncd_dex_meta_dat,
  studlab = study,
  method = "MH",
  sm = "RR",
  random = FALSE,
  method.tau = "REML",
  prediction = FALSE
  )

png("assets/kq6_ncd_dex_meta.png", width = 9.73, height = 2.3, units = "in", res = 300)
forest(ncd_dex_meta,
  allstudies = TRUE,
  label.e = "Dex",
  label.c = "Plac",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "All"),
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  colgap.forest.left = "5mm",
  colgap.forest.right = "5mm",
  addrow.overall = TRUE,
  xlim = c(0.1, 4),
  xlab = "Favors: Dex                                              Plac               "
)
dev.off()

trim_image("kq6_ncd_dex_meta.png")
```

![](assets/kq6_ncd_dex_meta.png){fig.align="left" width="68%"}

#### Ketamine

<caption_mg> `r figure_ref()` Neurocognitive disorder ≥30 days comparing ketamine with placebo. </caption_mg>  
  
```{r ncd_pooled_ket}
#| echo: false
#| include: false

ncd_ket_meta_dat <- ncd_dat |>
  filter(refid %in% ket_refid) |>
  filter(!arm %notin% c("Plac", "Ket")) |> 
  mutate(ncd_n = as.numeric(str_extract(neurocog_nper, "\\d{1,2}"))) |>
  select(refid, study, year, arm, ncd_n, arm_n)

ncd_ket_meta_dat <- pairwise(
  treat = arm,
  event = ncd_n,
  n = arm_n,
  studlab = study,
  data = ncd_ket_meta_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
) |>
  left_join(rob2_meta_dat, by = "refid")

ncd_ket_meta <- metabin(event2, n2, event1, n1,
  data = ncd_ket_meta_dat,
  studlab = study,
  method = "MH",
  sm = "RR",
  random = FALSE,
  method.tau = "REML",
  prediction = FALSE
)

png("assets/kq6_ncd_ket_meta.png", width = 9.73, height = 2.3, units = "in", res = 300)
forest(ncd_ket_meta,
  allstudies = TRUE,
  label.e = "Ket",
  label.c = "Plac",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)  ", "D1", "D2", "D3", "D4", "D5", "All"),
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  colgap.forest.left = "5mm",
  colgap.forest.right = "5mm",
  addrow.overall = TRUE,
  xlim = c(0.1, 4),
  xlab = "Favors: Ketamine                                    Placebo        "
)
dev.off()

trim_image("kq6_ncd_ket_meta.png")
```

![](assets/kq6_ncd_ket_meta.png){fig.align="left" width="68%"}

#### **Network** (exploratory)

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### Exploratory network meta-analysis

::: {layout="[[40,40,-20]]"}
```{r ncd_nma}
#| echo: false
#| include: false

ncd_nma_meta_dat <- ncd_dat |> 
  mutate(ncd_n = as.numeric(str_extract(neurocog_nper, "\\d{1,3}"))) |> 
  filter(arm %notin% c("Prop", "Mid")) |> 
  select(refid, study, year, arm, ncd_n, arm_n) 

trts <- as.character(unique(ncd_nma_meta_dat$arm))[c(1, 4, 3, 2)]
# trts <- as.character(unique(ncd_nma_meta_dat$arm))[c(2, 5, 4, 6, 1, 3)]

pairs_dat <- pairwise(
  treat = arm,
  event = ncd_n,
  n = arm_n,
  studlab = study,
  data = ncd_nma_meta_dat,
  sm = "RR",
  keep.all.comparisons = TRUE) |>
  left_join(rob2_meta_dat, by = "refid") 

netmeta_ncd_nma <- netmeta(
  pairs_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts,
  sm = "RR",
  reference.group = "Plac"
)

png("assets/kq6_netgraph_ncd_nma.png", width = 6.6, height = 5, units = "in", res = 300)
par(mar = rep(0, 4), xaxs='i', yaxs='i')
netgraph(netmeta_ncd_nma,
  lwd = 4,
  plastic = FALSE,
  thickness = TRUE,
  points = TRUE,
  alpha.transparency = 2,
  col = "azure3",
  col.points = "#F39C12",
  number.of.studies = TRUE,
  # seq = trts_melram,
  rescale.pointsize = TRUE,
  # cex.points = c(1, 2, 3, 4, 5),
  # cex.points = node_size$n/40,
  cex.points = netmeta_ncd_nma$n.trts/3,
  labels = paste0(trts, "\n(n=", round(n.trts), ")"),
  col.number.of.studies = "black",
  pos.number.of.studies = .5, #c(0.5, 0.5, 0.5, 0.5, 0.43, 0.4, 0.4),
  cex.number.of.studies = 1.6,
  col.highlight = "white",
  bg.number.of.studies = c("#FFFFFF"),
  offset = c(-.02, -.07),
  cex = 1.3
  # offset = .02
)
dev.off()

trim_image("kq6_netgraph_ncd_nma.png")

```

![](assets/kq6_netgraph_ncd_nma.png){fig.align="left" width="60%"}

```{r ncd_nma_forest}
#| echo: false
#| include: false

png("assets/kq6_ncd_nma.png", width = 10, height = 10, units = "in", res = 300)
forest(netmeta_ncd_nma, rightlabs = c("RR", "95% CI"), xlab = "Risk Ratio")
dev.off()

trim_image("kq6_ncd_nma.png")

```
![](assets/kq6_ncd_nma.png){fig.align="left" width="40%"}
:::
<foot_mg> Excludes midazolam and propofol arms as neither contributed (ie, not in an closed loops).  </foot_mg> 

:::

## **Physical Function**

<caption_mg> `r table_ref()` Physical functional status for expanded versus standard preoperative evaluation. </caption_mg>

```{r exp_std_adl}

adl_likert_dat <- likert_dat |> 
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  rename(arm = drug_recode_abbr) |>
  mutate(
    # adl_koos, adl_sf36, adl_womac_func, adl_womac_stiff, adl_qlq_func, adl_other
    adl_scale = coalesce(adl_koos, adl_sf36, adl_womac_func, adl_womac_stiff, adl_qlq_func, adl_other),
    adl_scale = case_when(
      adl_scale == adl_sf36 ~ "SF-36 physical",
      str_detect(adl_other_spec, "Bar?thel") ~ "Barthel Index",
      adl_other_spec ==  "Short Performance Physical Battery" ~ "SPPB",
      str_detect(adl_other_spec, "Groningen") ~ "GARS"
    )
  ) |> 
  filter(!is.na(l_adl)) |> 
  relocate(adl_scale, .after = arm) |> 
  select(refid, study_l, study, arm_id, arm, arm_n, adl_scale, adl_koos:adl_other_spec, matches("sf36_pcs|womac_func|qlq_fs|adl")) |> 
  # select(refid, study, arm, adl_scale, matches("otheradl")) |> 
  rename_with(~ str_replace(., "_95", "ci95")) |> 
  rename_with(~ str_replace(., "other", "other_")) %>%
  mutate(
    time1       = coalesce(!!!select(., contains("time1"))),
    m1          = coalesce(!!!select(., contains("m1"))),
    sd1         = coalesce(!!!select(., contains("sd1"))),
    ci95l1      = coalesce(!!!select(., contains("ci95l1"))),
    ci95u1      = coalesce(!!!select(., contains("ci95u1"))),
    med1        = coalesce(!!!select(., contains("med1"))),
    rl1         = coalesce(!!!select(., contains("rl1"))),
    ru1         = coalesce(!!!select(., contains("ru1"))),
    iqrl1       = coalesce(!!!select(., contains("iqrl1"))),
    iqru1       = coalesce(!!!select(., contains("iqru1"))),
    diff1       = coalesce(!!!select(., contains("diff1"))),
    diffsd1     = coalesce(!!!select(., contains("diffsd1"))),
    diff95low1  = coalesce(!!!select(., contains("diff95low1"))),
    diff95high1 = coalesce(!!!select(., contains("diff95high1"))),
    pval1in    = coalesce(!!!select(., contains("pval1_in"))),
    pval1betw  = coalesce(!!!select(., contains("pval1_betw"))),
    time2       = coalesce(!!!select(., contains("time2"))),
    sd2         = coalesce(!!!select(., contains("sd2"))),
    m2          = coalesce(!!!select(., contains("m2"))),
    ci95l2      = coalesce(!!!select(., contains("ci95l2"))),
    ci95u2      = coalesce(!!!select(., contains("ci95u2"))),
    med2        = coalesce(!!!select(., contains("med2"))),
    rl2         = coalesce(!!!select(., contains("rl2"))),
    ru2         = coalesce(!!!select(., contains("ru2"))),
    iqrl2       = coalesce(!!!select(., contains("iqrl2"))),
    iqru2       = coalesce(!!!select(., contains("iqru2"))),
    diff2       = coalesce(!!!select(., contains("diff2"))),
    diffsd2     = coalesce(!!!select(., contains("diffsd2"))),
    diff95low2  = coalesce(!!!select(., contains("diff95low2"))),
    diff95high2 = coalesce(!!!select(., contains("diff95high2"))),
    pval2in    = coalesce(!!!select(., contains("pval2_in"))),
    pval2betw  = coalesce(!!!select(., contains("pval2_betw"))),
    time3       = coalesce(!!!select(., contains("time3"))),
    m3          = coalesce(!!!select(., contains("m3"))),
    sd3         = coalesce(!!!select(., contains("sd3"))),
    ci95l3      = coalesce(!!!select(., contains("ci95l3"))),
    ci95u3      = coalesce(!!!select(., contains("ci95u3"))),
    med3        = coalesce(!!!select(., contains("med3"))),
    rl3         = coalesce(!!!select(., contains("rl3"))),
    ru3         = coalesce(!!!select(., contains("ru3"))),
    iqrl3       = coalesce(!!!select(., contains("iqrl3"))),
    iqru3       = coalesce(!!!select(., contains("iqru3"))),
    diff3       = coalesce(!!!select(., contains("diff3"))),
    diffsd3     = coalesce(!!!select(., contains("diffsd3"))),
    diff95low3  = coalesce(!!!select(., contains("diff95low3"))),
    diff95high3 = coalesce(!!!select(., contains("diff95high3"))),
    pval3in    = coalesce(!!!select(., contains("pval3_in"))),
    pval3betw  = coalesce(!!!select(., contains("pval3_betw"))),
  ) |> 
  select(refid, study_l, study, arm_id, arm, arm_n, adl_scale, !contains("_"), matches("adl_update_arm_n[1-3]")) |> 
  rename_with(~ paste0("adl_", .x), .cols = matches("[1-3]")) |> 
  rename_with(~ str_remove(.x, "adl_adl_"))

adl_transpose <- function(data, obs_number){
  obs_number <- as.character(obs_number)
  data |> 
  select(refid:adl_scale, matches(obs_number)) |> 
  rename_with(~ str_replace(.x, obs_number, ""))
}

adl_long_dat <- bind_rows(
  adl_transpose(adl_likert_dat, 1),
  adl_transpose(adl_likert_dat, 2),
  adl_transpose(adl_likert_dat, 3)) |>
  # update arms at follow-up times
  mutate(arm_n = ifelse(!is.na(update_arm_n), update_arm_n, arm_n)) |>
  select(-update_arm_n) |>
  filter(!is.na(adl_time))

```

```{r exp_std_adl_estimates}

# add formatted m/med and imputed mean sd if missing
adl_mn_med_dat <- mean_med_table_adl(adl_long_dat, "adl_") |>
  filter(!is.na(adl_time)) |>
  select(-scale)

adl_long_dat <- left_join(adl_long_dat, adl_mn_med_dat, by = c("refid", "arm_id", "adl_time")) |> 
  rename_with(~ str_remove(.x, "adl_")) |> 
  mutate(study = paste0(study, "-", time))

# function to calculate means, sd, and create analytical data set
calc_mn_sd <- function(n_e, m_e, sd_e, md_e, q1_e, q3_e, min_e, max_e, study, tx, refid, data = NULL) {
  temp_dat <- data |> 
    select(all_of(c(n_e, m_e, sd_e, md_e, q1_e, q3_e, min_e, max_e, study, tx, refid))) %>%
    mutate(n_c = 20, m_c = 2, sd_c = 1, md_c = 3, q1_c = 2, q3_c = 3, min_c = 1, max_c = 5)
  names(temp_dat)[1:10] <- c("n_e", "m_e", "sd_e", "md_e", "q1_e", "q3_e", "min_e", "max_e", "study", "tx")

  temp <- metacont(
    n.e = n_e,
    n.c = n_c,
    comb.fixed = TRUE,
    mean.e = m_e,
    sd.e = sd_e,
    median.e = md_e,
    q1.e = q1_e,
    q3.e = q3_e,
    min.e = min_e,
    max.e = max_e,
    mean.c = m_c,
    sd.c = sd_c,
    median.c = md_c,
    q1.c = q1_c,
    q3.c = q3_c,
    min.c = min_c,
    max.c = max_c,
    sm = "SMD",
    studlab = study,
    data = temp_dat
  )

  temp <- as_tibble(temp[c("studlab", "n.e", "mean.e", "sd.e")])
  cbind(temp_dat$tx, temp) 
}

adl_scales_dat <- tribble(
  ~study, ~scale, ~metric,
  "de Jonghe 2014", "Katz ADL score", "15→0",
  "Chitnis 2022", "SF-36 physical", "0→100",
)

adl_long_dat <- 
  left_join(
  adl_long_dat,
  calc_mn_sd("arm_n", "m", "sd", "med", "iqrl", "iqru", "rl", "ru", "study", "arm", refid = "refid", data = adl_long_dat) |> rename(arm = "temp_dat$tx", study = studlab),
  by = c("study", "arm")
) |>
  mutate(
    sd.e = ifelse(study == "Zhu 2022-21", 11.85844, sd.e),
    mean.e = ifelse(is.na(mean.e) & str_detect(study, "Bakker"), -diff, mean.e),
    study_time = study,
    study = str_remove(study_time, "-.*$"),
    year = str_extract(study, "\\d{4}"),
    period = case_when(
      time < 30 ~ "<30 days",
      time <= 90 ~ "30-90 days",
      time > 90 ~ ">90 days"
    )
  ) |>
  select(-scale) |> 
  left_join(adl_scales_dat, by = "study") |>
  select(-c(ci95l:pvalbetw)) |>
  select(refid:study, study_time, arm_id, arm_n, arm, scale, metric, everything()) |>
  arrange(year, study_time, arm_id) |>
  filter(time != 0) |>
  mutate(
    smd = case_when(
      arm_id == 2 ~ suppressWarnings(smd_ci(n.e, mean.e, sd.e, lag(n.e), lag(mean.e), lag(sd.e))),
      arm_id == 1 ~ NA
    ),
    .by = study_time
  ) |> 
  mutate(table = ifelse(study == "Chitnis 2022", str_extract(table, "^\\d{2}\\.\\d{1}"), table),
         smd = ifelse(study == "Chitnis 2022" & arm_id == 2, "0.39 (-1.57 to 2.34)", smd))

adl_meta_dat <- adl_long_dat |> 
  select(study, arm, time, period, n.e, mean.e, sd.e) |> 
  pivot_wider(names_from = arm, values_from = c(n.e, mean.e, sd.e)) |> 
  rename_with(~ str_remove(.x, "\\.e"))
```

```{r exp_std_adl_gt}
#| eval: true
adl_long_dat |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  relocate(age_table, .after = arm) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    scale = ifelse(row_number() > 1, "", scale),
    time = ifelse(row_number() > 1, "", time),
    metric = ifelse(row_number() > 1, "", metric),
    .by = study_time
  ) |>
  group_by(period) |>
  gt(id = "one") |>
  row_group_order(groups = c("30-90 days", ">90 days")) |>
  cols_hide(c(refid, study, study_time, arm_id, m, sd, sd.e, n.e, mean.e, year, )) |>
  cols_label(
    study_l          = "Study",
    arm_n            = "N",
    arm              = "Arm",
    age_table        = "    Age",
    scale            = "Scale",
    metric           = "Range",
    time             = "Days",
    table            = "Rating",
    smd              = "SMD (95% CI)"
  ) |>
  fmt_markdown(columns = c(study_l, age_table, table)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(135),
    arm_n ~ px(45),
    arm ~ px(50),
    age_table ~ px(90),
    scale ~ px(100),
    metric ~ px(70),
    time ~ px(40),
    table ~ px(90),
    smd ~ px(140)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm))) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:smd), rows = str_detect(arm, "Dex|Mel"))) |>
  tab_footnote(md("SMD: standardized mean difference")) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, table)))

```

## **Complications**

### Dexmedetomidine

```{r complications_dat}

# complication_all <- c("medical", "surg", "cardiac", "cardarr", "gastro", "neuro", "pulm", "thromb", "infect", "fall", "stroke", "othcomp", "asppneum", "atelec", "bronch", "cardarr", "myoinfarct", "ssi", "sepsis", "uti", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48", "kidneyinj", "nerveinj", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

complications_kq6_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, year, study, arm_id, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high")) |>
    left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
    relocate(drug_recode_abbr, .after = arm_id) |>
    rename(arm = drug_recode_abbr) |>
    mutate(complication = var_prefix) |>
    rename_with(~ str_replace(.x, "95", "ci_"), .cols = everything()) |>
    rename_with(~ str_replace(.x, "^.*_", ""), .cols = c(8:15)) |>
    arrange(complication, year, study, arm_id)
}

# adverse event data includes all reported complications
adverse_events_dat <- map_df(complication_incl, complications_kq6_fun) |>
  filter(!study %in% c("Lu 2017", "Deng 2023")) |> # compare dexmedetomidine at different times
  mutate(
    arm_n = ifelse(!is.na(comp_update_arm_n), comp_update_arm_n, arm_n),
    calc_per = n / arm_n * 100,
    n_per = n_per_fun(n, arm_n, 1),
    diff = per - calc_per
  )

adverse_meta_dat <- adverse_events_dat |>
  left_join(cardiac_compl, by = c("refid", "complication")) |>
  mutate(
    study_compl = paste0(study, complication),
    complication = as.character(complication),
    complication = case_when(
      detail_cardiac == "bradycardia" ~ "bradycardia",
      detail_cardiac %in% c("arrhythmia", "atrial fibrillation", "tachycardia", "ventricular fibrillation") ~ "other arrhythmia",
      detail_cardiac %in% c("heart failure", "cardiac failure") ~ "pulcongest",
      .default = complication
    ),
    complication = factor(complication, levels = c("bradycardia", "other arrhythmia", "myoinfarct", "cardarr", "kidneyinj", "stroke", "pulm", "pneum", "pulcongest", "pe", "respfail", "intub"), labels = c("Bradycardia", "Other arrhythmia", "MI", "Cardiac Arrest", "Renal", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation"))
  ) |>
  select(refid, year, study, arm_id, arm, arm_n, n, complication, study_compl, detail_cardiac)

adverse_events_dat <- adverse_events_dat |>
  left_join(study_char_dat |> select(refid, study_l, surgs_single, design_f_lab), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(cardiac_compl, by = c("refid", "complication")) |>
  mutate(
    study_compl = paste0(study, complication),
    complication = as.character(complication),
    complication = case_when(
      detail_cardiac == "bradycardia" ~ "bradycardia",
      detail_cardiac %in% c("arrhythmia", "atrial fibrillation", "tachycardia", "ventricular fibrillation") ~ "other arrhythmia",
      detail_cardiac %in% c("heart failure", "cardiac failure") ~ "pulcongest",
      .default = complication
    ),
    complication = factor(complication, levels = c("bradycardia", "other arrhythmia", "myoinfarct", "cardarr", "kidneyinj", "stroke", "pulm", "pneum", "pulcongest", "pe", "respfail", "intub"), labels = c("Bradycardia", "Other arrhythmia", "MI", "Cardiac Arrest", "Renal", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation"))
  ) |> 
arrange(complication, surgs_single, year, study, arm_id) |>
  mutate(
    study_compl = paste0(study, complication),
    ref_arm_n = arm_n,
    ref_n = n
  ) |>
  group_by(study_compl) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |>
  mutate(
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 1), "—"),
    bar = case_when(
      str_detect(arm, "Dex") ~ bar_prop(calc_per, "#A93226"),
      str_detect(arm, "Ket|Mel|Ram") ~ bar_prop(calc_per, "#A93226"),
      str_detect(arm, "Plac|None") ~ bar_prop(calc_per, "#969696"),
      .default = bar_prop(calc_per, "#104E8B")
    )
  ) |>
  select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n, age_table, surgs_single, n_per, bar, rd_ci, complication, design_f_lab)

## for summary table ---------------------------------- (2024-06-04 10:51) @----
# adverse_events_dat |>
#   filter(refid %in% dex_refid) |>
#   group_by(refid, arm_id) |>
#   slice(1) |>
#   ungroup() |>
#   summarise(total = sum(arm_n))
# 
# adverse_events_dat |>
#   filter(refid %in% dex_refid) |>
#   group_by(refid) |>
#   slice(1) |>
#   ungroup() |>
#   tabyl(design_f_lab)

```

```{r hypotension}

hypotension_dat <- dichot_dat |>
  filter(!(study == "Liao 2023" & arm_id == 2)) |>
  # filter(study %in% c("Li 2023", "Wong 2020a", "Guo 2015", "Ma 2023", "Hong 2021")) |> 
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, design_f_lab, design_f_abbrev), by = "refid") |> # add design_f
  rename(arm = drug_recode_abbr) |>
  filter(if_any(starts_with("hypo_"), ~ !is.na(.x))) |>
  arrange(study, arm_id) |>
  mutate(
    complication = "Hypotension",
    study_compl = paste0(study, "Hypotension"),
    ref_arm_n = arm_n,
    ref_n = hypo_n,
    arm_n = ifelse(!is.na(hypo_update_arm_n), hypo_update_arm_n, arm_n),
    bar = case_when(
      str_detect(arm, "Dex") ~ bar_prop(hypo_per, "#A93226"),
      str_detect(arm, "Ket|Mel|Ram") ~ bar_prop(hypo_per, "#A93226"),
      str_detect(arm, "Plac|None") ~ bar_prop(hypo_per, "#969696"),
      .default = bar_prop(hypo_per, "#104E8B")
    ),
    n_per = n_per_fun(hypo_n, arm_n)
  ) |>
  group_by(study_compl) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n),
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(hypo_n, arm_n, ref_n, ref_arm_n, digits = 1), "—"),
  ) |>
  ungroup() |>
  left_join(study_char_dat |> select(refid, surgs_single, design_f_lab), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  # select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n_per, rd_ci, complication) 
  rename(n = hypo_n) |> 
  select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n, age_table, surgs_single, n_per, bar, rd_ci, complication, design_f_lab)

```

#### Bradycardia

<caption_mg> `r table_ref()` Bradycardia in randomized and nonrandomized dexmedetomidine clinical trials. </caption_mg>

```{r bradycardia_dex_gt}
## table bradycardia ------------------------------------------ (2023-06-17 20:28) @----
adverse_events_dat |>
  filter(complication == "Bradycardia") |> 
  filter(study != "Lu 2017") |>  # remove Lu 2017 compares timing
  filter(any(arm %in% "Dex"), .by = study) |> 
  left_join(cardiac_compl |> filter(detail_cardiac == "bradycardia") |> select(refid, brady_defn), by = c("refid")) |> 
  mutate(brady_defn = factor(brady_defn, levels = c("<40 bpm", "<50 bpm", "<55 bpm", "<60 bpm", "<45 bpm or ↓30%", "↓25%", "NR"))) |> 
  filter(!refid %in% mel_ram_refid) |> # tabyl(complication) |> arrange(n)
  arrange(brady_defn, year, study, arm_id) |> 
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    brady_defn = ifelse(row_number() > 1, "", as.character(brady_defn)),
    surgs_single = ifelse(row_number() > 1, "", surgs_single), 
    .by = study_compl
  ) |>
  filter(complication == "Bradycardia") |>
  group_by(design_f_lab) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial", "Nonrandomized Trial")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab, complication)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)",
    brady_defn       = "Criteria"
  ) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(135),
    arm_n ~ px(45),
    arm ~ px(70),
    age_table ~ px(100),
    surgs_single ~ px(60),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140),
    brady_defn ~ px(125)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Dex"))) |>
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Ket|Mel|Ram|Dex|Plac|None"))) |>
  tab_footnote(md("Before-After/Time Series"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Before-After/Time Series")) |>
  tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial")) |>
  tab_footnote("RD: risk difference; Dex: Dexmedetomidine; Dex/Preg: Dexmedetomidine/Pregabalin; Mid: Midazolam; Prop: Propofol; Ram: ramelteon; Plac: placebo; None: no active or placebo comparator; GI/Abd: gastrointestinal/abdominal; Ortho: orthopedic; Oralmax: oral or maxilofacial.")

```

```{r compl_meta_dex}
hypotension_foot_dat <- dichot_dat |>
  select(refid, study, hypo_def) |> 
  filter(!is.na(hypo_def)) |> 
  distinct() |> 
  mutate(
    study_compl = paste0(study, "Hypotension"),
    hypo_def = str_replace(hypo_def, "\\(mean arterial pressure \\(MAP\\) was less than 20% of the baseline", "↓MAP >20%."),
    hypo_def = str_replace(hypo_def, "a decrease of systolic blood pressure of more than 30% from baseline \\(average value in the ward\\) and lasting for at least 15 minutes", "↓SPB >30% ≥15 min."),
    hypo_def = str_replace(hypo_def, "systolic blood pressure <90 mm Hg or a decrease of more than 30% from baseline", "↓SBP >30% or <90."),
    hypo_def = str_replace(hypo_def, "systolic blood pressure less than 95 mm Hg.", "SBP <95"),
    hypo_def = str_replace(hypo_def, "defined as 20% reduction in systolic blood pressure  90 mmHg", "↓SBP ≥20% or <90"),
    hypo_def = str_replace(hypo_def, "systolic blood pressure less than 90 mm Hg for 5 minutes or more", "SBP <90 ≥5 min."),
    hypo_def = str_replace(hypo_def, "SBP <95 or >20% lower than baseline", "↓SBP >20% or <95."),
    hypo_def = str_replace(hypo_def, "SBP <90 or >30% lower than baseline", "↓SBP >30% or <90."),
    hypo_def = str_replace(hypo_def, "SBP <90 or >20% lower than baseline", "↓SBP >20% or <90."),
    hypo_def = str_replace(hypo_def, "MBP <=70", "MAP ≤70."),
    hypo_def = str_replace(hypo_def, "MAP <60",  "MAP <60."),
    hypo_def = str_replace(hypo_def, ">30% lower than baseline", "↓SBP >30%."),
    hypo_def = str_replace(hypo_def, "SBP <90", "SBP <90."),
    hypo_def = str_replace(hypo_def, "SBP <80 or >20% lower than baseline", "↓SBP >20% or <80."),
    hypo_def = str_replace(hypo_def, "20% decrease from baseline", "↓SBP >20%."),
    hypo_def = str_replace(hypo_def, "SBP decrease >30% from baseline or <80 mmHg", "↓SBP >30% or <80."),
    hypo_def = str_replace(hypo_def, "<90 mmHg", "SBP <90."),
    hypo_def = str_replace(hypo_def, "unspecified", "NS."),
    hypo_def = str_replace(hypo_def, "unspeficied", "NS."),
    ) |> 
    arrange(hypo_def) |> 
    mutate(hypo_def = str_remove_all(hypo_def, "\\.")) 

hypotension_meta_dat <-  hypotension_dat |> 
  left_join(hypotension_foot_dat |> select(refid, hypo_def), by = c("refid")) |> 
  select("refid", "year", "study", "arm_id", "arm", "arm_n", "n", "complication", "study_compl", "hypo_def") |> 
  rename(detail_cardiac = hypo_def)

adverse_meta_dat <- adverse_meta_dat |> 
  bind_rows(hypotension_meta_dat) 

adverse_dex_meta_dat <- adverse_meta_dat |>
  filter(refid %in% dex_refid) |>
  filter(!arm %in% c("Dex/Preg", "Preg")) |>
  group_by(study_compl) |>
  filter(any(arm %in% c("Plac", "None"))) |>
  ungroup() |> 
  mutate(
    n = case_when(
      study_compl == "Zhao 2020cardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020cardiac", c(2, 3, 4), n),
      study_compl == "Zhao 2020pulm" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020pulm", c(2, 3, 4), n),
      study_compl == "Zhao 2020Hypotension" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020Hypotension", c(2, 3, 4), n),
      study_compl == "Li 2021bcardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Li 2021bcardiac", c(2, 3, 4), n),
      study_compl == "Li 2021bHypotension" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Li 2021bHypotension", c(2, 3, 4), n),
      .default = n
    ),
    arm_n = case_when(
      study_compl == "Zhao 2020cardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020cardiac", c(2, 3, 4), arm_n),
      study_compl == "Zhao 2020pulm" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020pulm", c(2, 3, 4), arm_n),
      study_compl == "Zhao 2020Hypotension" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020Hypotension", c(2, 3, 4), arm_n),
      study_compl == "Li 2021bcardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Li 2021bcardiac", c(2, 3, 4), arm_n),
      study_compl == "Li 2021bHypotension" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Li 2021bHypotension", c(2, 3, 4), arm_n),
      .default = arm_n
    ),
    arm = fct_collapse(arm, Plac = c("Plac", "None"))
  ) |>
  filter(!(study_compl %in% c("Zhao 2020cardiac") & arm_id %in% c(3, 4))) |>
  filter(!(study_compl %in% c("Zhao 2020pulm") & arm_id %in% c(3, 4))) |>
  filter(!(study_compl %in% c("Li 2021bcardiac") & arm_id %in% c(3, 4))) |>
  filter(!(study_compl %in% c("Zhao 2020Hypotension") & arm_id %in% c(3, 4))) |> 
  filter(!(study_compl %in% c("Li 2021Hypotension") & arm_id %in% c(3, 4))) |> 
  filter(!(study_compl %in% c("Liao 2023cardiac") & arm_id %in% c(2)))

adverse_dex_meta_wide_dat <- adverse_dex_meta_dat |>
  arrange(refid, complication) |>
  pivot_wider(names_from = "arm", values_from = arm_n:n) |>
  group_by(study_compl) |>
  fill(arm_n_Plac:n_Dex) |>
  slice(2) |>
  ungroup() |>
  arrange(complication, year, study) |>
  left_join(rob2_meta_dat, by = "refid")

```

<caption_mg> `r figure_ref()` **Risk ratio** for bradycardia (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r dex_brady_meta}
#| echo: false
#| include: false

brady_meta_dat <- adverse_dex_meta_wide_dat |> 
  filter(refid %in% rct_refid) |> 
  left_join(cardiac_compl |> select(refid, brady_defn), by = c("refid"))

brady_meta <- metabin(
  n_Dex, arm_n_Dex, n_Plac, arm_n_Plac,
  data = brady_meta_dat,
  studlab = study,
  hakn = TRUE,
  sm = "RR",
  method.tau = "REML",
  # subset = !grepl("\\*", study),
  subset = complication == "Bradycardia",
  allstudies = FALSE
)  

# metaprop(n_Dex, arm_n_Dex, data = brady_meta_dat, subset = complication == "Bradycardia")
# metaprop(n_Plac, arm_n_Plac, data = brady_meta_dat, subset = complication == "Bradycardia")

temp_meta <- brady_meta
temp_meta <- update(temp_meta, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

png("assets/kq6_dex_brady_meta_rr.png", width = 10.5, height = 8.5, units = "in", res = 300)
forest(brady_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex",
  label.c = "Placebo",
  # rightcols = c("effect", "ci"),
  # rightlabs = c("RD ", "(95% CI)  "),
  just.addcols.right = "left",
  rightcols = c("effect", "ci", "brady_defn"),
  rightlabs = c("RR ", "(95% CI)  ", "Bradycardia \nCriteria"),
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  xlab = "Favors: Dexmedetomidine                     Plac/None",
  addrows.below.overall = 4,
  text.addline1 = "NR: not reported; bpm: beats per minute.",
)
dev.off()

trim_image("kq6_dex_brady_meta_rr.png")

```
![](assets/kq6_dex_brady_meta_rr.png){fig.align="left" width="71%"}

<foot_mg> `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> Similar arms combined in Li 2021b and Zhao 2020. </foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
##### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects and bradycardia --- funnel plot and limit meta-analysis. </caption_mg>

```{r dex_plac_brady_meta_funnel_limit}
#| echo: false
#| include: false

temp_meta <- update(brady_meta, sm = "OR")
temp_limit_meta <- limitmeta(temp_meta)

png("assets/kq6_dex_brady_meta_funnel.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
funnel(temp_limit_meta, pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")
legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = limit_colors, bty = "n")
text(4.8, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
dev.off()

```

![](assets/kq6_dex_brady_meta_funnel.png){fig.align="left" width="70%"}

<foot_mg> Estimates (odds ratio and 95% CI) from random effects model --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
##### <caption_mg> `r figure_ref()` **Risk difference** for bradycardia (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r complication_brady_meta_rd}
#| echo: false
#| include: false

brady_meta_rd <- update(brady_meta, sm = "RD")

png("assets/kq6_brady_meta_rd.png", width = 10.5, height = 8.5, units = "in", res = 300)
forest(brady_meta_rd,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex",
  label.c = "Placebo",
  just.addcols.right = "left",
  rightcols = c("effect", "ci", "brady_defn"),
  rightlabs = c("RD", "(95% CI)", "Bradycardia \nCriteria"),
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pscale = 100,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-20, 20),
  xlab = "Favors: Dexmedetomidine                     Plac/None",
  addrows.below.overall = 4,
  text.addline1 = "NR: not reported; bpm: beats per minute."
)
dev.off()

trim_image("kq6_brady_meta_rd.png")

```
![](assets/kq6_brady_meta_rd.png){fig.align="left" width="70%"}
:::

#### Hypotension

<caption_mg> `r table_ref()` Hypotension in randomized and nonrandomized dexmedetomidine clinical trials. </caption_mg>

```{r hypotension_dex_gt}
hypotension_foot_dat <- dichot_dat |>
  select(refid, study, hypo_def) |> 
  filter(!is.na(hypo_def)) |> 
  distinct() |> 
  mutate(
    study_compl = paste0(study, "Hypotension"),
    hypo_def = str_replace(hypo_def, "\\(mean arterial pressure \\(MAP\\) was less than 20% of the baseline", "↓MAP >20%."),
    hypo_def = str_replace(hypo_def, "a decrease of systolic blood pressure of more than 30% from baseline \\(average value in the ward\\) and lasting for at least 15 minutes", "↓SPB >30% ≥15 min."),
    hypo_def = str_replace(hypo_def, "systolic blood pressure <90 mm Hg or a decrease of more than 30% from baseline", "↓SBP >30% or <90."),
    hypo_def = str_replace(hypo_def, "systolic blood pressure less than 95 mm Hg.", "SBP <95"),
    hypo_def = str_replace(hypo_def, "defined as 20% reduction in systolic blood pressure  90 mmHg", "↓SBP ≥20% or <90"),
    hypo_def = str_replace(hypo_def, "systolic blood pressure less than 90 mm Hg for 5 minutes or more", "SBP <90 ≥5 min."),
    hypo_def = str_replace(hypo_def, "SBP <95 or >20% lower than baseline", "↓SBP >20% or <95."),
    hypo_def = str_replace(hypo_def, "SBP <90 or >30% lower than baseline", "↓SBP >30% or <90."),
    hypo_def = str_replace(hypo_def, "SBP <90 or >20% lower than baseline", "↓SBP >20% or <90."),
    hypo_def = str_replace(hypo_def, "MBP <=70", "MAP ≤70."),
    hypo_def = str_replace(hypo_def, "MAP <60",  "MAP <60."),
    hypo_def = str_replace(hypo_def, ">30% lower than baseline", "↓SBP >30%."),
    hypo_def = str_replace(hypo_def, "SBP <90", "SBP <90."),
    hypo_def = str_replace(hypo_def, "SBP <80 or >20% lower than baseline", "↓SBP >20% or <80."),
    hypo_def = str_replace(hypo_def, "20% decrease from baseline", "↓SBP >20%."),
    hypo_def = str_replace(hypo_def, "SBP decrease >30% from baseline or <80 mmHg", "↓SBP >30% or <80."),
    hypo_def = str_replace(hypo_def, "<90 mmHg", "SBP <90."),
    hypo_def = str_replace(hypo_def, "unspecified", "NS."),
    hypo_def = str_replace(hypo_def, "unspeficied", "NS."),
    ) |> 
    arrange(hypo_def) |> 
    mutate(hypo_def = str_remove_all(hypo_def, "\\.")) 

adverse_events_dat |>
  bind_rows(hypotension_dat) |>
  left_join(hypotension_foot_dat |> select(refid, hypo_def), by = c("refid")) |>
  filter(any(arm %in% "Dex"), .by = study) |>
  mutate(
    hypo_def = factor(hypo_def, levels = c("MAP <60", "MAP ≤70", "↓MAP >20%", "SBP <90", "SBP <90 ≥5 min", "SBP <95", "↓SBP >20%", "↓SBP >20% or <80", "↓SBP >20% or <90", "↓SBP >20% or <95", "↓SBP >30%", "↓SBP >30% or <80", "↓SBP >30% or <90", "↓SPB >30% ≥15 min", "<20% from baseline", "NS"))) |> 
  arrange(hypo_def, year, study, arm_id) |> 
  filter(complication == "Hypotension") |> 
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    surgs_single = ifelse(row_number() > 1, "", surgs_single), 
    hypo_def = ifelse(row_number() > 1, "", as.character(hypo_def)), 
    .by = study_compl
  ) |>
  group_by(design_f_lab) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial", "Nonrandomized Trial", "Retrospective Cohort")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab, complication)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)",
    hypo_def         = "Criteria"
  ) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(135),
    arm_n ~ px(45),
    arm ~ px(75),
    age_table ~ px(100),
    surgs_single ~ px(60),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140),
    hypo_def ~ px(130)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Dex"))) |>
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Ket|Mel|Ram|Dex|Plac|None"))) |>
  tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial")) |>
  tab_footnote("RD: risk difference; MAP: mean arterial blood pressure; Dex: Dexmedetomidine; Dex/Preg: Dexmedetomidine/Pregabalin; Mid: Midazolam; Prop: Propofol; Rem: remimazolam; Plac: placebo; None: no active or placebo comparator; GI/Abd: gastrointestinal/abdominal; Ortho: orthopedic;  Urol: urologic; Oralmax: oral or maxilofacial; NS: not specified.")

```

<caption_mg> `r figure_ref()` **Risk ratio** for hypotension (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r complication_hypo_meta}
#| echo: false
#| include: false

adverse_dex_meta_hypo_dat <- adverse_dex_meta_wide_dat |> 
  filter(refid %in% rct_refid) |> 
  mutate(detail_cardiac = ifelse(detail_cardiac == "NS", "NR", detail_cardiac)) |>
  left_join(hypotension_foot_dat |> select(refid, hypo_def), by = c("refid"))

# temp <- adverse_dex_meta_hypo_dat |> 
#   filter(complication == "Hypotension") |>
#   summarise(
#     n_Dex = sum(n_Dex),
#     arm_n_Dex = sum(arm_n_Dex),
#     n_Plac = sum(n_Plac),
#     arm_n_Plac = sum(arm_n_Plac)
#   )

hypo_meta <- metabin(
  n_Dex, arm_n_Dex, n_Plac, arm_n_Plac,
  data = adverse_dex_meta_hypo_dat,
  studlab = study,
  method.random.ci = "HK",
  method.predict = "HK",
  sm = "RR",
  method.tau = "REML",
  # subset = !grepl("\\*", study),
  subset = complication == "Hypotension", # & !study  %in% c("Li 2021b", "Zhao 2020"),
  allstudies = TRUE
)  

# metaprop(n_Dex, arm_n_Dex, data = brady_meta_dat, subset = complication == "Hypotension")
# metaprop(n_Plac, arm_n_Plac, data = brady_meta_dat, subset = complication == "Hypotension")

temp_meta <- hypo_meta
temp_meta <- update(temp_meta, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

png("assets/kq6_hypo_meta.png", width = 10, height = 10, units = "in", res = 300)
forest(hypo_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex",
  label.c = "Placebo",
  just.addcols.right = "left",
  rightcols = c("effect", "ci", "detail_cardiac"),
  rightlabs = c("RR ", "(95% CI)  ", "Hypotension \nCriteria"),
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  xlab = "Favors: Dexmedetomidine                     Plac/None",
  addrows.below.overall = 4,
  text.addline1 = "NR: not reported."
)
dev.off()

trim_image("kq6_hypo_meta.png")
```
![](assets/kq6_hypo_meta.png){fig.align="left" width="70%"}

<foot_mg> `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")` <br/> Similar arms combined in Li 2021b and Zhao 2020. </foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
##### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects and hypotension --- funnel plot. </caption_mg>

```{r dex_plac_hypo_meta_funnel_limit}
#| echo: false
#| include: false

temp_meta <- update(hypo_meta, sm = "OR")
temp_limit_meta <- limitmeta(temp_meta)

png("assets/kq6_dex_plac_hypo_meta_funnel_limit.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
funnel(temp_limit_meta, xlim = c(0.1, 15), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, cex.studlab = 0.6, ff.smlab = "italic")
legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = limit_colors, bty = "n")
text(4.3, 0.025, labels = "Adjusted estimate", col = "#5a5a5a", pos = 3, cex = .9)
dev.off()

trim_image("kq6_dex_plac_hypo_meta_funnel_limit.png")

```
![](assets/kq6_dex_plac_hypo_meta_funnel_limit.png){fig.align="left" width="70%"}


<foot_mg> Estimates (odds ratio and 95% CI) from random effects models --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
##### <caption_mg> `r figure_ref()` **Risk difference** for hypotension (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r complication_hypo_meta_rd}
#| echo: false
#| include: false

adverse_meta_rd <- update(hypo_meta, sm = "RD")

png("assets/kq6_hypo_dex_meta_rd.png", width = 10.5, height = 10.5, units = "in", res = 300)
forest(adverse_meta_rd,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex",
  label.c = "Placebo",
  just.addcols.right = "left",
  rightcols = c("effect", "ci", "detail_cardiac"),
  rightlabs = c("RD", "(95% CI)", "Hypotension \nCriteria"),
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pscale = 100,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-20, 20),
  xlab = "Favors: Dexmedetomidine                     Plac/None",
  addrows.below.overall = 4,
  text.addline1 = "NR: not reported; bpm: beats per minute."
)
dev.off()

trim_image("kq6_hypo_dex_meta_rd.png")

```
![](assets/kq6_hypo_dex_meta_rd.png){fig.align="left" width="70%"}

:::

#### Other

<caption_mg> `r table_ref()` Other complications reported in dexmedetomidine studies --- cardiac, MI, stroke, renal, and respiratory (randomized clinical trials unless noted). </caption_mg>

```{r other_compl_dex_gt}
adverse_events_dat |> 
  # bind_rows(hypotension_dat) |>
  # filter(!refid %in% mel_ram_refid) |> tabyl(complication) |> arrange(n)
  filter(complication != "Bradycardia") |> 
  filter(any(arm %in% "Dex"), .by = study) |> 
  mutate(
    complication = factor(complication,
      levels = c("Other arrhythmia", "MI", "Cardiac Arrest", "Renal", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation"),
      labels = c("Other Arrhythmia", "MI", "Cardiac Arrest", "Renal", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation")
    ),
    complication = fct_drop(complication)
  ) |> # tabyl(complication) |> arrange(n)
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    surgs_single = ifelse(row_number() > 1, "", surgs_single), .by = study_compl
  ) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("MI", "Cardiac Arrest", "Other Arrhythmia", "Stroke", "Renal", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(135),
    arm_n ~ px(45),
    arm ~ px(75),
    age_table ~ px(100),
    surgs_single ~ px(80),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Dex"))) |>
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Ket|Mel|Ram|Dex|Plac|None"))) |>
  tab_footnote(md("Before-After/Time Series"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Before-After/Time Series")) |>
  tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial")) |>
  tab_footnote(md("Retrospective Cohort"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Retrospective Cohort")) |>
  tab_footnote("RD: risk difference; MI: myocardial infarction.") |>
  tab_footnote("Pulmonary congestion includes heart failure diagnosis.", locations = cells_row_groups(groups = "Pulmonary Congestion")) 

```

<caption_mg> `r figure_ref()` **Risk ratios** for other complications --- myocardial infarction, other arrhythmia (excludes bradycardia), stroke, pulmonary, and renal (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r complication_rr_meta}
#| echo: false
#| include: false

adverse_other_dat <- adverse_dex_meta_wide_dat |> 
  filter(refid %in% rct_refid)

adverse_meta <- metabin(
  n_Dex, arm_n_Dex, n_Plac, arm_n_Plac,
  data = adverse_other_dat,
  studlab = study,
  sm = "RR",
  hakn = FALSE,
  subgroup = complication,
  subset = !complication %in%  c("Bradycardia", "Hypotension") & !grepl("\\*", study),
  allstudies = FALSE
)  

png("assets/kq6_adverse_dex_other_rr_meta.png", width = 10, height = 15, units = "in", res = 300)
forest(adverse_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Dex",
  label.c = "Placebo",
  just.addcols.right = "center",
  rightcols = c("effect", "ci"), 
  rightlabs = c("RR", "(95% CI)"), 
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  test.subgroup = FALSE,
  overall.hetstat = FALSE,
  print.subgroup.name = FALSE,
  overall = FALSE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  # xlim = c(-20, 20),
  xlab = "Favors: Dexmedetomidine                            Plac/None            ",
  addrows.below.overall = 4
)
dev.off()

trim_image("kq6_adverse_dex_other_rr_meta.png")

```
![](assets/kq6_adverse_dex_other_rr_meta.png){fig.align="left" width="62%"}

<foot_mg> Similar arms combined for Zhao 2020. </foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` **Risk differences** for other complications --- myocardial infarction, other arrhythmia (excludes bradycardia), stroke, pulmonary, and renal (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r complication_rd_meta}
#| echo: false
#| include: false

adverse_other_dat <- adverse_dex_meta_wide_dat |> 
  filter(refid %in% rct_refid)

adverse_meta <- metabin(
  n_Dex, arm_n_Dex, n_Plac, arm_n_Plac,
  data = adverse_other_dat,
  studlab = study,
  sm = "RD",
  hakn = FALSE,
  subgroup = complication,
  subset = !complication %in%  c("Bradycardia", "Hypotension") & !grepl("\\*", study),
  allstudies = FALSE
)  

png("assets/kq6_adverse_dex_other_rd_meta.png", width = 10, height = 15, units = "in", res = 300)
forest(adverse_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Dex",
  label.c = "Placebo",
  just.addcols.right = "center",
  rightcols = c("effect", "ci"), 
  rightlabs = c("RD", "(95% CI)"), 
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  test.subgroup = FALSE,
  overall.hetstat = FALSE,
  print.subgroup.name = FALSE,
  overall = FALSE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pscale = 100,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-20, 20),
  xlab = "Favors: Dexmedetomidine                            Plac/None            ",
  addrows.below.overall = 4
)
dev.off()

trim_image("kq6_adverse_dex_other_rd_meta.png")

```
![](assets/kq6_adverse_dex_other_rd_meta.png){fig.align="left" width="62%"}

<foot_mg> Similar arms combined for Zhao 2020. </foot_mg>
:::

### Ketamine

<caption_mg> `r table_ref()` Complications reported in ketamine randomized clinical trials --- bradycardia, hypotension and renal. </caption_mg>

```{r complications_ket_gt}

adverse_events_dat |>
  filter(refid %in% ket_refid) |>
  bind_rows(hypotension_dat |> filter(refid %in% ket_refid) |> arrange(arm_id)) |> 
  left_join(hypotension_foot_dat |> select(refid, hypo_def), by = c("refid")) |>
  left_join(cardiac_compl |> filter(detail_cardiac == "bradycardia") |> select(refid, brady_defn), by = c("refid")) |> 
  mutate(
    note = case_when(
      complication == "Bradycardia" ~ brady_defn,
      complication == "Hypotension" ~ hypo_def,
      .default = NA),
    complication = fct_drop(complication),
  ) |>
  select(-brady_defn, -hypo_def) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    note = ifelse(row_number() > 1, "", note),
    surgs_single = ifelse(row_number() > 1, "", surgs_single), .by = study_compl
  ) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("Bradycardia", "Hypotension", "Renal")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)",
    note             = "Note"
  ) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    arm ~ px(60),
    age_table ~ px(100),
    surgs_single ~ px(80),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140),
    note ~ px(130)
  ) |> 
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci, note))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket")))

```

### Ramelteon

<caption_mg> `r table_ref()` Complications reported in ramelteon studies --- cardiac, MI, stroke, pulmonary, pneumonia, and renal (all before-after designs). </caption_mg>

```{r complications_mel_ram_gt}
adverse_events_dat |>
  filter(refid %in% mel_ram_refid) |>
  # left_join(hypotension_foot_dat |> select(refid, hypo_def), by = c("refid")) |>
  # left_join(cardiac_compl |> filter(detail_cardiac == "bradycardia") |> select(refid, brady_defn), by = c("refid")) |>
  mutate(
    complication = fct_drop(complication),
    complication = fct_recode(complication, "Arrhythmia" = "Other arrhythmia")
  ) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    surgs_single = ifelse(row_number() > 1, "", surgs_single),
    .by = study_compl
  ) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("Arrhythmia", "Pulmonary", "Pneumonia")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    arm ~ px(60),
    age_table ~ px(100),
    surgs_single ~ px(80),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Dex"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Ket|Mel|Ram|Dex|Plac|None"))) |>
  tab_footnote(md("Before-After/Time Series"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Before-After/Time Series")) |>
  tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial")) |>
  tab_footnote("Not otherwise specified.", locations = cells_row_groups(groups = "Arrhythmia"))
  
```

#### *Pooled*

```{r complications_ram_meta}
#| echo: false
#| include: false

adverse_ram_meta_dat <- adverse_meta_dat |>
  filter(refid %in% mel_ram_refid) |> 
  filter(complication == "Pneumonia")

adverse_ram_meta_wide_dat <- adverse_ram_meta_dat |>
  arrange(refid, complication) |>
  pivot_wider(names_from = "arm", values_from = arm_n:n) |>
  group_by(study_compl) |>
  fill(arm_n_None:n_Ram) |>
  slice(2) |>
  ungroup() |>
  arrange(complication, year, study) |>
  left_join(robinsi_meta_dat, by = "refid")

```

<caption_mg> `r figure_ref()` **Risk difference** in pneumonia (ramelteon versus no interventions; before-after studies). </caption_mg>

```{r complication_ram_meta,  fig.width = 16, fig.height = 4.5, fig.align = "left"}
#| echo: false
#| include: false

adverse_ram_meta <- metabin(
  n_Ram, arm_n_Ram, n_None, arm_n_None,
  data = adverse_ram_meta_wide_dat,
  studlab = study,
  sm = "RD",
  subgroup = complication,
  allstudies = FALSE
)  

png("assets/kq6_adverse_ram_meta.png", width = 8.5, height = 5.5, units = "in", res = 300)
forest(adverse_ram_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Ramelteon",
  label.c = "None",
  rightlabs = c("RD ", "(95% CI)  "),
  just.addcols.right = "center",
  rightcols = c("effect", "ci"),

  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  test.subgroup = FALSE,
  overall.hetstat = FALSE,
  print.subgroup.name = FALSE,
  overall = FALSE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pscale = 100,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  # xlim = c(-20, 20),
  xlab = "Favors: Ramelteon                  None",
  addrows.below.overall = 4
)
dev.off()

trim_image("kq6_adverse_ram_meta.png")

```
![](assets/kq6_adverse_ram_meta.png){fig.align="left" width="68%"}

## **Length of Stay**

### Dexmedetomidine

<caption_mg> `r table_ref()` Length of stay according to procedure classification and comparator in dexmedetomidine studies. </caption_mg>

```{r length_of_stay}

los_tab <- contin_dat |>
  mutate(los_for_tables(contin_dat)) |>
  filter(if_any(los_m:los_diff_pval, ~ !is.na(.))) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid" ) |> 
  mutate(
    refid_arm_id = paste0(refid, "-", arm_id),
    surg_groups = paste0(surgs_single_f, " - ", design_f_lab),
    mean_med = case_when(
      !is.na(los_m) ~ los_m,
      !is.na(los_med) ~ los_med
    ),
    drug_recode_abbr = fct_drop(drug_recode_abbr),
    calc_prop_25d = 100 * mean_med / 25,
    bar = case_when(
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(calc_prop_25d, "#A93226"),
      str_detect(drug_recode_abbr, "Ket") ~ bar_prop(calc_prop_25d, "#F39C12"),
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(calc_prop_25d, "#104E8B"),
      .default = bar_prop(calc_prop_25d, "#969696")
    )
  ) |>
  # select(refid, arm_id, arm_n, drug_recode_abbr, age_table, asa_ps_incl, surg_groups, study, los_table, bar, starts_with(("los"))) |>
  arrange(surg_groups, year, study, arm_id) |> 
  select(refid, refid_arm_id, study, study_l, arm_n, drug_recode_abbr, asa_ps_incl, age_table, los_table, bar, surg_groups, country)

los_tab |>
  filter(refid %in% dex_refid) |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         country = ifelse(row_number() > 1, "", country),
         .by = refid) |> 
  group_by(surg_groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "GI/Abd - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "ENT - Randomized Clinical Trial", "Oralmax - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Cardiac - Retrospective Cohort")) |> 
  cols_hide(c(refid, refid_arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = " N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = "PS",
    age_table = "    Age",
    los_table = "    LOS",
    bar = "0 – 25 days",
    country = "Country"
  ) |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120),
    country ~ px(80)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, drug_recode_abbr,  bar))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, drug_recode_abbr, asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Dex"))) |> 
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Ket"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Mel|Ram"))) |> 
  tab_footnote(md("NR: not reported")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl)))
  
```

### Ketamine

<caption_mg> `r table_ref()` Length of stay according to procedure classification and comparator in ketamine studies. </caption_mg>

```{r length_of_stay_ket}
los_tab |> 
  filter(refid %in% ket_refid) |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         country = ifelse(row_number() > 1, "", country),
         .by = refid) |> 
  group_by(surg_groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "Spine - Prospective Cohort")) |> 
  cols_hide(c(refid, refid_arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = " N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = "PS",
    age_table = "    Age",
    los_table = "    LOS",
    bar = "0 – 25 days",
    country = "Country"
  ) |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120),
    country ~ px(80)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, drug_recode_abbr,  bar))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, drug_recode_abbr, asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Dex"))) |> 
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Ket"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Mel|Ram"))) |> 
  tab_footnote(md("NR: not reported")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl)))
```

### Melatonin or ramelteon
<caption_mg> `r table_ref()` Length of stay according to procedure classification and comparator in melatonin or ramelteon studies. </caption_mg>

```{r length_of_stay_mel_ram}
los_tab |> 
  filter(refid %in% mel_ram_refid) |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         country = ifelse(row_number() > 1, "", country),
         .by = refid) |> 
  group_by(surg_groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "Thoracic - Before-After/Time Series", "GI/Abd - Before-After/Time Series")) |> 
  cols_hide(c(refid, refid_arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = " N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = "PS",
    age_table = "    Age",
    los_table = "    LOS",
    bar = "0 – 25 days",
    country = "Country"
  ) |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120),
    country ~ px(80)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, drug_recode_abbr,  bar))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, drug_recode_abbr, asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Dex"))) |> 
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Ket"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Mel|Ram"))) |> 
  tab_footnote(md("NR: not reported")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl)))
```

### *Pooled*

```{r los_meta_dat}

los_meta_dat <- contin_dat |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  relocate(drug_recode_abbr, .after = arm_id) |>
  rename(arm = drug_recode_abbr) |>
  filter(refid %in% los_tab$refid) |> 
  select(refid, study, design_f_lab, arm, arm_n, los_m, los_sd, los_med, los_rl, los_ru, los_iqrl, los_iqru, los_95l, los_95u, country) |> 
  mutate(
    los_sd = ifelse(is.na(los_sd) & !is.na(los_95l + los_95u), se_ci_fun(los_95u, los_95l) * sqrt(arm_n), los_sd),
  ) |> 
  rename_with(~ str_remove(.x, "los_")) |> 
  select(!matches("95")) 

los_dex_meta_dat <- los_meta_dat |> 
  filter(arm %in% c("Dex", "Plac", "None")) |> 
  filter(str_detect(design_f_lab, "Rand")) |> 
  mutate(arm = fct_drop(fct_collapse(arm, Plac = c("Plac", "None")))) |> 
  group_by(study) |> 
  filter(max(n()) > 1) |> 
  filter(!n_distinct(arm) == 1) |> 
  ungroup() |> 
  pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  arrange(year) 

# los_ket_meta_dat <- los_meta_dat |> 
#   filter(arm %in% c("Ket", "Plac", "None")) |> 
#   filter(str_detect(design_f_lab, "Rand")) |> 
#   mutate(arm = fct_drop(fct_collapse(arm, Plac = c("Plac", "None")))) |> 
#   group_by(study) |> 
#   filter(max(n()) > 1) |> 
#   filter(!n_distinct(arm) == 1) |> 
#   ungroup() |> 
#   pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
#   mutate(year = str_extract(study, "\\d{4}")) |> 
#   arrange(year) 

los_mel_ram_meta_dat <- los_meta_dat |> 
  filter(arm %in% c("Mel", "Ram", "Plac", "None")) |> 
  mutate(arm = fct_drop(fct_collapse(arm, Plac = c("Plac", "None"))),
         arm = fct_collapse(arm, MelRam = c("Mel", "Ram"))) |> 
  filter(str_detect(design_f_lab, "Rand")) |> 
  group_by(study) |> 
  filter(max(n()) > 1) |> 
  filter(!n_distinct(arm) == 1) |> 
  ungroup() |> 
  pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  arrange(year)

```

#### Dexmedetomidine

<caption_mg> `r figure_ref()` Mean difference in lengths of stay (dexmedetomidine versus placebo; randomized clinical trials). </caption_mg>

```{r los_dex_meta}
#| echo: false
#| include: false

los_dex_meta <- metacont(
  n.e = arm_n_Dex, 
  n.c = arm_n_Plac,
  common =  TRUE,
  mean.e = m_Dex,
  sd.e = sd_Dex,
  median.e = med_Dex,
  q1.e = iqrl_Dex,
  q3.e = iqru_Dex,
  min.e = rl_Dex,
  max.e = ru_Dex,
  mean.c = m_Plac,
  sd.c = sd_Plac,
  median.c = med_Plac,
  q1.c = iqrl_Plac,
  q3.c = iqru_Plac,
  min.c = rl_Plac,
  max.c = ru_Plac,
  data = los_dex_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  subgroup = country,
  studlab = study
)

png("assets/kq6_los_dex.png", width = 12, height = 12.5, units = "in", res = 300)
forest(los_dex_meta,
  weight.study = "random",
  common =  FALSE,
  label.e = "Dex     ",
  label.c = "Plac   ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  # digits.pval.Q = 2,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  print.subgroup.name = FALSE,
  just.addcols.right = "left",
  print.pval.Q = FALSE,
  xlim = c(-6, 6),
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("MD ", "(95% CI)  ", "Procedure"),
  xlab = "Favors: Dex                                      Plac           ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4
)
dev.off()

trim_image("kq6_los_dex.png")

```
![](assets/kq6_los_dex.png){fig.align="left" width="70%"}

<foot_mg> MD: mean difference; Dex: Dexmedetomidine.<br/> When the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, and/or range. </foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()`  Dexmedetomidine compared with placebo or no intervention small study effects — funnel plot (length of stay).   </caption_mg>

```{r los_dex_meta_funnel}
#| echo: false
#| include: false

png("assets/kq6_los_dex_meta_funnel.png", width = 8.5, height = 5.5, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
funnel(los_dex_meta, pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, cex.studlab = 0.6, ff.smlab = "italic")
legend(-9.9, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
dev.off()

trim_image("kq6_los_dex_meta_funnel.png")
```
![](assets/kq6_los_dex_meta_funnel.png){fig.align="left" width="68%"}

:::

#### Melatonin/Ramelteon

<caption_mg> `r figure_ref()` Mean difference in lengths of stay (melatonin or ramelteon versus placebo; randomized clinical trials). </caption_mg>

```{r los_mel_ram_meta}
#| echo: false
#| include: false

los_mel_ram_meta <- metacont(
  n.e = arm_n_MelRam, 
  n.c = arm_n_Plac,
  common =  TRUE,
  mean.e = m_MelRam,
  sd.e = sd_MelRam,
  median.e = med_MelRam,
  q1.e = iqrl_MelRam,
  q3.e = iqru_MelRam,
  min.e = rl_MelRam,
  max.e = ru_MelRam,
  mean.c = m_Plac,
  sd.c = sd_Plac,
  median.c = med_Plac,
  q1.c = iqrl_Plac,
  q3.c = iqru_Plac,
  min.c = rl_Plac,
  max.c = ru_Plac,
  data = los_mel_ram_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  studlab = study
)

png("assets/kq6_los_mel_ram_meta.png", width = 10.5, height = 5.5, units = "in", res = 300)
forest(los_mel_ram_meta,
  weight.study = "random",
  common =  FALSE,
  label.e = "Mel/Ram",
  label.c = "Plac   ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "left",
  print.pval.Q = FALSE,
  xlim = c(-5, 5),
  at = c(-5, -2.5, 0, 2.5, 5),
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("MD ", "(95% CI)  ", "Procedure"),
  xlab = "Favors: Dex                                      Plac           ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4
)
dev.off()

trim_image("kq6_los_mel_ram_meta.png")
```
![](assets/kq6_los_mel_ram_meta.png){fig.align="left" width="68%"}

<foot_mg> MD: mean difference; Mel: melatonin; Ram: ramelteon.<br/> When the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, and/or range. </foot_mg>

## **Mortality**

```{r mortality_data}

mortality_dat <- dichot_dat |>
  filter(if_any(starts_with("mort"), ~ !is.na(.x))) |> 
  # filter(arm_n != mort_update_arm_n) |> 
  # select(refid, arm_n, mort_update_arm_n)
  mutate(
    # arm_n use mort_update_arm_n if different
    arm_n = ifelse(!is.na(mort_update_arm_n), mort_update_arm_n, arm_n)
  ) |> 
  select(refid, refid_c, arm_id, year, study, study_l, design_f_lab, arm_n, matches("_n|per") & starts_with("mort"), -mort_update_arm_n) |> 
  pivot_longer(
    cols = starts_with("mort"),
    names_to = "estimand",
    values_to = "estimate",
    values_drop_na = TRUE
  ) |>
  mutate(
    mort_period = str_remove(estimand, "_.*"),
    estimand = str_replace(estimand, ".*_(.*)$", "\\1")
  ) |>
  pivot_wider(
    names_from = estimand,
    values_from = estimate
  ) |>
  mutate(
    mort_period = case_when(
      str_detect(mort_period, "hosp") ~ "Hospital",
      str_detect(mort_period, "mort30") ~ "30-day",
      str_detect(mort_period, "mort90") ~ "90-day",
      str_detect(mort_period, "mort1") ~ "1-year"
    ), 
    per = per/100
  ) |>
  rename(mort_n = n, mort_per_rep = per) |>
  arrange(refid_c, arm_id) |>
  mutate(
    ref_arm_n = arm_n,
    ref_mort_n = mort_n
  ) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() > 1, NA, ref_mort_n)
  ) |>
  fill(ref_arm_n, ref_mort_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() == 1, NA, ref_mort_n)
  ) |>
  ungroup() |> 
  left_join(study_char_dat |> select(refid, surgs_single_f), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(asa_combine |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |> 
  mutate(mort_percent = mort_n/arm_n,
         mort_period = factor(mort_period, levels = c("Hospital", "30-day", "90-day", "1-year"))) |>
  select(refid, refid_c, arm_id, year, study, study_l, arm_n, drug_recode_abbr, asa_ps_incl, age_table, design_f_lab, mort_n, mort_percent, ref_mort_n, ref_arm_n, mort_period, mort_per_rep, surgs_single_f)

dex_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Dex")
ket_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Ket")
mel_ram_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Mel|Ram")

# skim(mortality_dat)
```

### Dexmedetomidine

<caption_mg> `r table_ref()` Reported in-hospital, 30-day, 90-day, and 1-year mortality in dexmedetomidine randomized clinical trials by comparator and surgical category.</caption_mg>

```{r mortality_dex_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  filter(refid %in% dex_mort_refid) |> 
  group_by(mort_period, study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(mort_percent * 100, "#A93226"),
      str_detect(drug_recode_abbr, "Ulin|MS|Prop") ~ bar_prop(mort_percent * 100, "#104E8B"),
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "—"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  rename(drug_recode = drug_recode_abbr) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  arrange(year, refid_c, arm_id) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day")) |> 
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode = "Drug",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_recode, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, drug_recode, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  # tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Ulin|MS|Prop"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Dex"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    drug_recode ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Dex: Dexmedetomidine; Ulin: Ulinastatin; MS: morphine sulfate; Plac; placebo.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table))) |> 
  tab_footnote("Different lengths of follow-up from the same trial.", locations = cells_body(columns = study_l, rows = study %in% c("Su 2016", "Zhang 2019b"))) 

```

```{r mortality_dex_hosp_30d_meta}
#| eval: true
mortality_dex_dat <- mortality_dat |>
  filter(refid %in% dex_mort_refid, mort_period %in% c("Hospital", "30-day")) |>
  rename(arm = drug_recode_abbr) |>
  filter(!str_detect(arm, "Ulin")) |>
  # exclude Qu 2023 hospital; retain 30-day
  filter(!(study == "Qu 2023" & mort_period == "Hospital")) |> 
  # to include hospital and 30-day if reported
  # group_by(study) |>
  # mutate(
  #   study = case_when(
  #     n() == 4 & mort_period == "Hospital" ~ paste(study, "Hosp"),
  #     n() == 4 & mort_period == "30-day" ~ paste(study, "30-d"),
  #     .default = study
  #   )
  # ) |>
  # ungroup() |>
  select(refid, study, arm, mort_n, arm_n, mort_period)

trts_mort_dex <- levels(fct_drop(mortality_dex_dat$arm))

pairwise_mort_dex_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_dex_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

mortality_mel_ram_dat <- mortality_dat |>
  filter(refid %in% mel_ram_mort_refid, mort_period %in% c("Hospital", "30-day"), str_detect(design_f_lab, "Rand")) |>
  rename(arm = drug_recode_abbr) |>
  # group_by(study) |>
  # mutate(
  #   study = case_when(
  #     n() == 4 & mort_period == "Hospital" ~ paste(study, "Hosp"),
  #     n() == 4 & mort_period == "30-day" ~ paste(study, "30-d"),
  #     .default = study
  #   )
  # ) |>
  # ungroup() |>
  mutate(arm = fct_collapse(arm, "Mel/Ram" = c("Mel", "Ram"), "Plac/None" = c("Plac", "None"))) |> 
  select(refid, study, arm, mort_n, arm_n, mort_period)

trts_mort_mel_ram <- levels(fct_drop(mortality_mel_ram_dat$arm))

pairwise_mort_mel_ram_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_mel_ram_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

## nma ------------------------------------------------ (2023-04-11 16:36) @----
# dex_plac_refid <- pairwise_dat |> 
#   filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex")) |> 
#   pull(refid)
# 
# mort_dex_nma <- netmeta(
#   pairwise_mort_dex_dat,
#   random = FALSE,
#   prediction = FALSE,
#   seq = trts_mort_dex,
#   sm = "RR",
#   reference.group = "Plac"
# )
# 
# forest(mort_dex_nma, pscale = 100)
# netsplit(mort_dex_nma, order = trts_mort_dex) %>%
#   forest(.,
#     show = "all",
#     xlab = "Risk Difference",
#     xlim = c(-4, 4),
#     pscale = 100,
#     # leftcols = c("studlab", "k"),
#     rightlabs = c("RD", "(95% CI)")
#   )
```

### Ketamine

No studies

<br/>

### Melatonin/Ramelteon

<caption_mg> `r table_ref()` Reported in-hospital, 30-day, 90-day, and 1-year mortality in melatonin and ramelteon studies by comparator and surgical category.</caption_mg>

```{r mortality_mel_ram_gt}

mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  filter(refid %in% mel_ram_mort_refid) |> 
  group_by(study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(mort_percent * 100, "#A93226"),
      str_detect(drug_recode_abbr, "Ulin|MS|Prop") ~ bar_prop(mort_percent * 100, "#104E8B"),
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "—"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  rename(drug_recode = drug_recode_abbr) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day")) |> 
  # row_group_order(groups = c("Hospital", "30 Day", "90 Day", "1 Year")) |> 
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode = "Drug",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_recode, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, drug_recode, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Ulin|MS|Prop"))) |>
  # tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Dex"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    drug_recode ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Ram: ramelteon; Mel: melatonin; Plac; placebo.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table))) |> 
  tab_footnote("Randomized clinical trial.", locations = cells_body(columns = study_l, rows = !str_detect(study_l, "Hokuto") & !is.na(study_l))) |> 
  tab_footnote("Before-after design.", locations = cells_body(columns = study_l, rows = study %in% c("Hokuto 2020")))
```

### *Pooled*

#### Dexmedetomidine

```{r dex_mort_meta_dat}
#| echo: false
#| include: false

dex_mort_meta_dat <- pairwise_mort_dex_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(treat1 == "Plac" & treat2 == "Dex") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  mutate(
    study = if_else(country == "China", paste0(study, "*"), study),
    country = if_else(country == "China", "China", "Other")) 

# total_meta(dex_mort_meta_dat)
# refid_meta_fun(dex_mort_meta_dat)

dex_plac_mort_meta <- metabin(event2, n2, event1, n1,
  data = dex_mort_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = FALSE,
  subgroup = mort_period
)

# small study effects; here to have result of Harbord test
# temp_meta <- dex_plac_mort_meta
# temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
# temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# forest(update(dex_plac_mort_meta, sm = "RR", prediction = TRUE, allstudies = FALSE), allstudies = FALSE)
# summary(dex_plac_meta)
```

<caption_mg> `r figure_ref()` Risk ratio for hospital and 30-day mortality -- dexmedetomidine compared with placebo or no intervention. </caption_mg>

```{r dex_mort_rr_meta}
#| echo: false
#| include: false

png("assets/kq6_dex_plac_mort_rr_meta.png", width = 10.5, height = 7.5, units = "in", res = 300)
forest(dex_plac_mort_meta,
  allstudies = TRUE,
  label.e = "Dex     ",
  label.c = "Plac     ",
  rightcols = c("effect", "ci"),
  rightlabs = c("RR", "(95% CI)"),
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  test.subgroup.random = FALSE,
  test.subgroup.common = FALSE,
  print.pval.Q = FALSE,
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4,
)
dev.off()

trim_image("kq6_dex_plac_mort_rr_meta.png")

```
![](assets/kq6_dex_plac_mort_rr_meta.png){fig.align="left" width="60%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo.<br/><foot_mg> \*Trials conducted in China with RR 0.69 (95% CI, 0.41–1.15); others RR 0.49 (95% CI, 0.14–1.75). </foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Risk difference for hospital and 30-day mortality -- dexmedetomidine compared with placebo or no intervention. </caption_mg>

```{r dex_mort_meta}
#| echo: false
#| include: false

dex_plac_mort_rd_meta <- update(dex_plac_mort_meta, sm = "RD", prediction = TRUE, allstudies = TRUE)

png("assets/kq6_dex_plac_mort_rd_meta.png", width = 10.5, height = 7.5, units = "in", res = 300)
forest(dex_plac_mort_rd_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Dex     ",
  label.c = "Plac     ",
  rightcols = c("effect", "ci"),
  rightlabs = c("RD", "(95% CI)"),
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 1, 
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  test.subgroup.random = FALSE,
  test.subgroup.common = FALSE,
  print.pval.Q = FALSE,
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4,
)
dev.off()

trim_image("kq6_dex_plac_mort_rd_meta.png")

```
![](assets/kq6_dex_plac_mort_rd_meta.png){fig.align="left" width="60%"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo.<br/><foot_mg> \*Trials conducted in China. </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Mortality for dexmedetomidine compared with placebo or no intervention small study effects — funnel plot. </caption_mg>

```{r dex_plac_meta_funnel_limit_mort}
#| echo: false
#| include: false

# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
dex_plac_mort_meta <- update(dex_plac_mort_meta, sm = "OR", subgroup = NULL)
harbord <- metabias(dex_plac_mort_meta, method.bias = "Harbord")$pval
# temp_limit_meta <- limitmeta(dex_plac_mort_meta)
# limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

png("assets/kq6_dex_plac_meta_funnel_limit_mort.png", width = 10.5, height = 7.5, units = "in", res = 300)
par(bty = "n", xaxt = "s", yaxt = "s", mar = c(4, 4, 2, 1))
funnel(dex_plac_mort_meta,
  ylim = c(2.0, 0.0), xlim = c(0.05, 10), 
  pch = 20, 
  contour = c(0.9, 0.95, 0.99), 
  col.contour = limit_colors, 
  studlab = TRUE, 
  pos.studlab = 4,
  fs.smlab = 6, 
  ff.smlab = "italic"
)
legend(0.06, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
dev.off()

trim_image("kq6_dex_plac_meta_funnel_limit_mort.png")

```
![](assets/kq6_dex_plac_meta_funnel_limit_mort.png){fig.align="left" width="65%"}
:::

#### Melatonin/Ramelteon

<caption_mg> `r figure_ref()` Risk difference for hospital and 30-day mortality -- — melatonin or ramelteon compared with placebo or no intervention. </caption_mg>

```{r mel_ram_mort_meta}
#| echo: false
#| include: false

mel_ram_mort_meta_dat <- pairwise_mort_mel_ram_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(treat1 == "Plac/None" & treat2 == "Mel/Ram") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid)

# total_meta(mel_ram_mort_meta_dat)
# refid_meta_fun(mel_ram_mort_meta_dat)

mel_ram_plac_mort_meta <- metabin(event2, n2, event1, n1,
  data = mel_ram_mort_meta_dat,
  studlab = study,
  sm = "RD",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  subgroup = mort_period
)

# summary(mel_ram_plac_meta)

png("assets/kq6_mel_ram_plac_mort_meta.png", width = 10.5, height = 7.5, units = "in", res = 300)
forest(mel_ram_plac_mort_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Mel/Ram     ",
  label.c = "Plac/None ",
  rightcols = c("effect", "ci"),
  rightlabs = c("RD", "(95% CI)"),
  just.addcols.right = "left",
  digits.TE = 1,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 100,
  digits = 2, 
  subgroup = TRUE,
  test.subgroup.random = FALSE,
  test.subgroup.common = FALSE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  xlab = "Favors: Mel/Ram              Placebo/None",
  addrows.below.overall = 4,
  
)
dev.off()
trim_image("kq6_mel_ram_plac_mort_meta.png")

```
![](assets/kq6_mel_ram_plac_mort_meta.png){fig.align="left" width="62%"}

<foot_mg> Mel: melatonin; Ram: ramelteon; Plac: placebo. </foot_mg> <a id="figure-4"></a>

## **Risk of Bias**

### Randomized

<caption_mg> `r figure_ref()` Summary risk of bias assessment for randomized clinical trials. </caption_mg>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_dat |>
  filter(!is.na(Study) & refid %in% kq6_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind", weighted = FALSE)
```

<caption_mg> `r figure_ref()` Risk of bias assessments for randomized clinical trials. </caption_mg>

```{r rob_overall_study, out.width = "55%", fig.height = 18}
#| warning: false
rob_traffic_light(rob_temp_dat, psize = 4, tool = "ROB2", colour = "colourblind")
```

### Nonrandomized

<caption_mg> `r figure_ref()` Summary risk of bias assessment for nonrandomized studies. </caption_mg>

```{r nrsi_summary_overall, fig.height = 3, out.width = "60%"}
robinsi_temp_dat <- robinsi_dat |>
  filter(!is.na(Study) & refid %in% kq6_refid) |> 
  filter(!Study %in% c("Memtsoudis 2019g", "Weinstein 2018d", "Ke 2022c")) |> 
  mutate(
    Study = str_replace(Study, "(\\d{4})[a-g]", "\\1"),
  ) |> 
  select(-refid)

rob_summary(robinsi_temp_dat, tool = "ROBINS-I", colour = "colourblind", weighted = FALSE)
```

<caption_mg> `r figure_ref()` Risk of bias assessments for nonrandomized studies. </caption_mg>

```{r nrsi_overall_study, out.width = "55%", fig.height = 6.25}
#| warning: false
rob_traffic_light(robinsi_temp_dat, psize = 4, tool = "ROBINS-I", colour = "colourblind")
```

## **References** {#references}
