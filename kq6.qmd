---
title: "Delirium Prophylaxis"
editor: source
toc-title: "**Delirium Prophylaxis**"
toc-location: "left"
toc-depth: 4
toc_float: 
  collapsed: true
tbl-cap-location: "top"
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq6.bib"
csl: jama.csl
link-citations: false
nocite: '@*'
---

## Key Question

Among older patients undergoing surgery and anesthesia, do dexmedetomidine, ketamine, ramelteon, or melatonin administered during the perioperative period decrease the risk of postoperative delirium or other adverse cognitive outcomes?

<!-- ::: {.callout-note collapse="true" appearance="default" icon="true"} -->
<!-- ## DRAFT results last updated `r lubridate::now()` -->

<!-- 2023-04-29 added assessment < or ≥3 days subgrouping to delayed neurocognitive recovery; country to LOS; edited colors throughout -->

<!-- 2023-04-20 delayed neurocognitive recovery and neurocognitive disorders pairwise and network meta-analyses added -->

<!-- 2023-04-19 delayed neurocognitive recovery and neurocognitive disorders added (Evered et al. 2018 Anesthesiology nomenclature) -->

<!-- 2023-04-13 mortality and length of stay added -->

<!-- 2023-04-11 delirium incidence completed with updated GRADE and risk of bias assessment conflicts adjudicated -->

<!-- 2023-04-09 added studies from search update 2023-03-17; sensitivity analysis by risk of bias appraisals for delirium -->

<!-- 2023-03-21 added sensitivity analysis according to delirium incidence proportion approximated by maximum daily incidence where incidence proportion was not reported -->

<!-- 2023-03-19 updated dexmedetomidine and melatonin/ramelteon results with 3 additional studies reporting daily, but not overall, incidence proportion -->
<!-- ::: -->

```{r read_data}
#| include: false
# CODE: * read data
# FIXME: ? delete 13734 
# FIXME: revise with purrr
source("code/load_data.R")
settings.meta(CIbracket = "(")
# load("data/geri_data_2023-03-13.Rdata")
kq6_refid <- kq6_refid[!kq6_refid %in% c(13734, 5269, 13630)] # Fan 2017b rhythim, Gao 2021 duplicate, Xuan 2016 "Eligible patients were more than 60 years old with joint replacement surgery in ICU."
study_char_dat <- data_kq(study_char_dat, kq6_refid)
study_arm_dat <- data_kq(study_arm_dat, kq6_refid) 
contin_dat <- data_kq(contin_dat, kq6_refid) 
likert_dat <- data_kq(likert_dat, kq6_refid) 
# VARIABLE: delirium_inc_prop <lgl> [dichot_dat] reported incidence proportion
# VARIABLE: neurocog_inc_prop <lgl> [dichot_dat] reported incidence proportion
# VARIABLE: delirium_day_max <num> [dichot_dat] max of daily 
# VARIABLE: neurocog_day_max <num> [dichot_dat] max of daily 

dichot_dat <- data_kq(dichot_dat, kq6_refid) |>
  mutate(
    delirium_inc_prop = !is.na(delitotal_n), 
    delirium_day_max = pmax(delirium_n1, delirium_n2, delirium_n3, delilast_n, na.rm = TRUE),
    delitotal_n = ifelse(is.na(delitotal_n), delirium_day_max, delitotal_n),
  ) |> 
  relocate(delirium_day_max, .after = delitotal_n) 
  
# rob_dat <- data_kq(rob_dat, kq6_refid) 
```

```{r delirium_refids_check}
#| eval = FALSE
# any of delirium_dichot_refid, delirium_contin_refid, delirium_likert_refid 
kq6_refid %in% delirium_refid
kq6_refid %in% cogfunc_refid
kq6_refid[!kq6_refid %in% c(delirium_refid, cogfunc_refid)]
```

## Outcome Importance

<font size = 4> `r table_ref()`</font> Rankings for the 5 most important outcomes (11 respondents).

```{r outcome_priority}
#| include: true
#| eval: true
# CODE: outcome priority rankings
# note also in appendix
outcome_dat <- rankings("KQ6")
outcome_tab(outcome_dat, 11)
```

## Outcomes Reported

<font size = 4> `r table_ref()` Dichotomous or count outcomes. </font>

```{r dichot_outcome_freq}
# CODE: reporting frequency tabulation
dichot_freq_fun(dichot_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

<font size = 4> `r table_ref()` Continuous outcomes. </font>

```{r cont_outcome_freq}
contin_freq_fun(contin_dat)
```

<font size = 4> `r table_ref()` Likert or ordinal outcomes. </font>

```{r likert_outcome_freq}
likert_freq_fun(likert_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

## **Included Studies**

<font size = 4> `r table_ref()` Number of studies by design. </font>

```{r studies_design}
# CODE: study design table — design and number; no duplicate counting
study_char_dat |>
  filter(refid %in% kq6_refid) |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(
    style = list(
      cell_fill(color = "#E4F3FE"),
      cell_text(weight = "bold"),
      cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))
    ),
    locations = cells_body(
      rows = design_f_lab == "Total"
    )
  ) |> 
  tab_style(
    style = list(
      cell_text(align = "left")),
      locations = cells_body(
        columns = design_f_lab
      )
    ) |> 
  tab_footnote("Studies with multiple publications counted only once (applied to 1 trial with 2 publications).")
```

### Design, centers, country, and surgery

<font size = 4> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </font>


```{r drugs_by_arm}
#| label: design_contry_surg
#| tbl-cap: Study design, enrollment, centers, country, and surgery (see [References](#references) for citations).
#| message: false
# CODE: * drugs & recode drugs/comparators so that usable; "other" category recoded to comparator
# DATA: drugs_dat <- study_arm_dat include drug arm data; adds kq5/6 arms
## drugs; from kq6, add kq5 arm drugs ----------------- (2023-01-16 13:46) @----
# drugs for kq5 studies; needed to fill in "missings" for kq6 arms coded as kq5 arms
kq5_drug_by_arm <- read_csv("data/kq56_drug_by_arm.csv") |>
  rename(drug = drug_f) |> # arm drug
  mutate(drug = as.character(drug)) |> 
  select(refid, arm_id, drug, control_desc)

drugs_dat <- study_arm_dat |>
  # filter(refid %in% c(2598, 13171)) |> 
  select(refid, design_f_lab, study, study_l, study_l_w_linked, study_id, arm_id, arm_n, arm_kq6_proph_meds, kq6_control_desc:kq6_notes, multiple_kq) |>
  rename_with(~ str_replace(., "kq6_", ""), everything()) |>
  rename_with(~ str_replace(., "dex_", "dexmed_"), everything()) |>
  mutate(
    dexmed = ifelse(refid == 13171, NA, dexmed),
    drug = case_when(
      !is.na(dexmed) ~ dexmed,
      !is.na(ketamine) ~ ketamine,
      !is.na(melatonin) ~ melatonin,
      !is.na(ramelteon) ~ ramelteon,
      !is.na(ulinastatin) ~ ulinastatin, # all missing
      !is.na(none) ~ none
    ),
    drug = str_replace(drug, "kq6_", ""),
    drug = firstup(drug)
  ) |>
  relocate(drug, .after = arm_n) |>
  # update drug and control description for "kq5" arms
  left_join(kq5_drug_by_arm, by = c("refid", "arm_id")) |>
  mutate(
    drug = coalesce(drug.x, drug.y),
    control_desc = coalesce(control_desc.x, control_desc.y),
    control_desc = firstup(control_desc),
    arm_proph_meds = ifelse(is.na(arm_proph_meds), "kq5_arm", arm_proph_meds),
  ) |>
  select(-matches("\\.x|\\.y")) |>
  mutate(
  # FIXME: temporary fix for 13171
    drug = ifelse(refid == 13171 & arm_id == 1, "None", drug),
    drug_f = fct(drug,
      levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin", "Midazolam", "Oxazepam", "Haloperidol", "None", "Placebo", "Other")
    ),
    drug_f = fct_collapse(drug_f, "Control" = c("None", "Placebo", "Other"))
  ) |>
  group_by(refid) |>
  mutate(
    drug_study = case_when( # study drug
      if_any(drug_f, ~ . == "Dexmedetomidine") ~ "Dexmedetomidine",
      if_any(drug_f, ~ . == "Ketamine") ~ "Ketamine",
      if_any(drug_f, ~ . == "Melatonin") ~ "Melatonin",
      if_any(drug_f, ~ . == "Ramelteon") ~ "Ramelteon",
      if_any(drug_f, ~ . == "Ulinastatin") ~ "Ulinastatin"
      # TRUE ~ "MISSING" # NA_character_ for verification
    ),
    drug_study = fct(drug_study, levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin")),
    drug_recode = case_when(
      str_detect(other_spec, "Midazolam and propofol") ~ "Midazolam/propofol",
      str_detect(other_spec, "Midazolam and sevoflurane") ~ "Midazolam/sevoflurane",
      str_detect(other_spec, "[Mm]idazolam") ~ "Midazolam",
      str_detect(other_spec, "[Ss]ufentanil") ~ "Sufentanil",
      # str_detect(other_spec, "[Rr]hythim") ~ "Rhythim",
      str_detect(other_spec, "[Pp]ropofol") ~ "Propofol",
      str_detect(other_spec, "[Mm]orphine") ~ "Morphine",
      str_detect(other_spec, "[Pp]regabalin") ~ "Pregabalin",
      .default = drug
    ),
    drug_recode = ifelse(refid == 2748 & arm_id == 4, "Dexmedetomidine/Pregabalin", drug_recode),
    drug_recode = ifelse(refid == 13406 & arm_id == 3, "Dexmedetomidine/Ulinastatin", drug_recode),
    drug_recode = ifelse(refid == 13393 & arm_id == 1, "Dexmedetomidine/Ulinastatin", drug_recode),
    # FIXME: check Mahrose
    drug_recode = ifelse(refid == 13171 & arm_id == 2, "Melatonin/Dexmedetomidine", drug_recode),
    drug_recode = ifelse(refid == 13171 & arm_id == 1, "Dexmedetomidine", drug_recode),
    # HERE
    drug_recode = fct(drug_recode,
      levels = c("Dexmedetomidine", "Dexmedetomidine/Pregabalin", "Dexmedetomidine/Ulinastatin", "Ketamine", "Melatonin", "Melatonin/Dexmedetomidine","Ramelteon", "Ulinastatin", "Haloperidol", "Midazolam", "Oxazepam", "Midazolam/propofol", "Midazolam/sevoflurane", "Morphine", "Pregabalin", "Propofol", "Sufentanil", "Placebo", "None")
    ),
    drug_recode_abbr = fct_recode(drug_recode, Dex = "Dexmedetomidine", "Dex/Preg" = "Dexmedetomidine/Pregabalin", "Dex/Ulin" = "Dexmedetomidine/Ulinastatin", Ket = "Ketamine", Mel = "Melatonin", "Mel/Dex" = "Melatonin/Dexmedetomidine", Ram = "Ramelteon", Ulin = "Ulinastatin", Hal = "Haloperidol", Mid = "Midazolam", Oxaz = "Oxazepam", "Mid/Prop" = "Midazolam/propofol", "Mid/Sevo" = "Midazolam/sevoflurane", MS = "Morphine", Preg = "Pregabalin", Prop = "Propofol", Sufen = "Sufentanil", Plac = "Placebo"),
  ) |>
  ungroup() |>
  relocate(c(drug, drug_f, drug_recode, drug_recode_abbr, drug_study), .after = arm_id) |>
  relocate(c(other_spec, interv_desc, control_desc), .after = last_col()) |>
  arrange(refid, drug_study) |>
# FIXME: 2598  
  fill(drug_study) |>
  arrange(refid, arm_id)
```

```{r drug_tables}
#| eval = FALSE
# CODE: eval = FALSE; drug and drug_recode can save to desktop; working only 
drugs_dat |> tabyl(drug)
drugs_dat |> filter(drug == "Ulinastatin")
drugs_dat |> filter(is.na(drug))
drugs_dat |> tabyl(drug_recode)
drugs_dat |> tabyl(drug_recode_abbr)

drugs_dat |>
    labelled::set_variable_labels(
    drug_recode = "Drug(s)",
  ) |> 
  select(drug_recode) |>
  tbl_summary(
    # label = list(drug_recode ~ "Drug(s)")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |>
  gt_theme_mg()
  # as.data.frame() |> 
  # select(5:7) |> 
  # writexl::write_xlsx("/Users/mgrant/Desktop/temp.xlsx")

temp <- drugs_dat |> 
  select(refid, study, contains("drug"), other_spec, contains("_desc"))

writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")
writexl::write_xlsx(temp, "/Users/mgrant/Desktop/arm_comparator.xlsx")
```

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |> 
  select(refid, starts_with("design"), study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi, starts_with("surg")) |>
  # select(refid, study, starts_with("surg")) |> # compile surgeries
  rename_with(~ gsub("surg_", "", .x, fixed = TRUE)) |>
  mutate(across(various:other, ~ gsub("surg_", "", .x, fixed = TRUE)),
    ortho_any = ifelse(if_any(contains("ortho"), ~ !is.na(.x)), "ortho", NA),
    opth = ifelse(str_detect(other_desc, "[Cc]ataract") | !is.na(opth), "optho", opth),
    gi = ifelse(!is.na(colorectal) | !is.na(gi_other) | !is.na(abdominal), "GI/Abdominal", NA),
    across(c(various, cardiac, gyn, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other), ~ firstup(.x)),
  ) |>
  unite("surgs", various, cardiac, gyn, gi, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other, sep = "|", remove = FALSE, na.rm = TRUE) |>
  select(-c(various, abdominal, cardiac, colorectal, gyn, gi, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other, design_other, gi_other, starts_with("ortho"), list, other_desc, starts_with("hip"))) |>
  mutate(
    surgs = ifelse(str_count(surgs, "\\|") > 3, "Various", surgs)
  ) |>
  left_join(drugs_dat |> group_by(refid) |> slice(1) |> ungroup() |> select(refid, drug_study), by = "refid") |>
  # create new factor for table as gt not arranging properly
  mutate(
    drug_design = fct(paste0(drug_study, " - ", design_f_lab),
      levels = c(
        "Dexmedetomidine - Randomized Clinical Trial",
        "Dexmedetomidine - Nonrandomized Trial",
        "Ketamine - Randomized Clinical Trial",
        "Ketamine - Prospective Cohort",
        "Melatonin - Randomized Clinical Trial",
        "Ramelteon - Randomized Clinical Trial",
        "Ramelteon - Before-After/Time Series",
        "Ulinastatin - Randomized Clinical Trial"
      )
    )
  ) |>
  arrange(drug_design, surgs, study_l) |>
  select(refid, study_l, centers, n_enroll, country, drug_design, surgs, non_vh_hdi)
# 
# included_dat |>
#   mutate(drug_design = paste(drug_study, design_f_lab)) |>
#   filter(str_detect(drug_design, "NA"))
#   

included_dat |>
  group_by(drug_design) |>
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_hide(non_vh_hdi) |>
    fmt_markdown(columns = c(study_l)) |> 
  cols_width(
    refid ~ px(60),
    study_l ~ px(200),
    centers ~ px(60),
    n_enroll ~ px(60),
    country ~ px(100),
    surgs ~ px(220)
  ) |> 
  # opt_horizontal_padding(scale = 2) |>
  gt_theme_mg() |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c("refid"))) |> 
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote(footnote = md("Various indicates more than 4 different types of surgery."), locations = cells_column_labels(columns = surgs)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_column_labels(columns = country)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), 
               locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))) |>
  tab_footnote(footnote = "Studies examining drugs not directly relevant to recommendations but potentially relevant to the evidence space (eg, a connected network) were included.", 
locations = cells_row_groups(groups = )) |> 
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular.")


```

### Country Summary

<font size = 4> `r table_ref()` Summary of studies by country where conducted. </font>

```{r country}
# CODE: table of countries
study_char_dat |>
  mutate(linked_references = ifelse(is.na(linked_references), refid, linked_references)) |> 
  slice(1, .by = linked_references) |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
  gt_theme_mg()

```

## **Interventions & Comparators**

#### Dexmedetomidine

<font size = 4> `r table_ref()` Selected characteristics, comparators, and dosing in dexmedetomidine trials. </font>

```{r dex_compare}
#| eval: true
# CODE: dexmedetomidine studies
# dexmedetomidine studies
dex_refid <- drugs_dat |> 
  filter(drug == "Dexmedetomidine") |> 
  pull(refid)

dex_by_arm <- drugs_dat |>
  filter(refid %in% dex_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(refid:arm_proph_meds, matches("^proph_|dexmed"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("dexmed_", "", .x, fixed = TRUE)) |>
  mutate(
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "▂")),
    maintain_range = ifelse(!is.na(maintain_low + maintain_up), paste0(maintain, " (", maintain_low, "–", maintain_up, ")"), maintain),
    maintain_range = str_replace(maintain_range, "NA ", ""),
    loading = ifelse(loading == "0", "", loading),
    loading = ifelse(loading == "1", "1.0", loading),
    # loading = ifelse(loading == "1000", "1.0", loading),
    loading = str_replace(loading, "-1$", "-1.0")
  ) |>
  arrange(year, refid, desc(drug)) |>
  rename(post = postop, ind = induct, intr = intra) |> 
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  mutate(dex_groups = paste0(surgs_single_f, " - ", design_f_lab))

dex_group_levels <- dex_by_arm |> 
  group_by(refid) |> 
  slice(1) |> 
  ungroup() |> 
  tabyl(dex_groups) |> 
  mutate(design = str_extract(dex_groups, "-.*$")) |> 
  arrange(desc(design), desc(n)) |> 
  pull(dex_groups)

dex_by_arm <- dex_by_arm |> 
  mutate(  
  dex_groups = factor(dex_groups, levels = dex_group_levels)) |> 
  select(refid, study, year, study_l, arm_n, drug_recode_abbr, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, loading, maintain_range, postdose, pre, ind, intr, post, design_f_lab, dex_groups, surgs_single_f)

rm(dex_group_levels)
```

```{r dex_table}
#| echo = FALSE
# CODE: dexmedetomidine table 2023-02-21 draft; VERIFY NO
dex_by_arm |>
  arrange(dex_groups, year, study) |>
  group_by(study_l) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "\U2713", .x)),
    volatile_tab = ifelse(refid == 328 & row_number() %in% c(2, 3), "\U2713", volatile_tab),
    tiva_tab = ifelse(refid == 328 & row_number() == 4, "\U2713", tiva_tab)
  ) |>
  ungroup() |>
  group_by(dex_groups) |>
  gt(id = "one") |> 
  cols_hide(c(year, study, refid, design_f_lab, surgs_single_f)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = md("  PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    loading = "Load",
    maintain_range = md("Maint/hr"),
    postdose = md("Postop"),
    pre = "Pre",
    ind = "Ind",
    intr = "Intr",
    post = "Post"
    # drug_f = md("Comparator <br/> Detail")
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, ind, intr, post)) |>
  tab_spanner(label = "Dexmedetomidine mcg/kg", columns = c(loading, maintain_range, postdose), level = 1) |>
  # tab_spanner(label = "Maintenance/hr", columns = c(loading, maintain_range, postdose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:sedation_only_tab)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(age_table, pre_mmse, loading:postdose))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(loading, maintain_range, postdose))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_recode_abbr, study_l, pre:post))) |>
  tab_style(style = cell_text(font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(volatile_tab, regional_tab, sedation_only_tab,pre:post))) |>
  tab_style(style = cell_text(size = px(8)), locations = cells_column_labels(columns = c(tiva_tab))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode_abbr:post), rows = str_detect(drug_recode_abbr, "Dex"))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "—") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(30),
    tiva_tab ~ px(30),
    regional_tab ~ px(30),
    sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(90),
    loading ~ px(60),
    maintain_range ~ px(90),
    postdose ~ px(60),
    pre ~ px(30),
    ind ~ px(30),
    intr ~ px(30),
    post ~ px(35)
  ) |>
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Oralmax: oral and maxillofacial; Ophtho; ophthalmologic; Dex: Dexmedetomidine; Ulin: Ulinastatin; Hal: Haloperidol; Mid: Midazolam; Mid/Prop: Midazolam/propofol; Mid/Seve: Midazolam/sevoflurane; Preg: Pregabalin; Prop: Propofol; Plac; placebo; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Pre: preoperative; Ind: induction; Intr: intraoperative; Post(op): postoperative; —: unspecified.") |>
  tab_footnote("Maintenance range if reported in parentheses.", locations = cells_column_labels(columns = maintain_range)) |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote(md("Given as a single dose."), locations = cells_body(columns = maintain_range, rows = maintain_range %in% c("100", "200", "400")))
           
# gtsave("/Users/mgrant/Desktop/dex_arm_dose_table6.docx")
# |>  tab_info()
```

#### Ketamine

<font size = 4> `r table_ref()` Selected characteristics, comparators, and dosing in ketamine studies. </font>

```{r ket_compare}
#| eval: true
# CODE: ketamine studies
ket_refid <- drugs_dat |> 
  filter(drug == "Ketamine") |> 
  pull(refid)

# by arm
ket_by_arm <- drugs_dat |>
  filter(refid %in% ket_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(study, refid:arm_proph_meds, matches("^proph_|keta"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("ketamine_", "", .x, fixed = TRUE)) |>
  unite("time_admin", c(pre:unspec), sep = "|", na.rm = TRUE, remove = FALSE) |>
  mutate(
    time_admin = str_remove_all(time_admin, "proph_med_"),
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "\U2582")),
    drug = fct(drug, levels = c("Ketamine", "Haloperidol", "Placebo", "Other", "None")),
  ) |>
  relocate(time_admin, .after = arm_n) |>
  # dosing
  arrange(year, refid, desc(drug)) |>
  rename(post = postop, ind = induct, intr = intra) |> 
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
  mutate(ket_groups = paste0(surgs_single_f, " - ", design_f_lab))

ket_group_levels <- ket_by_arm |> 
  group_by(refid) |> 
  slice(1) |> 
  ungroup() |> 
  tabyl(ket_groups) |> 
  mutate(design = str_extract(ket_groups, "-.*$")) |> 
  arrange(desc(design), desc(n)) |> 
  pull(ket_groups)

ket_by_arm <- ket_by_arm |> 
  mutate(  
  ket_groups = factor(ket_groups, levels = ket_group_levels)) |> 
  select(study, year, refid, study_l, arm_n, drug, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose, dose_iv, pre, ind, intr, post, ket_groups)

rm(ket_group_levels)

# ket_by_arm |> tabyl(ket_groups)
```

```{r ket_table}
# CODE: ketamine table 2023-02-21  draft; VERIFY NO
ket_by_arm |> 
  arrange(ket_groups, year, study) |>
  group_by(refid) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x))) |> 
  ungroup() |>
  group_by(ket_groups) |>
  gt(id = "one") |>
  cols_hide(c(year, study, refid, ket_groups, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug = "Comparator",
    asa_ps_incl = md("  PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("(mg/kg)"),
    dose_iv = md("  (mg/kg)"),
    pre = "Pre",
    ind = "Ind",
    intr = "Intr",
    post = "Post"
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, ind, intr, post)) |>
  tab_spanner(label = "Maintenance", columns = c(dose_iv), level = 1) |>
  tab_spanner(label = "Dose", columns = c(dose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(dose, dose_iv))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug, dose, dose_iv, pre:post))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(pre:post))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug:post), rows = drug == "Ketamine")) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "—") |>
  # tab_row_group(label = "numbered", rows = 1:10) |> 
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    # sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(100),
    dose ~ px(80),
    dose_iv ~ px(100),
    pre ~ px(30),
    ind ~ px(30),
    intr ~ px(30),
    post ~ px(32)
  ) |>
  fmt_number(columns = dose, drop_trailing_zeros = TRUE, ) |>
# TODO: * fix ketamine footnote Bornemann and Tu  
  tab_footnote(footnote = md("S-Ketamine."), locations = cells_body(columns = drug, rows = refid %in% c(13184, 15285) & drug == "Ketamine")) |>
  tab_footnote(footnote = "Time administered not reported.", locations = cells_body(columns = pre, rows = arm_n == 38 & drug == "Ketamine")) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Plac; placebo; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Pre: preoperative; Ind: induction; Intr: intraoperative; Post: postoperative; —: unspecified.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) 

```

#### Melatonin/Ramelteon

```{r melatonin_ramelteon_compare}
#| eval: true
# CODE: melatonin ramelteon studies
mel_ram_refid <- drugs_dat |> 
  filter(drug %in% c("Melatonin", "Ramelteon")) |> 
  pull(refid)

# by arm
mel_ram_by_arm <- drugs_dat |>
  filter(refid %in% mel_ram_refid) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  select(refid:arm_proph_meds, matches("^proph_|mela|ramel"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename(post = postop) |> 
  unite("time_admin", c(pre:unspec), sep = "|", na.rm = TRUE, remove = FALSE) |> 
  mutate(
    time_admin = str_remove_all(time_admin, "proph_med_"),
    time_admin = str_remove_all(time_admin, "proph_med_"),
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "\U2582")),    
    dose = coalesce(melatonin_dose, ramelteon_dose),
    days = coalesce(as.character(melatonin_days), as.character(ramelteon_numberdoses)),
    dose = ifelse(!is.na(dose), paste0(dose, "mg × ", days), dose),
   # to order drugs
   drug = fct(drug, levels = c("Melatonin", "Ramelteon", "Midazolam", "Oxazepam", "Placebo", "Other", "None"))
  ) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
    mutate(mel_ram_groups = paste0(surgs_single_f, " - ", design_f_lab)) |> 
  relocate(time_admin, .after = arm_n)

mel_ram_group_levels <- mel_ram_by_arm |> 
  group_by(refid) |> 
  slice(1) |> 
  ungroup() |> 
  tabyl(mel_ram_groups) |> 
  mutate(design = str_extract(mel_ram_groups, "-.*$")) |> 
  arrange(desc(design), desc(n)) |> 
  pull(mel_ram_groups)

mel_ram_by_arm <- mel_ram_by_arm |>
  mutate(
    mel_ram_groups = factor(mel_ram_groups, levels = mel_ram_group_levels)) |>
  select(study, year, refid, study_l, arm_n, drug, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose, pre, post, mel_ram_groups)

rm(mel_ram_group_levels)
```

<font size = 4> `r table_ref()` Selected characteristics, comparators, and dosing in Melatonin and ramelteon studies. </font>

```{r melatonin_ramelteon_table}
mel_ram_by_arm |>
  arrange(mel_ram_groups, year, study) |>
  group_by(refid) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x))) |> 
  ungroup() |>
  group_by(mel_ram_groups) |>
  gt(id = "one") |>
  # row_group_order(groups = c("Melatonin - Randomized Clinical Trial", "Ramelteon - Randomized Clinical Trial", "Ramelteon - Before-After/Time Series")) |>
  cols_hide(c(study, year, refid, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug = "Comparator",
    asa_ps_incl = md("  PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("Dosing"),
    pre = "Pre",
    post = "Post"
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, post)) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug:post))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug, dose, pre, post))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:post), rows = drug %in% c("Melatonin", "Ramelteon"))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(pre, post))) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "—") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(100),
    dose ~ px(90),
    pre ~ px(30),
    post ~ px(32),
  ) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Pre: preoperative; Post: postoperative.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) 

```

## **Delirium Incidence**

```{r delirium_meta_data}
# CODE: delirium meta data munge; here to produce figure
# VARIABLE: postop_only <lgl> from study arm only post-op administration [postop_only_dat]
# study arm postop only
postop_only_dat <- study_arm_dat |> 
  select(refid, study, proph_med_pre, proph_med_induct, proph_med_intra, proph_med_postop) |> 
  # missing preop, induction, intraop
  filter(if_all(c(proph_med_pre, proph_med_induct, proph_med_intra), ~ is.na(.x))) |> 
  # not missing postop
  filter(!is.na(proph_med_postop)) |> 
  mutate(postop_only = TRUE) |> 
  select(refid, postop_only)

delirium_meta_dat <- dichot_dat |>
  filter(!is.na(delitotal_n)) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(postop_only_dat, by = "refid") |> 
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |> 
  select(refid, refid_c, arm_id, year, study, design_f_lab, country, surg_f, postop_only, arm, delitotal_n, arm_n, delitotal_perc, delirium_inc_prop) |>
  arrange(refid_c, arm_id) |>
  # collapse arms
  # group_by(refid) |>  filter(n() > 2) |>  ungroup() |> # verify collapsed arms; verified 2023-03-09
  mutate(
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    delitotal_n = case_when(
      study == "Lee 2018a" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), delitotal_n),
      study == "Avidan 2017" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Avidan 2017", c(2, 3), delitotal_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), delitotal_n),
      .default = delitotal_n
    ),
    arm_n = case_when(
      study == "Lee 2018a" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), arm_n),
      study == "Avidan 2017" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Avidan 2017", c(2, 3), arm_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), arm_n),
      .default = arm_n
    )
  ) |>
  filter(!(study == "He 2018" & arm_id == 2)) |> 
  filter(!(study %in% c("Lee 2018a", "Avidan 2017") & arm_id == 3)) |>
  filter(!(study %in% c("Zhao 2020") & arm_id %in% c(3, 4))) |>
  filter(!(study %in% c("Lee 2018b") & arm_id %in% c(2, 4))) |> # remove pregabalin, pregabaline/dex arms
  filter(!(study %in% c("Hollinger 2021") & arm_id %in% c(2))) |> # remove haldol arm
  filter(!study == "Mahrose 2021") # compares different doses

## calculated vs reported percentages; 2023-04-08 ----- (2023-04-24 18:21) @----
# calculated vs reported percentages; verified 2023-04-08
# temp <- delirium_meta_dat |>
#   mutate(
#     calc_percent = delitotal_n / arm_n * 100,
#     diff = calc_percent - delitotal_perc
#   ) |>
#   select(refid, study, arm_id, arm, arm_n, delitotal_n, calc_percent, delitotal_perc, diff) |> 
#   # exclude collapsed arms
#   filter(!study %in% c("Lee 2018a", "Avidan 2017", "Zhao 2020")) |> 
#   filter(abs(diff) >= 0.05)
# 
# writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")

```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Delirium incidence by surgical category across all treatment arms in randomized clinical trials. </font>

```{r delirium_incidence_fig, out.width = "70%", out.height = "40%", fig.align = "left"}
#| warning: false
# CODE: boxplots delirium
par(mar = c(1, 1, 1, 1))
set.seed(1234)
# total to add
all_to_boxplot_dat <- delirium_meta_dat |>
  # filter(arm == "Plac/None") |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  mutate(deli_prop = delitotal_n / arm_n,
         surg_f = "Any") 

# placebo/none to add
plac_none_to_boxplot_dat <- delirium_meta_dat |>
  filter(arm == "Plac/None") |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  mutate(deli_prop = delitotal_n / arm_n,
         surg_f = "Plac/None") 

delirium_meta_dat |>
  # filter(arm == "Plac/None") |>
  filter(design_f_lab == "Randomized Clinical Trial") |>
  mutate(
    deli_prop = delitotal_n / arm_n
  ) |>
  bind_rows(all_to_boxplot_dat) |>
  bind_rows(plac_none_to_boxplot_dat) |>
  mutate(
        surg_f = fct_rev(factor(surg_f, levels = c("Ortho", "Cardiac", "GI/Abd", "Thoracic", "Oralmax", "Spine", "Various", "Any", "Plac/None")))
  ) |> 
  ggplot(aes(deli_prop, surg_f)) +
  geom_boxplot(width = 0.4, outlier.size = 1.3) +
  # geom_point(aes(color = arm)) +
  geom_jitter(size = 1.3, aes(color = arm)) +
  scale_colour_manual(values = c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#D4AC0D", "#a65628", "#946F33", "#273746")) +
  labs(y = "", x = "Incidence Proportion") +
  scale_x_continuous(limits = c(0, 1), labels = scales::percent) +
  theme(
    axis.text.x = element_text(size = 11),
    axis.text.y = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_blank()
  )
```

<foot_mg>Dex: dexmedetomidine; Ket: ketamine; Mel: melatonin; Ram: ramelteon; Oxaz: oxazepam; MS: morphine sulfate; Prop: propofol; Plac/None: placebo or no active comparator. </foot_mg>
:::

### Dexmedetomidine

<font size = 4> `r table_ref()` Delirium incidence and ascertainment during hospitalization in trials of dexmedetomidine. </font>

```{r delirium_total_dex_tab}
# CODE: delirium incidence dexmedetomidine
delirium_total_tab <- delirium_total_tab_fun(dex_refid) |> 
  left_join(dex_by_arm |> select(refid, dex_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = dex_groups) |> 
  mutate(delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time))

refid_max_of_days <- delirium_total_tab |> 
  filter(delitotal_time == "Note") |> 
  mutate(refid = as.numeric(refid)) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)
  
```

```{r delirium_total_dex_gt}
delirium_total_gt_fun("Dex") |>
  tab_footnote("RR: risk ratio;Dex: Dexmedetomidine; Mid: Midazolam; Prop: Propofol; MS: Morphine; Preg: Pregabalin; Plac: placebo; DSM: Diagnostic and Statistical Manual of Mental Disorders; ICDSC: Intensive Care Delirium Screening Checklist; Psych: psychiatrist interview; NS: not specified.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |>
  tab_footnote("Tool reported in the `Chinese Expert Consensus on the Prevention and Treatment of Postoperative Delirium in Elderly Patients.'", locations = cells_body(columns = scale_delirium, rows = scale_delirium == "Note")) |> 
  tab_footnote("Postoperative dexmedetomidine only.", locations = cells_body(columns = rr_ci, rows = refid %in% postop_only_dat$refid & rr_ci != "—")) |> 
  tab_footnote("Reported only daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = n_percent, rows = refid %in% refid_max_of_days), placement = "right") |> 
  tab_footnote("Primary outcome was delirium on postoperative day 1 — OR 0.32 (95% CI, 0.10–0.83)", locations = cells_body(columns = study_l, rows = str_detect(study_l, "Qu 2023"))) 
  

rm(refid_max_of_days)
```

### Ketamine

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in ketamine studies. </font>

```{r delirium_total_ket_tab}
# CODE: delirium incidence ketamine
delirium_total_tab <- delirium_total_tab_fun(ket_refid) |> 
  left_join(ket_by_arm |> select(refid, ket_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = ket_groups)
```

```{r delirium_total_ket_gt}
delirium_total_gt_ket <- delirium_total_gt_fun("Ket")
# tab_info(delirium_total_gt_ket)
delirium_total_gt_ket |>
  tab_footnote("RR: risk ratio; Ket: ketamine; Plac: placebo; Prop: propofol; Hal: haloperidol; ICDSC: Intensive Care Delirium Screening Checklist;  CAM: Confusion Assessment Method.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence assessed. Stay indicates duration of hospital stay.", locations = cells_column_labels(columns = delitotal_time))
```

### Melatonin/Ramelteon

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in melatonin and ramelteon studies. </font>

```{r delirium_total_mel_ram_tab}
# CODE: delirium incidence melatonin ramelteon
delirium_total_tab <- delirium_total_tab_fun(mel_ram_refid) |> 
    left_join(mel_ram_by_arm |> select(refid, mel_ram_groups) |> distinct(), by = c("refid")) |> 
  mutate(scale_delirium = ifelse(refid == 3841, "CAM/DRS/DSM", scale_delirium)) |> 
  rename(compare_groups = mel_ram_groups) |> 
  mutate(delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time))

refid_max_of_days <- delirium_total_tab |> 
  filter(delitotal_time == "Note") |> 
  mutate(refid = as.numeric(refid)) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

```

```{r delirium_total_mel_ram_gt}
delirium_total_gt_mel_ram <- delirium_total_gt_fun("Mel|Ram") 

# tab_info(delirium_total_gt_mel_ram_gt)
delirium_total_gt_mel_ram |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "GI/Abd - Before-After/Time Series", "Thoracic - Before-After/Time Series")) |> 
  tab_footnote("RR: risk ratio; MMSE: Mini-Mental State Examination; Mel: melatonin; Ram: ramelteon; AMT: Abbreviated Mental Test; DRS: Delirium Rating Scale; DSM: Diagnostic and Statistical Manual of Mental Disorders; CAM: Confusion Assessment Method; ICDSC: Intensive Care Delirium Screening Checklist.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |> 
  tab_footnote("Reported only daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = n_percent, rows = refid %in% refid_max_of_days), placement = "right")

rm(refid_max_of_days)
```

### *Pooled*

```{r delirium_nma_meta_dat}
#| eval: true
# CODE: * delirium meta data, pairwise and network (netmeta)
nma_rct_dat <- delirium_meta_dat |> 
  mutate(arm = fct_collapse(arm, "Benzo" = c("Oxaz", "Mid"))) |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  # filter(surg_f == "Cardiac") |> 
  # filter(postop_only == TRUE) |> 
  # filter(!country == "China")
  filter(str_detect(design_f_lab, "Random")) |> 
  mutate(across(c(arm, design_f_lab), ~ fct_drop(.x)))  

trts <- levels(nma_rct_dat$arm)

pairs_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = nma_rct_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_nma <- netmeta(
  pairs_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts,
  sm = "RR",
  reference.group = "Plac/None"
)

# pairwise for metabin
pairwise_dat <- pairs_dat |> 
  select(refid, studlab, treat1, treat2, event1, n1, event2, n2, country, surg_f, year, postop_only1, delirium_inc_prop) |> 
  rename(postop_only = postop_only1, study = studlab) |> 
  mutate(china_vs_other = ifelse(country == "China", "China", "Other countries")) |> 
  unite(to_select, treat1:treat2, sep = "|", remove = FALSE) |> 
  arrange(year, study)

# function to select subset pairwise data
# filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex"))

# combine ramelteon and melatonin
nma_rct_melram_dat <- nma_rct_dat |> 
  mutate(arm = fct_collapse(arm, "Mel/Ram" = c("Mel", "Ram")))

trts_melram <- levels(nma_rct_melram_dat$arm)

pairs_melram_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = nma_rct_melram_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_melram_nma <- netmeta(
  pairs_melram_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts_melram,
  sm = "RR",
  reference.group = "Plac/None"
)

```

#### Comparator Network

<font size = 4> `r figure_ref()` Randomized clinical trials and comparators reporting overall incidence of delirium. </font>

```{r delirium_nma_plot, warning = FALSE, fig.dim = c(6, 5), out.width = "50%", fig.align = "center"}
# ```{r delirium_nma_plot, fig.height = 8, fig.align = "left", warning = FALSE}
#| eval: true
# CODE: network plot
# FIXME: adjust offsets 
## Modify current setting for position of treatment labels
## (argument 'offset')
# tmp <- netgraph(net1)
# names(tmp)
# names(tmp$nodes)
# tmp$nodes$offset.x
# netgraph(net1, offset = cbind(tmp$nodes$offset.x, tmp$nodes$offset.y + 0.1))
# netgraph(net1, offset = cbind(tmp$nodes$offset.x + 0.1, tmp$nodes$offset.y))

par(mfrow = c(1, 1), mar = c(1, 1, 1, 1))

netgraph(netmeta_melram_nma,
  lwd = 4,
  plastic = FALSE,
  thickness = TRUE,
  points = TRUE,
  alpha.transparency = 2,
  col = "azure3",
  col.points = "#F39C12",
  number.of.studies = TRUE,
  # seq = trts_melram,
  rescale.pointsize = TRUE,
  # cex.points = c(1, 2, 3, 4, 5),
  # cex.points = node_size$n/40,
  cex.points = netmeta_melram_nma$n.trts,
  labels = paste0(trts, "\n(n=", round(n.trts), ")"),
  col.number.of.studies = "black",
  cex.number.of.studies = 1.2,
  col.highlight = "white",
  bg.number.of.studies = c("#FFFFFF"),
  offset = .02
)

```

<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin or ramelteon; Benz: benzodiazepine (midazolam or oxazepam); MS: Morphine sulfate; Plac/None: Placebo or no intervention; Prop: Propofol. </foot_mg>

<br/>

<!-- Dex: Dexmedetomidine; "Dex/Preg": Dexmedetomidine/Pregabalin; "Dex/Ulin": Dexmedetomidine/Ulinastatin; Ket: Ketamine; Mel: Melatonin; Ram: Ramelteon; Ulin: Ulinastatin; Hal: Haloperidol; Mid: Midazolam; "Mid/Prop": Midazolam/propofol; "Mid/Sevo": Midazolam/sevoflurane; MS: Morphine; Preg: Pregabalin; Prop: Propofol; Rhyth: Rhythim; Sufen: Sufentanil; Plac/None: Placebo or no comparator. -->

#### Dexmedetomidine

<font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention (randomized clinical trials). </font>

```{r nma_dat, fig.width = 14, fig.height = 8.5, fig.align = "left", warning = FALSE}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
dex_plac_refid <- pairwise_dat |> 
  filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex")) |> 
  pull(refid)

dex_meta_dat <- pairwise_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  filter(refid %in% dex_plac_refid) |>
  select(study, year, event2, n2, event1, n1, D1:Overall, china_vs_other, postop_only, delirium_inc_prop) |>
  mutate(
    postop_only = ifelse(!is.na(postop_only), "Only postop", "Includes other times"),
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  )

# toString(sort(dex_plac_refid))
# total_meta(dex_meta_dat)

dex_plac_meta <- metabin(event2, n2, event1, n1,
  data = dex_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = TRUE,
  allstudies = TRUE
  )

# small study effects; here to have result of Harbord test
temp_meta <- dex_plac_meta
temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# summary(dex_plac_meta)
dex_meta_forest_fun <- function(data_meta, flag = FALSE) {
forest(data_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  subgroup = flag,
  prediction.subgroup = flag,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
)  
}

dex_meta_forest_fun(dex_plac_meta)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <a id="figure-4"></a><br/> `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> `r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, dex_plac_refid), "; a secondary outcome in ", prim_sec_out_fun(sec_delirium, dex_plac_refid), ".")`</foot_mg><br/>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` <a id="figure-china"></a> Dexmedetomidine compared with placebo or no intervention according to reporting incidence proportion (randomized clinical trials). </font>

```{r dex_meta_sens_incidence_prop, fig.width = 14, fig.height = 10.5, fig.align = "left"}
delirium_inc_pro_meta <- update(dex_plac_meta, subgroup = delirium_inc_prop)

dex_meta_forest_fun(delirium_inc_pro_meta, TRUE)

rm(delirium_inc_pro_meta)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()`Dexmedetomidine compared with placebo or no intervention --- trials from China vs. other countries (randomized clinical trials). </font>

```{r nma_dat_china, fig.width = 14, fig.height = 10.5, fig.align = "left"}
china_meta <- update(dex_plac_meta, subgroup = china_vs_other)

temp_metareg <- update(china_meta, tau.common = TRUE, common = FALSE, method.random.ci = "HK")
temp_metareg <- metareg(temp_metareg)

dex_meta_forest_fun(china_meta, TRUE)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <br/> `r paste0("Meta-regression (China vs. Other) I² = ", digit0(temp_metareg$I2), "%.")` `r rm(temp_metareg, china_meta)` </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- postoperative administration only vs. other times (randomized clinical trials). </font>

```{r nma_dat_postop, fig.width = 14, fig.height = 10.5, fig.align = "left"}
dex_plac_meta_postop <- update(dex_plac_meta, subgroup = postop_only)

dex_meta_forest_fun(dex_plac_meta_postop, TRUE)

rm(dex_plac_meta_postop)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .</foot_mg><a id="figure-7"></a>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention according to risk of bias appraisal (randomized clinical trials). </font>

```{r nma_dat_rob, fig.width = 14, fig.height = 11.7, fig.align = "left"}
rob_meta <- update(dex_plac_meta, subgroup = rob)

dex_meta_forest_fun(rob_meta, TRUE)

rm(rob_meta)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects --- funnel plot and limit meta-analysis. </font>

```{r dex_plac_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta, ylim = c(0.8, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

<foot_mg> Estimates (odds ratio and 95% CI) from random effects models --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</font>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Summary risk of bias from randomized clinical trials of dexmedetomidine compared with placebo or no intervention. </font>

```{r rob2_summary_dex_plac, fig.height = 3, out.width = "60%"}
rob_summary_fun(cogfunc_refid)
```
:::

#### Ketamine

<font size = 4> `r figure_ref()` Ketamine compared with placebo (randomized clinical trials). </font>

```{r nma_ket_dat, fig.width = 14, fig.height = 3, fig.align = "left"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
# risk of bias
ket_plac_refid <- pairwise_dat |> 
  filter(str_detect(to_select, "Plac") & str_detect(to_select, "Ket")) |> 
  pull(refid)

ket_meta_dat <- pairwise_dat |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(refid %in% ket_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, china_vs_other)

ket_plac_meta <- metabin(event2, n2, event1, n1,
  data = ket_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  )

# summary(ket_plac_meta)
forest(ket_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Ketamine",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Ketamine               Placebo",
  addrows.below.overall = 4
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```

<foot_mg> D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . </foot_mg> <br/>

#### Melatonin/Ramelteon

<font size = 4> `r figure_ref()` Melatonin and ramelteon compared with placebo or no intervention (randomized clinical trials). </font>

```{r nma_mel_ram_dat, fig.width = 14, fig.height = 7.2, fig.align = "left"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
# risk of bias
mel_ram_plac_refid <- pairwise_dat |> 
  filter(treat2 %in% c("Mel", "Ram")) |> 
  filter(treat1 == "Plac/None") |> 
  pull(refid)

mel_ram_meta_dat <- pairwise_dat |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(refid %in% mel_ram_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, treat2, treat1) |> 
  filter(!treat2 == c("Benzo")) |> 
  filter(!treat1 == c("Benzo")) |> 
  mutate(mel_ram = ifelse(treat2 == "Mel", "Melatonin", "Ramelteon")) 

# total_meta(mel_ram_meta_dat)
# toString(mel_ram_plac_refid)

mel_ram_plac_meta <- metabin(event2, n2, event1, n1,
  data = mel_ram_meta_dat,
  studlab = study,
  # cluster = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE,
  subgroup = mel_ram
  )

# summary(mel_ram_plac_meta)
forest(mel_ram_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Mel/Ram",
  label.c = "Plac/None",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  text.subgroup.nohet = TRUE,
  xlim = c(0.1, 3),
  xlab = "Favors: Ram/Mel                   Placebo",
  addrows.below.overall = 4
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```

<foot_mg> Mel: melatonin; Ram: ramelteon; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> `r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, mel_ram_plac_refid), ".")`</foot_mg><br/> <a id="figure-13.-ramelteon-compared-with-placebo-before-after-studies."></a>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Melatonin or ramelteon compared with placebo or no intervention --- small study effects. </font>

```{r mel_ram_plac_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta, ylim = c(1.2, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 7, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

<foot_mg> Estimates (odds ratio and 95% CI) from random effects models --- unadjusted OR `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</font>
:::

<font size = 4> `r figure_ref()` Ramelteon compared with placebo (before-after studies). </font>

```{r mel_ram_bef_after_meta, fig.width = 14, fig.height = 3, fig.align = "left"}
mel_ram_bef_aft_dat <- delirium_meta_dat |> 
  group_by(refid) |>
  filter(any(arm %in% c("Ram", "Mel"))) |>
  filter(design_f_lab == "Before-After/Time Series") |>
  ungroup()

pairwise_dat <- pairwise(
    treat = arm,
    event = delitotal_n,
    n = arm_n,
    studlab = study,
    data = mel_ram_bef_aft_dat,
    sm = "RR",
    keep.all.comparisons = TRUE
  ) |> 
  left_join(robinsi_meta_dat |> select(-Study), by = "refid") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, treat2, treat1) |> 
  mutate(treat2 = "Ramelteon",
         treat1 = "None") |> 
  group_by(study) |> 
  slice(1) |> 
  ungroup()
# TODO: after reconcile robins-i fix

mel_ram_bef_aft_meta <- metabin(event2, n2, event1, n1,
  data = pairwise_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE
)
  
forest(mel_ram_bef_aft_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Ramelteon",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = FALSE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  # colgap.forest.left = "10mm",
  # colgap.forest.right = "10mm",
  # colgap.left = "2mm",
  xlim = c(0.1, 2),  # at = c(0.1, 0.5, 1, c, ...),
  xlab = "Favors: Ramelteon                   None",
  addrows.below.overall = 4,
  text.addline1 = "Continuity correction of 0.5 in studies with zero cell frequencies."
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```

<foot_mg> D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable.</foot_mg>

#### All Comparators

<font size = 4> `r figure_ref()` Network meta-analysis of delirium incidence including all comparators.</font>

```{r nmaForest, fig.dim = c(6, 3.3), out.width = "45%", fig.align = "center"}
#| eval: true
# CODE: network meta results
# fig.width = 6, fig.height = 3.3, fig.align = "center"}
par(mar = c(1, 1, 1, 1))
forest(netmeta_melram_nma,
       xlab = "Risk Ratio")
       # xlim = c(.001, 2),
       # at = c(0.01, .1, 0.5, 1, 2))
```

<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin or Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>

<br/>

<font size = 4> `r table_ref()` League table of risk ratios and 95% confidence intervals from network meta-analysis (random effects model). Comparisons from direct evidence displayed in the upper diagonal; network comparisons shown on the lower diagonal. </font>

```{r leagueTable}
#| results: asis
nma_melram_league <- netleague(netmeta_melram_nma,
  digits = 2,
  common =  FALSE,
  # direct = FALSE,
  seq = trts_melram
)

as_tibble(nma_melram_league$random) |>
  mutate(
    across(V1:V7, ~ str_replace(.x, " \\(", "<br>\\(")),
    # across(V1:V8, ~ str_replace(.x, "\\]", "\\)")),
    across(V1:V7, ~ ifelse(.x == ".", "", .x))
  ) |>
  gt(id = "one") |>
  fmt_markdown(columns = everything()) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V1, rows = V1 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V2, rows = V2 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V3, rows = V3 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V4, rows = V4 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V5, rows = V5 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V6, rows = V6 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V7, rows = V7 %in% trts_melram)) |>
  # tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V8, rows = V8 %in% trts_melram)) |>
  rm_stubhead() |>
  gt_theme_mg() |>
  tab_options(column_labels.hidden = TRUE, table.font.size = px(14)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(V1:V7)) |>
  tab_footnote("Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin or Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator.")

# tab_info(temp)

```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Comparison adjusted funnel plot. </font>

```{r compare_adj_fun_delirium, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
par(mar = c(4, 4, 2, 1), bty = "n", xaxt = "s", yaxt = "s")
funnel(netmeta_melram_nma,
  order = trts_melram
)
```
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Comparison of direct and indirect evidence in network meta-analysis (node splitting forest plot). </font>

```{r, fig.height = 11, fig.width = 7, out.width = "60%", out.height = "60%", fig.align = 'center'}
netsplit(netmeta_melram_nma, order = trts_melram) %>%
  forest(.,
    xlab = "Risk Ratio",
    xlim = c(0.1, 10),
    leftcols = c("studlab", "k"),
    rightlabs = c("RR", "(95% CI)")
  )
```
<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin/Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>
:::

<br/>

```{r}
#| eval: false
```

## **Delayed Neurocognitive Recovery**

```{r dncr_ncd_dat}
#| eval: true
# CODE: neurocog meta data munge; here to produce figure
# VARIABLE: postop_only <lgl> from study arm only post-op administration [postop_only_dat]

## dncr_dat ------------------------------------------- (2023-04-15 15:55) @----
dncr_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x <= 30)) |>
  # select(refid, study, arm_n, neurocog_update_arm_n, neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n, matches("neurocog.*time")) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    neurocog_n1 = ifelse(neurocog_time1 > 30, NA, neurocog_n1),
    neurocog_n2 = ifelse(neurocog_time2 > 30, NA, neurocog_n2),
    neurocog_n3 = ifelse(neurocog_time3 > 30, NA, neurocog_n3),
    neurocog_last_n = ifelse(neurocog_last_time > 30, NA, neurocog_last_n),
    neurocog_total_n = ifelse(neurocog_total_time > 30, NA, neurocog_total_n),
    neurocog_time1 = ifelse(neurocog_time1 > 30, NA, neurocog_time1),
    neurocog_time2 = ifelse(neurocog_time2 > 30, NA, neurocog_time2),
    neurocog_time3 = ifelse(neurocog_time3 > 30, NA, neurocog_time3),
    neurocog_last_time = ifelse(neurocog_last_time > 30, NA, neurocog_last_time),
    neurocog_total_time = ifelse(neurocog_total_time > 30, NA, neurocog_total_time),
    dncr_time = pmax(neurocog_time1, neurocog_time2, neurocog_time3, neurocog_last_time, neurocog_total_time, na.rm = TRUE),
    neurocog_total_n = case_when(
      neurocog_time1 == dncr_time ~ neurocog_n1,
      neurocog_time2 == dncr_time ~ neurocog_n2,
      neurocog_time3 == dncr_time ~ neurocog_n3,
      neurocog_last_time == dncr_time ~ neurocog_last_n,
      neurocog_total_time == dncr_time ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n/arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  left_join(study_char_dat |> select(refid, country, neuro_threshold), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(postop_only_dat, by = "refid") |> # 2023-04-18 none postop only 
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |>
  arrange(refid_c, arm_id) |>
  mutate(
    bar = case_when(
      str_detect(arm, "Dex|Ket|Mel|Ram") ~ bar_prop(neurocog_prop * 100, "#A93226"),
      str_detect(arm, "Plac") ~ bar_prop(neurocog_prop * 100, "#969696"),
      .default = bar_prop(neurocog_prop * 100, "#104E8B")),
    year = as.numeric(str_extract(study, "\\d{4}")),
    # arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    scale_mmse = ifelse(!is.na(neurocog_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |> 
  select(refid, refid_c, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, postop_only, arm, pre_mmse, dncr_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf, neuro_threshold)

# add referents for rr calculation
dncr_rr_ref <- dncr_dat |>
  select(refid, refid_c, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid_c, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  ) |>
  select(-refid)

#| DATA: neurocog_allarms_meta_dat for subsequent pooling, arms not collapsed
neurocog_allarms_meta_dat <- dncr_dat |> 
  select(refid, study, design_f_lab, year, arm_id, arm, neurocog_total_n, arm_n, dncr_time, surg_f) |> 
  filter(study != "Lu 2017") # both dex arms; different dose

dncr_dat <- dncr_dat |> 
  left_join(dncr_rr_ref, by = c("refid_c", "arm_id")) |> 
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |> 
  select(refid, year, design_f_lab, surg_f, study, study_l, arm_id, arm_n, arm, pre_mmse, scale_mmse:scale_other_tf, neuro_threshold, dncr_time, neurocog_nper, bar, rr_ci)

rm(dncr_rr_ref)
```

### Dexmedetomidine

<font size = 4> `r table_ref()` Delayed neurocognitive recovery incidence and ascertainment in trials of dexmedetomidine. </font>

```{r dncr_dex_gt}
#| eval: true
dncr_dex_refid <- dncr_dat |> 
  filter(str_detect(arm, "Dex")) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

dncr_ket_refid <- dncr_dat |> 
  filter(str_detect(arm, "Ket")) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

# dncr_dat |>
#   filter(refid %in% dncr_ket_refid, !is.na(scale_other)) |>
#   filter(refid %in% dncr_dex_refid, !is.na(scale_other)) |>
#   select(refid, study, scale_other)

# create footnotes for thresholds
# dncr_dat |>
#   select(refid, study, scale_mmse, scale_dst, scale_moca, neuro_threshold) |>
#   slice(1, .by = refid) |>
#   mutate(
#     neuro_threshold = str_replace(neuro_threshold, "≤-", "≥"), 
#     footnotes = case_when(
#     !is.na(scale_mmse) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == '", study, "')) |>"),
#     !is.na(scale_dst) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == '", study, "')) |>"),
#     !is.na(scale_moca) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == '", study, "')) |>")
#   ),
#   footnotes = ifelse(row_number() == n(), str_remove(footnotes, ".{2}$"), footnotes)) |> 
#   filter(!is.na(footnotes)) |> 
#   pull(footnotes) |> 
#   noquote()


dncr_dat |>
  arrange(year, study) |> 
  # select(study, refid, starts_with("scale"), neuro_threshold)
  filter(refid %in% dncr_dex_refid) |> 
  mutate(design_surg = paste0(as.character(design_f_lab), "—", as.character(surg_f)),
         # design_surg = str_replace(design_surg, "Randomized Clinical Trial—GI/Abd", "Randomized Clinical Trial<br/>GI/Abd"),
         design_surg = str_remove(design_surg, "Randomized Clinical Trial—")) |> 
  mutate(study_l = ifelse(row_number() > 1, NA, study_l), 
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         dncr_time = ifelse(row_number() > 1, NA, dncr_time), 
                .by = study) |> 
  # tabyl(design_surg) |> arrange(desc(percent))
  group_by(design_surg) |>
  gt(id = "one") |>
  row_group_order(groups = c("GI/Abd", "Various", "Ortho", "Cardiac", "Ophtho", "Thoracic", "Urol", "Nonrandomized Trial—GI/Abd")) |>
  # row_group_order(groups = c("Randomized Clinical Trial — GI/Abd", "Randomized Clinical Trial — Various", "Randomized Clinical Trial — Ortho", "Randomized Clinical Trial — Cardiac", "Randomized Clinical Trial — Ophtho", "Randomized Clinical Trial — Thoracic", "Randomized Clinical Trial — Urol", "Nonrandomized Trial — GI/Abd")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other, design_f_lab, surg_f, neuro_threshold)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA", 
    scale_other_tf   = "Other",
    dncr_time        = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |> 
  gt_theme_mg() |> 
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |>
  fmt_number(dncr_time, decimals = 0) |> 
  sub_missing(columns = everything(), missing_text = "") |> 
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Delayed Neurocognitive Recovery", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    dncr_time        ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, dncr_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), dncr_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm, "Dex|Ket|Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = !str_detect(arm, "Dex|Ket|Mel|Ram|Plac"))) |>
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Dex: Dexmedetomidine; Mid: Midazolam; Prop: Propofol; Ulin: ulinastatin; Plac/None: placebo or no intervention.") |> 
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(dncr_time))) |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Hasegawa's Dementia Scale; Trail-Making Test; Word Recall; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2022")) |> 
  tab_footnote("Trail Making Test; Words Recall Test; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2015")) |> 
  tab_footnote("American Psychiatric Association postoperative cognitive dysfunction diagnostic criteria.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Gao 2020")) |> 
  tab_footnote("Visual Verbal Learning Tests; Trail Making Test; Stroop Color Word Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Chawdhary 2020")) |> 
  tab_footnote("Stroop Color-Word Test; Associative Learning And Memory Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Li 2019")) |> 
  tab_footnote('MMSE <26.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Mansouri 2019')) |>                       
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2020d')) |>   
  tab_footnote('Low score not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Bao 2020')) |>             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == 'Zhou 2019b')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2019')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2018c')) |>                          
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Ding 2022')) |>      
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Hudetz 2009a')) |>   
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Hollinger 2021')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lee 2015')) |>                             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2017')) |>                            
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lu 2017')) |>      
  tab_footnote('Z >2.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Shi 2020')) |>                                
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhao 2020')) |>    
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Ding 2015')) |>     
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2021b')) |>      
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2015')) |>       
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chawdhary 2020')) |>
  tab_footnote('MMSE <27.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2013')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2021')) |>                     
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Li 2019')) |>                               
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2020')) 
```

### Ketamine

<font size = 4> `r table_ref()` Delayed neurocognitive recovery incidence and ascertainment in randomized clinical trials of ketamine. </font>

```{r dncr_ket_gt}
#| eval: true
dncr_dat |> 
  arrange(year, study) |> 
  filter(refid %in% dncr_ket_refid) |> 
  mutate(design_surg =  as.character(surg_f)) |> 
  # mutate(design_surg = paste0(as.character(design_f_lab), " — ", as.character(surg_f))) |> 
  mutate(study_l = ifelse(row_number() > 1, NA, study_l), 
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         dncr_time = ifelse(row_number() > 1, NA, dncr_time), 
                .by = study) |> 
  # tabyl(design_surg) |> arrange(desc(percent))
  group_by(design_surg) |>
  gt(id = "one") |>
  # row_group_order(groups = c("Randomized Clinical Trial — Various", "Randomized Clinical Trial — Ortho", "Randomized Clinical Trial — Cardiac", "Randomized Clinical Trial — Ophtho")) |>
  row_group_order(groups = c("Various", "Ortho", "Cardiac", "Ophtho")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other, surg_f, design_f_lab, neuro_threshold)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA", 
    scale_other_tf   = "Other",
    dncr_time        = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |> 
  gt_theme_mg() |> 
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |> 
  fmt_number(dncr_time, decimals = 0) |> 
  sub_missing(columns = everything(), missing_text = "") |> 
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Delayed Neurocognitive Recovery", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    dncr_time        ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, dncr_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), dncr_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm, "Dex|Ket|Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = !str_detect(arm, "Plac|Dex|Ket|Mel|Ram"))) |> 
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Ket: ketamine; Hal: haloperidol; Plac: placebo.") |> 
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(dncr_time))) |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Short Portable Mental Status Questionnaire.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Hudetz 2009a")) |> 
  tab_footnote("Repeatable Battery for the Assessment Of Neuropsychological Status Subtests; Brief Visual Memory Test Revised; Backward Digit Span; Semantic Fluency; Phonemic Fluency.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Rascon-Martinez 2016")) |> 
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Dex: Dexmedetomidine; Mid: Midazolam; Prop: Propofol; Ulin: ulinastatin; Plac/None: placebo or no intervention.") |> 
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(dncr_time))) |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Hasegawa's Dementia Scale; Trail-Making Test; Word Recall; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2022")) |> 
  tab_footnote("Trail Making Test; Words Recall Test; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2015")) |> 
  tab_footnote("American Psychiatric Association postoperative cognitive dysfunction diagnostic criteria.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Gao 2020")) |> 
  tab_footnote("Visual Verbal Learning Tests; Trail Making Test; Stroop Color Word Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Chawdhary 2020")) |> 
  tab_footnote("Stroop Color-Word Test; Associative Learning And Memory Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Li 2019")) |> 
  tab_footnote('MMSE <26.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Mansouri 2019')) |>                       
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2020d')) |>   
  tab_footnote('Low score not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Bao 2020')) |>             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == 'Zhou 2019b')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2019')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2018c')) |>                          
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Ding 2022')) |>      
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Hudetz 2009a')) |>   
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Hollinger 2021')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lee 2015')) |>                             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2017')) |>                            
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lu 2017')) |>      
  tab_footnote('Z >2.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Shi 2020')) |>                                
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhao 2020')) |>    
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Ding 2015')) |>     
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2021b')) |>      
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2015')) |>       
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chawdhary 2020')) |>
  tab_footnote('MMSE <27.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2013')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2021')) |>                     
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Li 2019')) |>                               
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2020'))   
```

### Melatonin/Ramelteon

No studies

<br/>

### *Pooled*

```{r dncr_meta_dat}
#| eval: true
# NOTE: 2023-04-20 adding ketamine studies to dexmedetomidine dncr would not connect any network; so left distinct
neurocog_meta_dat <- neurocog_allarms_meta_dat |>
  filter(dncr_time >= 3) |> 
  # collapse arms
  mutate(
    neurocog_total_n = case_when(
      study == "Zhou 2019b" & arm_id == 3 ~ collapse_dichot(neurocog_allarms_meta_dat, "Zhou 2019b", c(3, 4), neurocog_total_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Zhao 2020", c(2, 3, 4), neurocog_total_n),
      study == "Li 2021b" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Li 2021b", c(2, 3, 4), neurocog_total_n),
      .default = neurocog_total_n
    ),
    arm_n = case_when(
      study == "Zhou 2019b" & arm_id == 3 ~ collapse_dichot(neurocog_allarms_meta_dat, "Zhou 2019b", c(3, 4), arm_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Zhao 2020", c(2, 3, 4), arm_n),
      study == "Li 2021b" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Li 2021b", c(2, 3, 4), arm_n),
      .default = arm_n
    ),
    arm = fct_collapse(arm, Plac = c("Plac", "None"))
  ) |>
  filter(!(study %in% c("Zhou 2019b") & arm_id %in% c(4))) |>
  filter(!(study %in% c("Zhao 2020") & arm_id %in% c(3, 4))) |>
  filter(!(study %in% c("Li 2021b") & arm_id %in% c(3, 4))) |>
  # add potential subgroups
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  # NOTE: 2023-04-20 no dexmedetomidine studies included in dncr pooled results administered only postop
  left_join(postop_only_dat, by = "refid") 

```

```{r dncr_meta}
#| eval: true
# CODE: dncr meta data, pairwise and network (netmeta)
nma_dncr_dat <- neurocog_meta_dat |>
  # mutate(arm = fct_collapse(arm, "Benzo" = c("Oxaz", "Mid"))) |>
  # mutate(time = ifelse(dncr_time < 3, "at <3 days", "at ≥3 days" )) |> 
  # filter(time == "at ≥3 days") |> 
  select(-dncr_time) |> 
  filter(design_f_lab == "Randomized Clinical Trial") |>
  # filter(surg_f == "Cardiac") |>
  # filter(postop_only == TRUE) |>
  # filter(!country == "China") |> 
  mutate(across(c(arm, design_f_lab), ~ fct_drop(.x)))

trts <- levels(nma_dncr_dat$arm)

pairs_dat <- pairwise(
  treat = arm,
  event = neurocog_total_n,
  n = arm_n,
  studlab = study,
  data = nma_dncr_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_dncr_nma <- netmeta(
  pairs_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts,
  sm = "RR",
  reference.group = "Plac"
)

```

#### Comparator Network

<font size = 4> `r figure_ref()` Randomized clinical trials and comparators reporting delayed neurocognitive recovery. </font>

```{r dncr_nma_plot, warning = FALSE, fig.dim = c(6, 5), out.width = "50%", fig.align = "center"}
#| eval: true
# CODE: dncr network plot
par(mfrow = c(1, 1), mar = c(1, 1, 1, 1))

netgraph(
  netmeta_dncr_nma,
  lwd = 4,
  plastic = FALSE,
  thickness = TRUE,
  points = TRUE,
  alpha.transparency = 2,
  col = "azure3",
  col.points = "#F39C12",
  number.of.studies = TRUE,
  # seq = trts_melram,
  rescale.pointsize = TRUE,
  # cex.points = c(1, 2, 3, 4, 5),
  # cex.points = node_size$n/40,
  cex.points = netmeta_dncr_nma$n.trts,
  labels = paste0(trts, "\n(n=", round(n.trts), ")"),
  col.number.of.studies = "black",
  cex.number.of.studies = 1.2,
  col.highlight = "white",
  bg.number.of.studies = c("#FFFFFF"),
  offset = .02
)

# forest(netmeta_dncr_nma)

```
<foot_mg> Dex: Dexmedetomidine; Ket: ketamine; Hal: haloperidol; Mid: midazolam; Prop: propofol; Ulin: ulinastatin; Plac/None: Placebo or no intervention; Prop: Propofol. <br/>
Zhao 2020 no intervention (usual care) arm included as placebo.</foot_mg>

#### Dexmedetomidine

<font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention (randomized clinical trials, delayed neurocognitive recovery assessed postop day 3 or later). </font>

```{r dncr_dex_plac_meta, fig.width = 14, fig.height = 6, fig.align = "left", warning = FALSE}
#| eval: true
dex_meta_dat <- pairs_dat |>
  arrange(year, study) |> 
  unite(to_select, treat1, treat2, sep = "/") |> 
  filter(str_detect(to_select, c("Plac")) & str_detect(to_select, "Dex") & !str_detect(to_select, "Ulin")) |> 
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall, country, surgs_single_f) |>
  mutate(
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  ) |> 
  arrange(study)

dex_plac_meta <- metabin(event2, n2, event1, n1,
  data = dex_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE,
  # subgroup = time
  )

# refid_meta_fun(dex_meta_dat)

# small study effects; here to have result of Harbord test
temp_meta <- dex_plac_meta
temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
# temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)
# trimfill(temp_meta)

# summary(dex_plac_meta)
forest(dex_plac_meta,
  # sortvar = year,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "surgs_single_f", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)   ", "Procedure", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  # subgroup = TRUE,
  # prediction.subgroup = FALSE,
  colgap.right = "5mm",
  # print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
  # text.addline1 = "Hartung-Knapp adjustment not applied owing to subgroups — overall RR 0.55 (95% CI, 0.37–0.79) when used.",
  # text.addline2 = "Excluding studies with assessments at less than 3 days (95% prediction interval, 0.24–0.92)."
)  

```
<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <a id="figure-4"></a><br/> 
`r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> 
`r paste0("Neurocognitive recovery a designated primary outcome in ", prim_sec_out_fun(prim_pocd, dex_meta_dat$refid), "; a secondary outcome in ", prim_sec_out_fun(sec_pocd, dex_meta_dat$refid), ".")`<br/>
Six trials conducted in China and 1 each in Egypt and Iran.<br/>
Using odds ratios, pooled OR 0.36 (95% CI, 0.19–0.70; *I*<sup> 2</sup> 44%), prediction interval (0.09–1.45).
</foot_mg><br/>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention according to risk of bias appraisals (randomized clinical trials; delayed neurocognitive recovery). </font>

```{r dncr_rob_meta, fig.width = 14, fig.height = 8, fig.align = "left"}
rob_meta <- update(dex_plac_meta, subgroup = rob)

forest(rob_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  subgroup = TRUE,
  prediction.subgroup = FALSE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
)  

```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/>0.5 added to cells of studies without events in one arm. </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects --- funnel plot and limit meta-analysis (delayed neurocognitive recovery). </font>

```{r dex_plac_dncr_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

# temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_meta, pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.05, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

# text(0.95, 0.03, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

<!-- <foot_mg> Estimates (odds ratio and 95% CI) from random effects models --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</font> -->
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Summary risk of bias from randomized clinical trials of dexmedetomidine compared with placebo or no intervention (delayed neurocognitive recovery). </font>

```{r rob2_summary_dncr_dex_plac, fig.height = 3, out.width = "60%"}
rob_summary_fun(dex_meta_dat$refid)
```
:::

#### Ketamine

<font size = 4> `r figure_ref()` Ketamine compared with placebo or no intervention (randomized clinical trials, delayed neurocognitive recovery). </font>

```{r dncr_ket_plac_meta, fig.width = 14, fig.height = 4.5, fig.align = "left", warning = FALSE}
#| eval: true
ket_meta_dat <- pairs_dat |>
  arrange(year, study) |>
  unite(to_select, treat1, treat2, sep = "/") |>
  filter(str_detect(to_select, c("Plac")) & str_detect(to_select, "Ket") & !str_detect(to_select, "Hal")) |>
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall, country, surgs_single_f) |>
  mutate(
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  ) |>
  arrange(study)

ket_plac_meta <- metabin(event2, n2, event1, n1,
  data = ket_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = TRUE,
  allstudies = TRUE
)

# small study effects; here to have result of Harbord test
# temp_meta <- ket_plac_meta
# temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
# temp_metabias <- metabias(temp_meta, method.bias = "Egger", k.min = 10)
# trimfill(temp_meta)

# summary(ket_plac_meta)
forest(ket_plac_meta,
  # sortvar = year,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Ketamine",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)   ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  # subgroup = TRUE,
  # prediction.subgroup = FALSE,
  # print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 5),
  xlab = "Favors: Ketamine               Placebo/None",
  addrows.below.overall = 4
)
```
<foot_mg> Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <br/>
Too few studies to examine small study effects. </foot_mg><br/>

#### All Comparators

<font size = 4> `r figure_ref()` Network meta-analysis of delayed neurocognitive recovery including all comparators.</font>

```{r dncr_nma_forest, fig.dim = c(6, 3.3), out.width = "45%", fig.align = "center"}
#| eval: true
# CODE: network meta results
# fig.width = 6, fig.height = 3.3, fig.align = "center"}
par(mar = c(1, 1, 1, 1))
forest(netmeta_dncr_nma,
  xlab = "Risk Ratio",
  xlim = c(.15, 2),
  at = c(0.2, 0.5, 1, 2)
)
```
<foot_mg> Dex: Dexmedetomidine; Ket: ketamine; Hal: haloperidol; Mid: midazolam; Prop: propofol; Ulin: ulinastatin; Plac/None: Placebo or no intervention; Prop: Propofol. </foot_mg>

<br/>

<font size = 4> `r table_ref()` League table of risk ratios and 95% confidence intervals from network meta-analysis (random effects model). Comparisons from direct evidence displayed in the upper diagonal; network comparisons shown on the lower diagonal. </font>

```{r dncr_nma_league}
#| results: asis
nma_dncr_league <- netleague(netmeta_dncr_nma,
  digits = 2,
  common = FALSE,
  # direct = FALSE,
  seq = trts
)

as_tibble(nma_dncr_league$random) |>
  mutate(
    across(V1:V8, ~ str_replace(.x, " \\(", "<br>\\(")),
    # across(V1:V8, ~ str_replace(.x, "\\]", "\\)")),
    across(V1:V8, ~ ifelse(.x == ".", "", .x))
  ) |>
  gt(id = "one") |>
  fmt_markdown(columns = everything()) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V1, rows = V1 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V2, rows = V2 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V3, rows = V3 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V4, rows = V4 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V5, rows = V5 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V6, rows = V6 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V7, rows = V7 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V8, rows = V8 %in% trts)) |>
  rm_stubhead() |>
  gt_theme_mg() |>
  tab_options(column_labels.hidden = TRUE, table.font.size = px(14)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(V1:V8)) |>
  tab_footnote("Dex: Dexmedetomidine; Ket: ketamine; Hal: haloperidol; Mid: midazolam; Prop: propofol; Ulin: ulinastatin; Prop: Propofol; Plac/None: Placebo or no intervention.")

# tab_info(temp)
```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Comparison adjusted funnel plot (delayed neurocognitive recovery). </font>

```{r compare_adj_fun_dncr, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
par(mar = c(4, 4, 2, 1), bty = "n", xaxt = "s", yaxt = "s")
funnel(netmeta_dncr_nma,
  order = trts
)
```
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Comparison of direct and indirect evidence in network meta-analysis (node splitting forest plot, delayed neurocognitive recovery). </font>

```{r, fig.height = 11, fig.width = 7, out.width = "60%", out.height = "60%", fig.align = 'center'}
netsplit(netmeta_dncr_nma, order = trts) %>%
  forest(.,
    xlab = "Risk Ratio",
    # xlim = c(0.15, 2),
    leftcols = c("studlab", "k"),
    rightlabs = c("RR", "(95% CI)")
  )
```
<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin/Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>
:::

<br/>

## **Neurocognitive Disorders**

### Dexmedetomidine or Melatonin

<font size = 4> `r table_ref()` Neurocognitive disorders and ascertainment reported in dexmedetomidine and melatonin trials. </font>

```{r ncd_dat}
#| eval: true

## ncd_dat -------------------------------------------- (2023-04-15 15:55) @----
ncd_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x > 30)) |>
  # select(refid, study, arm_n, neurocog_update_arm_n, neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n, matches("neurocog.*time")) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    ncd_time = case_when(
      neurocog_time1 > 30 ~ neurocog_time1,
      neurocog_time2 > 30 ~ neurocog_time2,
      neurocog_time3 > 30 ~ neurocog_time3,
      neurocog_last_time > 30 ~ neurocog_last_time,
      neurocog_total_time > 30 ~ neurocog_total_time,
      .default = NA
    ),
    neurocog_total_n = case_when(
      neurocog_time1 > 30 ~ neurocog_n1,
      neurocog_time2 > 30 ~ neurocog_n2,
      neurocog_time3 > 30 ~ neurocog_n3,
      neurocog_last_time > 30 ~ neurocog_last_n,
      neurocog_total_time > 30 ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n / arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  # add drug (arm), country, surgery, postop only
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(postop_only_dat, by = "refid") |> # 2023-04-18 none postop only
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |>
  # select(refid, refid_c, arm_id, study, design_f_lab, country, surg_f, postop_only, arm, pre_mmse, neurocog_total_n, arm_n, ncd_time, neurocog_prop, neurocog_nper) |>
  arrange(refid_c, arm_id) |>
  mutate(
    year = as.numeric(str_extract(study, "\\d{4}")),
    # neurocog_inc_prop = ifelse(neurocog_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    # arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")), # all placebo
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    bar = case_when(
      str_detect(arm, "Dex|Ket|Mel|Ram") ~ bar_prop(neurocog_prop * 100, "#A93226"),
      str_detect(arm, "Plac") ~ bar_prop(neurocog_prop * 100, "#969696"),
      .default = bar_prop(neurocog_prop * 100, color_1)
    ),
    year = as.numeric(str_extract(study, "\\d{4}")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    scale_mmse = ifelse(!is.na(neurocog_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |>
  select(refid, refid_c, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, postop_only, arm, pre_mmse, ncd_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf)

ncd_rr_ref <- ncd_dat |>
  select(refid, refid_c, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid_c, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  ) |>
  select(-refid)

ncd_dat <- ncd_dat |>
  left_join(ncd_rr_ref, by = c("refid_c", "arm_id")) |>
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |>
  select(refid, year, design_f_lab, study, study_l, arm_id, arm_n, arm, pre_mmse, scale_mmse:scale_other_tf, ncd_time, neurocog_nper, bar, rr_ci)
```

```{r ncd_gt}
#| eval: true
ncd_dat |> 
  arrange(year, study) |> 
    mutate(study_l = ifelse(row_number() > 1, NA, study_l), 
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         ncd_time = ifelse(row_number() > 1, NA, ncd_time), 
                .by = study) |> 
  group_by(design_f_lab) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA", 
    scale_other_tf   = "Other",
    ncd_time         = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |> 
  gt_theme_mg() |> 
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |> 
  fmt_number(ncd_time, decimals = 0) |> 
  sub_missing(columns = everything(), missing_text = "") |> 
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Neurocognitive Disorders", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    ncd_time         ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, ncd_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), ncd_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm, "Dex|Ket|Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = !str_detect(arm, "Plac|Dex|Ket|Mel|Ram"))) |> 
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Dex: dexmedetomidine: Mel: melatonin; Plac: placebo.") |> 
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(ncd_time))) |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |> 
  tab_footnote("Stroop Color-Word Test; Associative Learning And Memory Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Li 2019")) |> 
  tab_footnote("Charlson Comorbidity Index Dementia & Informant Questionnaire on Cognitive Decline", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "de Johnghe 2014")) |> 
    tab_footnote('MMSE <26.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Mansouri 2019')) |>                       
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2020d')) |>   
  tab_footnote('Low score not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Bao 2020')) |>             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == 'Zhou 2019b')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2019')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2018c')) |>                          
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Ding 2022')) |>      
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Hudetz 2009a')) |>   
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Hollinger 2021')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lee 2015')) |>                             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2017')) |>                            
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lu 2017')) |>      
  tab_footnote('Z >2.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Shi 2020')) |>                                
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhao 2020')) |>    
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Ding 2015')) |>     
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2021b')) |>      
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2015')) |>       
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chawdhary 2020')) |>
  tab_footnote('MMSE <27.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2013')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2021')) |>                     
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Li 2019')) |>                               
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2020')) 
```

### Ketamine

No studies

## **Complications**

### Dexmedetomidine

<font size = 4> `r table_ref()` Report complications in dexmedetomidine studies — cardiac, MI, stroke, pulmonary, pneumonia, and acute kidney injury (randomized clinical trials unless noted). </font>

```{r complications_dat}
#| eval: true
# complication_all <- c("medical", "surg", "cardiac", "cardarr", "gastro", "neuro", "pulm", "thromb", "infect", "fall", "stroke", "othcomp", "asppneum", "atelec", "bronch", "cardarr", "myoinfarct", "ssi", "sepsis", "uti", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48", "kidneyinj", "nerveinj", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

complications_kq6_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, year, study, arm_id, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high")) |>
    left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
    relocate(drug_recode_abbr, .after = arm_id) |>
    rename(arm = drug_recode_abbr) |>
    mutate(complication = var_prefix) |>
    rename_with(~ str_replace(.x, "95", "ci_"), .cols = everything()) |>
    rename_with(~ str_replace(.x, "^.*_", ""), .cols = c(8:15)) |>
    arrange(complication, year, study, arm_id)
}

# adverse event data includes all reported complications
adverse_events_dat <- map_df(complication_incl, complications_kq6_fun) |>
  mutate(
    arm_n = ifelse(!is.na(comp_update_arm_n), comp_update_arm_n, arm_n),
    calc_per = n / arm_n * 100,
    n_per = n_per_fun(n, arm_n, 1),
    diff = per - calc_per
  )

adverse_meta_dat <- adverse_events_dat |>
  mutate(
    study_compl = paste0(study, complication),
    complication = factor(complication, levels = c("cardiac", "myoinfarct", "cardarr", "kidneyinj", "stroke", "pulm", "pneum", "pulcongest", "pe", "respfail", "intub"), labels = c("Cardiac", "MI", "Cardiac Arrest", "AKI", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation"))
  ) |>
  select(refid, year, study, arm_id, arm, arm_n, n, complication, study_compl)

adverse_events_dat <- adverse_events_dat |> 
  left_join(study_char_dat |> select(refid, study_l, surgs_single, design_f_lab), by = "refid") |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  arrange(complication, surgs_single, year, study, arm_id) |> 
  mutate(
    study_compl = paste0(study, complication), 
    ref_arm_n = arm_n,
    ref_n = n
  ) |>
  group_by(study_compl) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |> 
  mutate(
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 1), "—"),
    bar = case_when(
      str_detect(arm, "Dex") ~ bar_prop(calc_per, "#A93226"),
      str_detect(arm, "Ket|Mel|Ram") ~ bar_prop(calc_per, "#A93226"),
      str_detect(arm, "Plac|None") ~ bar_prop(calc_per, "#969696"),
      .default = bar_prop(calc_per, "#104E8B"))) |> 
  select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n, age_table, surgs_single, n_per, bar, rd_ci, complication, design_f_lab)

```

```{r complications_dex_gt}
adverse_events_dat |>
  filter(!refid %in% mel_ram_refid) |>
  mutate(
    complication = factor(complication, levels = c("cardiac", "myoinfarct", "cardarr", "kidneyinj", "stroke", "pulm", "pneum", "pulcongest", "pe", "respfail", "intub"), labels = c("Cardiac", "MI", "Cardiac Arrest", "AKI", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation")),
    complication = fct_drop(complication)
  ) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    surgs_single = ifelse(row_number() > 1, "", surgs_single), .by = study_compl
  ) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac", "MI", "Cardiac Arrest", "Stroke", "AKI", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    arm ~ px(60),
    age_table ~ px(100),
    surgs_single ~ px(80),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  # tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Dex"))) |>
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  # tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Plac|None"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Ket|Mel|Ram|Dex|Plac|None"))) |>
  # tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(), rows = str_detect())) |>
  # tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(), rows = str_detect()))
  tab_footnote(md("Before-After/Time Series"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Before-After/Time Series")) |>
  tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial")) |>
  tab_footnote("RD: risk difference; MI: myocardial infarction; AKI: acute kidney injury.")

```

### Ketamine

No studies

### Ramelteon

<font size = 4> `r table_ref()` Report complications in ramelteon studies — cardiac, MI, stroke, pulmonary, pneumonia, acute kidney injury (all before-after designs). </font>

```{r complications_mel_ram_gt}
adverse_events_dat |>
  filter(refid %in% mel_ram_refid) |>
    mutate(
    complication = factor(complication, levels = c("cardiac", "myoinfarct", "cardarr", "kidneyinj", "stroke", "pulm", "pneum", "pulcongest", "pe", "respfail", "intub"), labels = c("Cardiac", "MI", "Cardiac Arrest", "AKI", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation")),
    complication = fct_drop(complication)) |> 
  # mutate(complication = factor(complication, levels = c("cardiac", "pulm", "pneum"), labels = c("Cardiac", "Pulmonary", "Pneumonia"))) |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l), .by = study_compl) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac", "Pulmonary", "Pneumonia")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    arm ~ px(60),
    age_table ~ px(100),
    surgs_single ~ px(80),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Dex"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  # tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Plac|None"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Ket|Mel|Ram|Dex|Plac|None"))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  # tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  # tab_style(style = list(cell_text(color = color_1)), locations = cells_body(columns = c(), rows = str_detect())) |>
  # tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(), rows = str_detect())) |>
  # tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(), rows = str_detect()))
  tab_footnote(md("Before-After/Time Series"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Before-After/Time Series")) |>
  tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial"))
  
```

### *Pooled*

```{r}
adverse_dex_meta_dat <- adverse_meta_dat |>
  filter(refid %in% dex_refid) |>
  filter(!arm %in% c("Dex/Preg", "Preg")) |>
  group_by(study_compl) |>
  filter(any(arm %in% c("Plac", "None"))) |>
  ungroup() |> 
  mutate(
    n = case_when(
      study_compl == "Zhao 2020cardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020cardiac", c(2, 3, 4), n),
      study_compl == "Zhao 2020pulm"   & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020pulm", c(2, 3, 4), n),
      study_compl == "Li 2021bcardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Li 2021bcardiac", c(2, 3, 4), n),
      .default = n
    ),
    arm_n = case_when(
      study_compl == "Zhao 2020cardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020cardiac", c(2, 3, 4), arm_n),
      study_compl == "Zhao 2020pulm"   & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020pulm", c(2, 3, 4), arm_n),
      study_compl == "Li 2021bcardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Li 2021bcardiac", c(2, 3, 4), arm_n),
      .default = arm_n
    ),
    arm = fct_collapse(arm, Plac = c("Plac", "None"))
  ) |>
  filter(!(study_compl %in% c("Zhao 2020cardiac") & arm_id %in% c(3, 4))) |>
  filter(!(study_compl %in% c("Zhao 2020pulm") & arm_id %in% c(3, 4))) |>
  filter(!(study_compl %in% c("Li 2021bcardiac") & arm_id %in% c(3, 4))) 

adverse_dex_meta_wide_dat <- adverse_dex_meta_dat |>
  mutate(study = ifelse(study %in% c("Wang 2020d", "Li 2020"), paste0(study, "*"), study)) |>
  arrange(refid, complication) |>
  pivot_wider(names_from = "arm", values_from = arm_n:n) |>
  group_by(study_compl) |>
  fill(arm_n_Plac:n_Dex) |>
  slice(2) |>
  ungroup() |>
  arrange(complication, year, study) |>
  left_join(rob2_meta_dat, by = "refid")

```

<font size = 4> `r figure_ref()` Risk differences in complications — cardiac, stroke, pulmonary, and acute kidney injury (dexmedetomidine versus placebo or no interventions; randomized clinical trials except and Li 2020). </font>

```{r complication_meta,  fig.width = 14, fig.height = 17, fig.align = "left"}
adverse_meta <- metabin(
  n_Dex, arm_n_Dex, n_Plac, arm_n_Plac,
  data = adverse_dex_meta_wide_dat,
  studlab = study,
  sm = "RR",
  subgroup = complication,
  allstudies = FALSE
)  

forest(adverse_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Dex",
  label.c = "Placebo",
  # rightcols = c("effect", "ci"),
  # rightlabs = c("RD ", "(95% CI)   "),
  just.addcols.right = "center",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  # leftlabs = c("Complication &\nStudy", "Events", "TIVA\n Total", "Events", "Inhaled\n Total"),
  # just.addcols.right = "right",
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  test.subgroup = FALSE,
  overall.hetstat = FALSE,
  print.subgroup.name = FALSE,
  overall = FALSE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  # pscale = 100,
  # pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  # xlim = c(-20, 20),
  xlab = "Favors: Dexmedetomidine                     Plac/None",
  addrows.below.overall = 4,
  text.addline1 = "*Non randomized trial."
)
```
<foot_mg> RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/>
Similar arms combined in Li 2021b and Zhao 2020.
</foot_mg> 

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Summary risk of bias for studies reporting complications (dexmedetomidine versus placebo or no intervention). </font>

```{r rob2_summary_complications, fig.height = 3, out.width = "60%"}
rob_summary_fun(adverse_dex_meta_wide_dat$refid)
```
:::

```{r complications_ram_meta}
adverse_ram_meta_dat <- adverse_meta_dat |>
  filter(refid %in% mel_ram_refid) |> 
  filter(complication == "Pneumonia")

adverse_ram_meta_wide_dat <- adverse_ram_meta_dat |>
  arrange(refid, complication) |>
  pivot_wider(names_from = "arm", values_from = arm_n:n) |>
  group_by(study_compl) |>
  fill(arm_n_None:n_Ram) |>
  slice(2) |>
  ungroup() |>
  arrange(complication, year, study) |>
  left_join(robinsi_meta_dat, by = "refid")

```

<font size = 4> `r figure_ref()` Risk ratio in pneumonia (ramelteon versus no interventions; before-after studies). </font>

```{r complication_ram_meta,  fig.width = 14, fig.height = 3, fig.align = "left"}
adverse_ram_meta <- metabin(
  n_Ram, arm_n_Ram, n_None, arm_n_None,
  data = adverse_ram_meta_wide_dat,
  studlab = study,
  sm = "RR",
  subgroup = complication,
  allstudies = FALSE
)  

forest(adverse_ram_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Ramelteon",
  label.c = "None",
  # rightcols = c("effect", "ci"),
  # rightlabs = c("RD ", "(95% CI)   "),
  just.addcols.right = "center",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  # leftlabs = c("Complication &\nStudy", "Events", "TIVA\n Total", "Events", "Inhaled\n Total"),
  # just.addcols.right = "right",
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  test.subgroup = FALSE,
  overall.hetstat = FALSE,
  print.subgroup.name = FALSE,
  overall = FALSE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  # pscale = 100,
  # pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  # xlim = c(-20, 20),
  xlab = "Favors: Ramelteon                  None",
  addrows.below.overall = 4
)
```
<foot_mg> D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable. </foot_mg>

## **Length of Stay**

<font size = 4> `r table_ref()` Length of stay according to procedure classification and comparator. </font>

```{r length_of_stay}
#| eval: true
los_tab <- contin_dat |>
  mutate(los_for_tables(contin_dat)) |>
  filter(if_any(los_m:los_diff_pval, ~ !is.na(.))) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid" ) |> 
  mutate(
    refid_arm_id = paste0(refid, "-", arm_id),
    surg_groups = paste0(surgs_single_f, " - ", design_f_lab),
    mean_med = case_when(
      !is.na(los_m) ~ los_m,
      !is.na(los_med) ~ los_med
    ),
    drug_recode_abbr = fct_drop(drug_recode_abbr),
    calc_prop_25d = 100 * mean_med / 25,
    bar = case_when(
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(calc_prop_25d, "#A93226"),
      str_detect(drug_recode_abbr, "Ket") ~ bar_prop(calc_prop_25d, "#F39C12"),
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(calc_prop_25d, "#104E8B"),
      .default = bar_prop(calc_prop_25d, "#969696")
    )
  ) |>
  # select(refid, arm_id, arm_n, drug_recode_abbr, age_table, asa_ps_incl, surg_groups, study, los_table, bar, starts_with(("los"))) |>
  arrange(surg_groups, year, study, arm_id) |> 
  select(refid, refid_arm_id, study, study_l, arm_n, drug_recode_abbr, asa_ps_incl, age_table, los_table, bar, surg_groups, country)

# temp |> tabyl(drug_recode_abbr)

los_tab |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         country = ifelse(row_number() > 1, "", country),
         .by = refid) |> 
  group_by(surg_groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "GI/Abd - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Oralmax - Randomized Clinical Trial", "GI/Abd - Before-After/Time Series", "Thoracic - Before-After/Time Series", "Spine - Prospective Cohort" )) |> 
  cols_hide(c(refid, refid_arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = " N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = "PS",
    age_table = "    Age",
    los_table = "    LOS",
    bar = "0 – 25 days",
    country = "Country"
  ) |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120),
    country ~ px(80)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, drug_recode_abbr,  bar))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, drug_recode_abbr, asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Dex"))) |> 
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Ket"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Mel|Ram"))) |> 
  tab_footnote(md("NR: not reported")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl)))
  
```

### *Pooled*

```{r los_meta, fig.width = 14, fig.height = 3, fig.align = "left"}
los_meta_dat <- contin_dat |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  relocate(drug_recode_abbr, .after = arm_id) |>
  rename(arm = drug_recode_abbr) |>
  filter(refid %in% los_tab$refid) |> 
  select(refid, study, design_f_lab, arm, arm_n, los_m, los_sd, los_med, los_rl, los_ru, los_iqrl, los_iqru, los_95l, los_95u) |> 
  rename_with(~ str_remove(.x, "los_")) |> 
  select(!matches("95"))

los_dex_meta_dat <- los_meta_dat |> 
  filter(arm %in% c("Dex", "Plac", "None")) |> 
  filter(str_detect(design_f_lab, "Rand")) |> 
  mutate(arm = fct_drop(fct_collapse(arm, Plac = c("Plac", "None")))) |> 
  group_by(study) |> 
  filter(max(n()) > 1) |> 
  filter(!n_distinct(arm) == 1) |> 
  ungroup() |> 
  pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  arrange(year) 

# One RCT
# los_ket_meta_dat <- los_meta_dat |> 
#   filter(arm %in% c("Ket", "Plac", "None")) |> 
#   filter(str_detect(design_f_lab, "Rand")) |> 
#   mutate(arm = fct_drop(fct_collapse(arm, Plac = c("Plac", "None")))) |> 
#   group_by(study) |> 
#   filter(max(n()) > 1) |> 
#   filter(!n_distinct(arm) == 1) |> 
#   ungroup() |> 
#   pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
#   mutate(year = str_extract(study, "\\d{4}")) |> 
#   arrange(year) 

los_mel_ram_meta_dat <- los_meta_dat |> 
  filter(arm %in% c("Mel", "Ram", "Plac", "None")) |> 
  mutate(arm = fct_drop(fct_collapse(arm, Plac = c("Plac", "None"))),
         arm = fct_collapse(arm, MelRam = c("Mel", "Ram"))) |> 
  filter(str_detect(design_f_lab, "Rand")) |> 
  group_by(study) |> 
  filter(max(n()) > 1) |> 
  filter(!n_distinct(arm) == 1) |> 
  ungroup() |> 
  pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  arrange(year)

```

#### Dexmedetomidine

<font size = 4> `r figure_ref()` Mean difference in lengths of stay (dexmedetomidine versus placebo; randomized clinical trials). </font>

```{r los_dex_meta, fig.width = 14, fig.height = 5.5, fig.align = "left"}
los_dex_meta <- metacont(
  n.e = arm_n_Dex, 
  n.c = arm_n_Plac,
  common =  TRUE,
  mean.e = m_Dex,
  sd.e = sd_Dex,
  median.e = med_Dex,
  q1.e = iqrl_Dex,
  q3.e = iqru_Dex,
  min.e = rl_Dex,
  max.e = ru_Dex,
  mean.c = m_Plac,
  sd.c = sd_Plac,
  median.c = med_Plac,
  q1.c = iqrl_Plac,
  q3.c = iqru_Plac,
  min.c = rl_Plac,
  max.c = ru_Plac,
  data = los_dex_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  studlab = study
)

forest(los_dex_meta,
  weight.study = "random",
  common =  FALSE,
  label.e = "Dex     ",
  label.c = "Plac   ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  # digits.pval.Q = 2,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "right",
  print.pval.Q = FALSE,
  # sortvar = -TE,
  xlim = c(-5, 5),
  # at = c(-80, -60, -40, -20, 0, 20, 40),
  rightcols = c("effect", "ci", "surgs_single", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("MD ", "(95% CI)   ", "Procedure", "D1", "D2", "D3", "D4", "D5", "All"),
  xlab = "Favors: Dex                                      Plac           ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4
)

```
<foot_mg> MD: mean difference; Dex: Dexmedetomidine; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/>
When the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, and/or range.  </foot_mg> 

#### Melatonin/Ramelteon

<font size = 4> `r figure_ref()` Mean difference in lengths of stay (melatonin or ramelteon versus placebo; randomized clinical trials). </font>

```{r los_mel_ram_meta, fig.width = 14, fig.height = 3.5, fig.align = "left"}
los_mel_ram_meta <- metacont(
  n.e = arm_n_MelRam, 
  n.c = arm_n_Plac,
  common =  TRUE,
  mean.e = m_MelRam,
  sd.e = sd_MelRam,
  median.e = med_MelRam,
  q1.e = iqrl_MelRam,
  q3.e = iqru_MelRam,
  min.e = rl_MelRam,
  max.e = ru_MelRam,
  mean.c = m_Plac,
  sd.c = sd_Plac,
  median.c = med_Plac,
  q1.c = iqrl_Plac,
  q3.c = iqru_Plac,
  min.c = rl_Plac,
  max.c = ru_Plac,
  data = los_mel_ram_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  studlab = study
)

forest(los_mel_ram_meta,
  weight.study = "random",
  common =  FALSE,
  label.e = "Mel/Ram",
  label.c = "Plac   ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  # digits.pval.Q = 2,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "right",
  print.pval.Q = FALSE,
  # sortvar = -TE,
  xlim = c(-5, 5),
  at = c(-5, -2.5, 0, 2.5, 5),
  rightcols = c("effect", "ci", "surgs_single", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("MD ", "(95% CI)   ", "Procedure", "D1", "D2", "D3", "D4", "D5", "All"),
  xlab = "Favors: Dex                                      Plac           ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4
)

```
<foot_mg> MD: mean difference; Mel: melatonin; Ram: ramelteon; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/>
When the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, and/or range.  </foot_mg> 

## **Mortality**

```{r mortality_data}
#| eval: true
mortality_dat <- dichot_dat |>
  filter(if_any(starts_with("mort"), ~ !is.na(.x))) |> 
  # filter(arm_n != mort_update_arm_n) |> 
  # select(refid, arm_n, mort_update_arm_n)
  mutate(
    # arm_n use mort_update_arm_n if different
    arm_n = ifelse(!is.na(mort_update_arm_n), mort_update_arm_n, arm_n)
  ) |> 
  select(refid, refid_c, arm_id, year, study, study_l, design_f_lab, arm_n, matches("_n|per") & starts_with("mort"), -mort_update_arm_n) |> 
  pivot_longer(
    cols = starts_with("mort"),
    names_to = "estimand",
    values_to = "estimate",
    values_drop_na = TRUE
  ) |>
  mutate(
    mort_period = str_remove(estimand, "_.*"),
    estimand = str_replace(estimand, ".*_(.*)$", "\\1")
  ) |>
  pivot_wider(
    names_from = estimand,
    values_from = estimate
  ) |>
  mutate(
    mort_period = case_when(
      str_detect(mort_period, "hosp") ~ "Hospital",
      str_detect(mort_period, "mort30") ~ "30-day",
      str_detect(mort_period, "mort90") ~ "90-day",
      str_detect(mort_period, "mort1") ~ "1-year"
    ), 
    per = per/100
  ) |>
  rename(mort_n = n, mort_per_rep = per) |>
  arrange(refid_c, arm_id) |>
  mutate(
    ref_arm_n = arm_n,
    ref_mort_n = mort_n
  ) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() > 1, NA, ref_mort_n)
  ) |>
  fill(ref_arm_n, ref_mort_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() == 1, NA, ref_mort_n)
  ) |>
  ungroup() |> 
  left_join(study_char_dat |> select(refid, surgs_single_f), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(asa_combine |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |> 
  mutate(mort_percent = mort_n/arm_n,
         mort_period = factor(mort_period, levels = c("Hospital", "30-day", "90-day", "1-year"))) |>
  select(refid, refid_c, arm_id, year, study, study_l, arm_n, drug_recode_abbr, asa_ps_incl, age_table, design_f_lab, mort_n, mort_percent, ref_mort_n, ref_arm_n, mort_period, mort_per_rep, surgs_single_f)

dex_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Dex")
ket_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Ket")
mel_ram_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Mel|Ram")

# skim(mortality_dat)
```

### Dexmedetomidine

<font size = 4> `r table_ref()` Reported in-hospital, 30-day, 90-day, and 1-year mortality in dexmedetomidine randomized clinical trials by comparator and surgical category.</font>

```{r mortality_dex_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  filter(refid %in% dex_mort_refid) |> 
  group_by(mort_period, study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(mort_percent * 100, "#A93226"),
      str_detect(drug_recode_abbr, "Ulin|MS|Prop") ~ bar_prop(mort_percent * 100, "#104E8B"),
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "—"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  rename(drug_recode = drug_recode_abbr) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  arrange(year, refid_c, arm_id) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day")) |> 
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode = "Drug",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_recode, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, drug_recode, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  # tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Ulin|MS|Prop"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Dex"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    drug_recode ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Dex: Dexmedetomidine; Ulin: Ulinastatin; MS: morphine sulfate; Plac; placebo.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table))) |> 
  tab_footnote("Different lengths of follow-up from the same trial.", locations = cells_body(columns = study_l, rows = study %in% c("Su 2016", "Zhang 2019b"))) 

```

```{r mortality_dex_hosp_30d_meta}
#| eval: true
mortality_dex_dat <- mortality_dat |>
  filter(refid %in% dex_mort_refid, mort_period %in% c("Hospital", "30-day")) |>
  rename(arm = drug_recode_abbr) |>
  filter(!str_detect(arm, "Ulin")) |>
  # exclude Qu 2023 hospital; retain 30-day
  filter(!(study == "Qu 2023" & mort_period == "Hospital")) |> 
  # to include hospital and 30-day if reporte
  # group_by(study) |>
  # mutate(
  #   study = case_when(
  #     n() == 4 & mort_period == "Hospital" ~ paste(study, "Hosp"),
  #     n() == 4 & mort_period == "30-day" ~ paste(study, "30-d"),
  #     .default = study
  #   )
  # ) |>
  # ungroup() |>
  select(refid, study, arm, mort_n, arm_n, mort_period)

trts_mort_dex <- levels(fct_drop(mortality_dex_dat$arm))

pairwise_mort_dex_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_dex_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

mortality_mel_ram_dat <- mortality_dat |>
  filter(refid %in% mel_ram_mort_refid, mort_period %in% c("Hospital", "30-day"), str_detect(design_f_lab, "Rand")) |>
  rename(arm = drug_recode_abbr) |>
  # group_by(study) |>
  # mutate(
  #   study = case_when(
  #     n() == 4 & mort_period == "Hospital" ~ paste(study, "Hosp"),
  #     n() == 4 & mort_period == "30-day" ~ paste(study, "30-d"),
  #     .default = study
  #   )
  # ) |>
  # ungroup() |>
  mutate(arm = fct_collapse(arm, "Mel/Ram" = c("Mel", "Ram"), "Plac/None" = c("Plac", "None"))) |> 
  select(refid, study, arm, mort_n, arm_n, mort_period)

trts_mort_mel_ram <- levels(fct_drop(mortality_mel_ram_dat$arm))

pairwise_mort_mel_ram_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_mel_ram_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

## nma ------------------------------------------------ (2023-04-11 16:36) @----
# dex_plac_refid <- pairwise_dat |> 
#   filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex")) |> 
#   pull(refid)
# 
# mort_dex_nma <- netmeta(
#   pairwise_mort_dex_dat,
#   random = FALSE,
#   prediction = FALSE,
#   seq = trts_mort_dex,
#   sm = "RR",
#   reference.group = "Plac"
# )
# 
# forest(mort_dex_nma, pscale = 100)
# netsplit(mort_dex_nma, order = trts_mort_dex) %>%
#   forest(.,
#     show = "all",
#     xlab = "Risk Difference",
#     xlim = c(-4, 4),
#     pscale = 100,
#     # leftcols = c("studlab", "k"),
#     rightlabs = c("RD", "(95% CI)")
#   )
```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
### <font size = 4> `r figure_ref()` Summary risk of bias from dexmedetomidine randomized clinical trials reporting mortality over any length of follow-up. </font>

```{r rob2_summary_dex_mort, fig.height = 3, out.width = "60%"}
rob_summary_fun(dex_mort_refid)
```
:::

### Ketamine

No studies

<br/>

### Melatonin/Ramelteon

<font size = 4> `r table_ref()` Reported in-hospital, 30-day, 90-day, and 1-year mortality in melatonin and ramelteon studies by comparator and surgical category.</font>

```{r mortality_mel_ram_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  filter(refid %in% mel_ram_mort_refid) |> 
  group_by(study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(mort_percent * 100, "#A93226"),
      str_detect(drug_recode_abbr, "Ulin|MS|Prop") ~ bar_prop(mort_percent * 100, "#104E8B"),
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "—"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  rename(drug_recode = drug_recode_abbr) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day")) |> 
  # row_group_order(groups = c("Hospital", "30 Day", "90 Day", "1 Year")) |> 
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode = "Drug",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_recode, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, drug_recode, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Ulin|MS|Prop"))) |>
  # tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Dex"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    drug_recode ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Ram: ramelteon; Mel: melatonin; Plac; placebo.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table))) |> 
  tab_footnote("Randomized clinical trial.", locations = cells_body(columns = study_l, rows = !str_detect(study_l, "Hokuto") & !is.na(study_l))) |> 
  tab_footnote("Before-after design.", locations = cells_body(columns = study_l, rows = study %in% c("Hokuto 2020")))
```

### *Pooled*

#### Dexmedetomidine

<font size = 4> `r figure_ref()` Risk ratio for hospital mortality -- dexmedetomidine compared with placebo or no intervention (randomized clinical trials). </font>

```{r dex_mort_meta, fig.dim = c(14, 7), fig.align = "center"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
dex_mort_meta_dat <- pairwise_mort_dex_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(treat1 == "Plac" & treat2 == "Dex") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid)

# total_meta(dex_mort_meta_dat)
# refid_meta_fun(dex_mort_meta_dat)

dex_plac_mort_meta <- metabin(event2, n2, event1, n1,
  data = dex_mort_meta_dat,
  studlab = study,
  # cluster = refid,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  subgroup = mort_period
)

# small study effects; here to have result of Harbord test
temp_meta <- dex_plac_mort_meta
temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# summary(dex_plac_meta)
forest(dex_plac_mort_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Dex     ",
  label.c = "Plac     ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 2, 
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
)

```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <br/> `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")` </foot_mg><br/>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects --- funnel plot. </font>

```{r dex_plac_meta_funnel_limit_mort, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
dex_plac_mort_meta <- update(dex_plac_mort_meta, sm = "OR", subgroup = NULL)
harbord <- metabias(dex_plac_mort_meta, method.bias = "Harbord")$pval
# temp_limit_meta <- limitmeta(dex_plac_mort_meta)
# limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")
par(mar = c(4, 4, 2, 1))
par(bty = "n", xaxt = "s", yaxt = "s")

funnel(dex_plac_mort_meta,
  ylim = c(2.0, 0.0), xlim = c(0.05, 20), 
  pch = 20, 
  contour = c(0.9, 0.95, 0.99), 
  col.contour = limit_colors, 
  studlab = TRUE, 
  pos.studlab = 4,
  fs.smlab = 6, 
  ff.smlab = "italic"
)

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
# text(0.3, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

:::

#### Melatonin/Ramelteon

<font size = 4> `r figure_ref()` Risk ratio for hospital mortality -- melatonin or ramelteon compared with placebo or no intervention (randomized clinical trials). </font>

```{r mel_ram_mort_meta, fig.dim = c(14, 4), fig.align = "center"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
mel_ram_mort_meta_dat <- pairwise_mort_mel_ram_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(treat1 == "Plac/None" & treat2 == "Mel/Ram") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid)

# total_meta(mel_ram_mort_meta_dat)
# refid_meta_fun(mel_ram_mort_meta_dat)

mel_ram_plac_mort_meta <- metabin(event2, n2, event1, n1,
  data = mel_ram_mort_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  subgroup = mort_period
)

# summary(mel_ram_plac_meta)
forest(mel_ram_plac_mort_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Mel/Ram     ",
  label.c = "Plac/None ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits.TE = 1,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 1000,
  digits = 2, 
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  xlab = "Favors: Mel/Ram              Placebo/None",
  addrows.below.overall = 4
)
```

<foot_mg> Mel: melatonin; Ram: ramelteon; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . </foot_mg> <a id="figure-4"></a>

<!-- ## Study Characteristics -->

## **Risk of Bias**

### Randomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for randomized clinical trials. </font>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_dat |>
  filter(!is.na(Study) & refid %in% kq6_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind", weighted = FALSE)
```

<font size = 4> `r figure_ref()` Risk of bias assessments for randomized clinical trials. </font>

```{r rob_overall_study, out.width = "55%", fig.height = 16}
rob_traffic_light(rob_temp_dat, psize = 4, tool = "ROB2", colour = "colourblind")
```

### Nonrandomized

<font size = 4> `r figure_ref()` Summary risk of bias assessment for nonrandomized studies. </font>

```{r nrsi_summary_overall, fig.height = 3, out.width = "60%"}
robinsi_temp_dat <- robinsi_dat |>
  filter(!is.na(Study) & refid %in% kq6_refid) |> 
  select(-refid)

rob_summary(robinsi_temp_dat, tool = "ROBINS-I", colour = "colourblind", weighted = FALSE)
```

<font size = 4> `r figure_ref()` Risk of bias assessments for nonrandomized studies. </font>

```{r nrsi_overall_study, out.width = "55%", fig.height = 3.3}
rob_traffic_light(robinsi_temp_dat, psize = 4, tool = "ROBINS-I", colour = "colourblind")
```

## **References** {#references}
