---
title: "Delirium Prophylaxis"
editor: source
toc-title: "**Delirium Prophylaxis**"
toc-location: "left"
toc-depth: 4
toc_float: 
  collapsed: true
tbl-cap-location: "top"
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq6.bib"
csl: jama.csl
link-citations: false
nocite: '@*'
---

::: {.callout-note collapse="true"}
## Recent upates

| Date       | Modification                                                                                                                                                                    |
|:-----------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| 2023-10-24 | Updated to most current included studies. Removed risk of bias tallies from forest plots where not pertinent to outcome. Added physical function table.                         |
| 2023-10-26 | Added risk differences for hypotension and bradycardia. For other complications and mortality changed effect measure to risk difference owing to infrequent events (now consistent with tables). |
:::

## Key Question

Among older patients undergoing surgery and anesthesia, does dexmedetomidine, ketamine, ramelteon, or melatonin administered during the perioperative period decrease the risk of postoperative delirium or other adverse cognitive outcomes?

```{r read_data}
#| include: false
source("code/load_data.R")
settings.meta(CIbracket = "(")
conflicts_prefer(dplyr::lag)
# NOTE: keeping Gao 2021 until verifying a duplicate of 1819
kq6_refid <- kq6_refid[!kq6_refid %in% c(13734, 13630, 2314, 17151)] # Fan 2017b rhythim, Gao 2021 5269 ? duplicate of Gao 2020 1819, Xuan 2016 "Eligible patients were more than 60 years old with joint replacement surgery in ICU."; Sun 2019 2314 retracted; Xu 2022 17151 case control study no informative data.

study_char_dat <- data_kq(study_char_dat, kq6_refid)
study_arm_dat <- data_kq(study_arm_dat, kq6_refid) 
contin_dat <- data_kq(contin_dat, kq6_refid) 
likert_dat <- data_kq(likert_dat, kq6_refid) 
# VARIABLE: delirium_inc_prop <lgl> neurocog_inc_prop <lgl> [dichot_dat] reported incidence proportion
# VARIABLE: delirium_day_max <num>  neurocog_day_max <num>  [dichot_dat] max of daily 

dichot_dat <- data_kq(dichot_dat, kq6_refid) |>
  mutate(
    delirium_inc_prop = !is.na(delitotal_n), 
    delirium_day_max = pmax(delirium_n1, delirium_n2, delirium_n3, delilast_n, na.rm = TRUE),
    delitotal_n = ifelse(is.na(delitotal_n), delirium_day_max, delitotal_n),
  ) |> 
  relocate(delirium_day_max, .after = delitotal_n) 

```

```{r delirium_refids_check}
#| eval = FALSE
# any of delirium_dichot_refid, delirium_contin_refid, delirium_likert_refid 
kq6_refid %in% delirium_refid
kq6_refid %in% cogfunc_refid
kq6_refid[!kq6_refid %in% c(delirium_refid, cogfunc_refid)]
```

## Outcome Importance

<caption_mg> `r table_ref()` Rankings for the 5 most important outcomes (11 respondents). </caption_mg>

```{r outcome_priority}
#| include: true
#| eval: true
# note also in appendix
outcome_dat <- rankings("KQ6")
outcome_tab(outcome_dat, 11)
```

## Outcomes Reported

<caption_mg> `r table_ref()` Dichotomous or count outcomes. </caption_mg>

```{r dichot_outcome_freq}
dichot_freq_fun(dichot_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

<caption_mg> `r table_ref()` Continuous outcomes. </caption_mg>

```{r cont_outcome_freq}
contin_freq_fun(contin_dat)
```

<caption_mg> `r table_ref()` Likert or ordinal outcomes. </caption_mg>

```{r likert_outcome_freq}
likert_freq_fun(likert_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; POCD: postoperative neurocognitive disorder; QoR: quality of recovery; ")
```

## **Included Studies**

<caption_mg> `r table_ref()` Number of studies by design. </caption_mg>

```{r studies_design}
study_char_dat |>
  filter(refid %in% kq6_refid) |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(style = list(cell_fill(color = "#E4F3FE"), cell_text(weight = "bold"), cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))), locations = cells_body(rows = design_f_lab == "Total")) |> 
  tab_style(style = list(cell_text(align = "left")), locations = cells_body(columns = design_f_lab)
    ) |> 
  tab_footnote("Studies with multiple publications counted only once (applied to 1 trial with 2 publications).")
```

### Design, centers, country, and surgery

<caption_mg> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </caption_mg>

```{r drugs_by_arm}
#| message: false
# CODE: * drugs & recode drugs/comparators so that usable; "other" category recoded to comparator 
# DATA: drugs_dat <- study_arm_dat include drug arm data; adds kq5/6 arms

## drugs; from kq6, add kq5 arm drugs ----------------- (2023-01-16 13:46) @----
# drugs for kq5 studies; needed to fill in "missings" for kq6 arms coded as kq5 arms
kq5_drug_by_arm <- read_csv("data/kq56_drug_by_arm.csv") |>
  rename(drug = drug_f) |> # arm drug
  mutate(drug = as.character(drug)) |> 
  select(refid, arm_id, drug, control_desc)

drugs_dat <- study_arm_dat |>
  select(refid, design_f_lab, study, study_l, study_l_w_linked, study_id, arm_id, arm_n, arm_kq6_proph_meds, kq6_control_desc:kq6_notes, multiple_kq) |>
  rename_with(~ str_replace(., "kq6_", ""), everything()) |>
  rename_with(~ str_replace(., "dex_", "dexmed_"), everything()) |>
  mutate(
    dexmed = ifelse(refid == 13171, NA, dexmed),
    drug = case_when(
      !is.na(dexmed) ~ dexmed,
      !is.na(ketamine) ~ ketamine,
      !is.na(melatonin) ~ melatonin,
      !is.na(ramelteon) ~ ramelteon,
      !is.na(ulinastatin) ~ ulinastatin, # all missing
      !is.na(none) ~ none
    ),
    drug = str_replace(drug, "kq6_", ""),
    drug = firstup(drug)
  ) |>
  relocate(drug, .after = arm_n) |>
  # update drug and control description for "kq5" arms
  left_join(kq5_drug_by_arm, by = c("refid", "arm_id")) |>
  mutate(
    drug = coalesce(drug.x, drug.y),
    control_desc = coalesce(control_desc.x, control_desc.y),
    control_desc = firstup(control_desc),
    arm_proph_meds = ifelse(is.na(arm_proph_meds), "kq5_arm", arm_proph_meds),
  ) |>
  select(-matches("\\.x|\\.y")) |>
  mutate(
  # fix for 13171 Mahrose 2021 Melatonin/Dex vs Dex 
  # VARIABLE: drug_f main not combination
    drug = ifelse(refid == 13171 & arm_id == 1, "None", drug),
    drug_f = fct(drug, levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin", "Midazolam", "Oxazepam", "Haloperidol", "None", "Placebo", "Other")),
    drug_f = fct_collapse(drug_f, "Control" = c("None", "Placebo", "Other"))
  ) |>
  group_by(refid) |>
  mutate(
    drug_study = case_when( # study drug
      if_any(drug_f, ~ . == "Dexmedetomidine") ~ "Dexmedetomidine",
      if_any(drug_f, ~ . == "Ketamine")        ~ "Ketamine",
      if_any(drug_f, ~ . == "Melatonin")       ~ "Melatonin",
      if_any(drug_f, ~ . == "Ramelteon")       ~ "Ramelteon",
      if_any(drug_f, ~ . == "Ulinastatin")     ~ "Ulinastatin"
      # TRUE ~ "MISSING" # NA_character_ for verification
    ),
    drug_study = fct(drug_study, levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin")),
    drug_recode = case_when(
      str_detect(other_spec, "Midazolam and propofol") ~ "Midazolam/propofol",
      str_detect(other_spec, "Midazolam and sevoflurane") ~ "Midazolam/sevoflurane",
      str_detect(other_spec, "[Mm]idazolam") ~ "Midazolam",
      str_detect(other_spec, "[Ss]ufentanil") ~ "Sufentanil",
      str_detect(other_spec, "[Pp]ropofol") ~ "Propofol",
      str_detect(other_spec, "[Mm]orphine") ~ "Morphine",
      str_detect(other_spec, "[Pp]regabalin") ~ "Pregabalin",
      # str_detect(other_spec, "[Rr]hythim") ~ "Rhythim",
      .default = drug
    ),
    drug_recode = ifelse(refid == 2748  & arm_id == 4, "Dexmedetomidine/Pregabalin",  drug_recode),
    drug_recode = ifelse(refid == 13406 & arm_id == 3, "Dexmedetomidine/Ulinastatin", drug_recode),
    drug_recode = ifelse(refid == 13393 & arm_id == 1, "Dexmedetomidine/Ulinastatin", drug_recode),
    drug_recode = ifelse(refid == 13171 & arm_id == 2, "Melatonin/Dexmedetomidine",   drug_recode),
    drug_recode = ifelse(refid == 13171 & arm_id == 1, "Dexmedetomidine",             drug_recode),
    drug_recode = fct(drug_recode, levels = c("Dexmedetomidine", "Dexmedetomidine/Pregabalin", "Dexmedetomidine/Ulinastatin", "Ketamine", "Melatonin", "Melatonin/Dexmedetomidine","Ramelteon", "Ulinastatin", "Haloperidol", "Midazolam", "Oxazepam", "Midazolam/propofol", "Midazolam/sevoflurane", "Morphine", "Pregabalin", "Propofol", "Sufentanil", "Placebo", "None")),
    drug_recode_abbr = fct_recode(drug_recode, Dex = "Dexmedetomidine", "Dex/Preg" = "Dexmedetomidine/Pregabalin", "Dex/Ulin" = "Dexmedetomidine/Ulinastatin", Ket = "Ketamine", Mel = "Melatonin", "Mel/Dex" = "Melatonin/Dexmedetomidine", Ram = "Ramelteon", Ulin = "Ulinastatin", Hal = "Haloperidol", Mid = "Midazolam", Oxaz = "Oxazepam", "Mid/Prop" = "Midazolam/propofol", "Mid/Sevo" = "Midazolam/sevoflurane", MS = "Morphine", Preg = "Pregabalin", Prop = "Propofol", Suf = "Sufentanil", Plac = "Placebo"),
  ) |>
  ungroup() |>
  relocate(c(drug, drug_f, drug_recode, drug_recode_abbr, drug_study), .after = arm_id) |>
  relocate(c(other_spec, interv_desc, control_desc), .after = last_col()) |>
  arrange(refid, drug_study) |>
  fill(drug_study) |>
  arrange(refid, arm_id) 

```

```{r drugs_table}
#| eval: false
# drug_recode - includes combination; drug_recode_abbr - includes combination abbreviated
drugs_dat |>
  filter(str_detect(design_f_lab, "Rand")) |> 
    labelled::set_variable_labels(
    drug_recode = "Drug(s)",
  ) |> 
  select(drug_recode) |>
  tbl_summary(
    # label = list(drug_recode ~ "Drug(s)")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |>
  gt_theme_mg()
  
# debug
# temp <- drugs_dat |> select(refid, study, contains("drug"), other_spec, contains("_desc"))
# drugs_dat |> tabyl(drug)
# drugs_dat |> filter(drug == "Ulinastatin")
# drugs_dat |> filter(is.na(drug))
# drugs_dat |> tabyl(drug_recode)
# drugs_dat |> tabyl(drug_recode_abbr)
# writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")
# writexl::write_xlsx(temp, "/Users/mgrant/Desktop/arm_comparator.xlsx")
```

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |> 
  select(refid, starts_with("design"), study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi, surgs) |>
  left_join(drugs_dat |> group_by(refid) |> slice(1) |> ungroup() |> select(refid, drug_study), by = "refid") |>
  # create new factor for table as gt not arranging properly
  mutate(
    drug_design = fct(paste0(drug_study, " - ", design_f_lab),
      levels = c(
        "Dexmedetomidine - Randomized Clinical Trial",
        "Dexmedetomidine - Nonrandomized Trial",
        "Dexmedetomidine - Prospective Cohort",
        "Dexmedetomidine - Retrospective Cohort",
        "Dexmedetomidine - Case-Control",
        "Ketamine - Randomized Clinical Trial",
        "Ketamine - Prospective Cohort",
        "Ketamine - Retrospective Cohort",
        "Melatonin - Randomized Clinical Trial",
        "Ramelteon - Randomized Clinical Trial",
        "Ramelteon - Before-After/Time Series",
        "Ulinastatin - Randomized Clinical Trial"
      )
    )
  ) |>
  arrange(drug_design, surgs, study_l) |>
  select(refid, study_l, centers, n_enroll, country, drug_design, surgs, non_vh_hdi)

included_dat |>
  group_by(drug_design) |>
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_width(
    refid    ~ px(60),
    study_l  ~ px(235),
    centers  ~ px(60),
    n_enroll ~ px(80),
    country  ~ px(100),
    surgs    ~ px(180)
  ) |> 
  cols_hide(non_vh_hdi) |>
  fmt_markdown(columns = c(study_l)) |> 
  fmt_number(columns = c(n_enroll, centers), use_seps = TRUE, drop_trailing_zeros = TRUE) |>
  # opt_horizontal_padding(scale = 2) |>
  gt_theme_mg() |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c("refid"))) |> 
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote(footnote = md("Various indicates 4 or more different types of surgery."), locations = cells_column_labels(columns = surgs)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), locations = cells_column_labels(columns = country)) |>
  tab_footnote(footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."), locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))) |>
  tab_footnote(footnote = "Studies examining drugs not directly relevant to recommendations but potentially to the evidence space (eg, a connected network including indirect evidence) are included here.", locations = cells_column_labels(columns = c(study_l))) |> 
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular; ENT: ear nose and throat.")

```

### Country Summary

<caption_mg> `r table_ref()` Summary of randomized clinical trials according to country. </caption_mg>

```{r country}
study_char_dat |>
  filter(design == "rct") |>
  mutate(linked_references = ifelse(is.na(linked_references), refid, linked_references)) |> 
  slice(1, .by = linked_references) |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
  gt_theme_mg()

```

## **Interventions & Comparators**

### Dexmedetomidine

<caption_mg> `r table_ref()` Selected characteristics, comparators, and dosing in dexmedetomidine trials. </caption_mg>

```{r dex_compare}
dex_refid <- drugs_dat |> 
  filter(drug == "Dexmedetomidine") |> 
  pull(refid)

timing <- drugs_dat |> 
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  select(refid, arm_id, pre:unspec) |> 
  mutate(
    # across(pre:unspec, ~ notna_to_x(.x, "▂")),
    across(pre:postop, ~ ifelse(!is.na(.x), "\U2586", "\U2581")),
    timing_all = paste0(pre, induct, intra, postop),
    timing_all = ifelse(timing_all == "▁▁▁▁", NA, timing_all),
    timing_all = ifelse(!is.na(unspec), "Unspecified", timing_all)
    ) |> 
  select(-c(pre:postop))

dex_by_arm <- drugs_dat |>
  filter(refid %in% dex_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(refid:arm_proph_meds, matches("^proph_|dexmed"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("dexmed_", "", .x, fixed = TRUE)) |>
  select(-c(pre:unspec)) |> # using timing_all instead; no unspecified as of 2023-10-18
  mutate(
    maintain_range = ifelse(!is.na(maintain_low + maintain_up), paste0(maintain, " (", maintain_low, "–", maintain_up, ")"), maintain),
    maintain_range = str_replace(maintain_range, "NA ", ""),
    loading = ifelse(loading == "0", "", loading),
    loading = ifelse(loading == "1", "1.0", loading),
    # loading = ifelse(loading == "1000", "1.0", loading),
    loading = str_replace(loading, "-1$", "-1.0")
  ) |>
  arrange(year, refid, desc(drug)) |>
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(timing, by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  mutate(dex_groups = paste0(surgs_single_f, " - ", design_f_lab))

# manually order dex_groups
# dex_by_arm |> 
#   group_by(refid) |> 
#   slice(1) |> 
#   ungroup() |> 
#   tabyl(dex_groups) |> 
#   mutate(design = str_extract(dex_groups, "-.*$")) |> 
#   arrange(desc(design), desc(n)) |> 
#   pull(dex_groups) |> 
#   glue_collapse(sep = "\n")

dex_group_levels <- c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "GI/Abd - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "Oralmax - Randomized Clinical Trial", "Urol - Randomized Clinical Trial", "Headneck - Randomized Clinical Trial", "Ophtho - Randomized Clinical Trial", "GI/Abd - Nonrandomized Trial", "Thoracic - Nonrandomized Trial", "Other - Prospective Cohort", "Urol - Retrospective Cohort")

dex_by_arm <- dex_by_arm |> 
  mutate(  
  dex_groups = factor(dex_groups, levels = dex_group_levels)) |> 
  select(refid, study, year, study_l, arm_n, drug_recode_abbr, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, loading, maintain_range, postdose, timing_all, design_f_lab, dex_groups, surgs_single_f)

rm(dex_group_levels)
```

```{r dex_table}
#| echo = FALSE
dex_by_arm |>
  arrange(dex_groups, year, study) |>
  group_by(study_l) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "\U2713", .x)),
    volatile_tab = ifelse(refid == 328 & row_number() %in% c(2, 3), "\U2713", volatile_tab),
    tiva_tab = ifelse(refid == 328 & row_number() == 4, "\U2713", tiva_tab)
  ) |>
  ungroup() |>
  group_by(dex_groups) |>
  gt(id = "one") |> 
  cols_hide(c(year, study, refid, design_f_lab, surgs_single_f)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = md("  PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    loading = "Load",
    maintain_range = md("Maint/hr"),
    postdose = md("Postop"),
    timing_all = "Timing",
    # drug_f = md("Comparator <br/> Detail")
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, timing_all)) |>
  tab_spanner(label = "Dexmedetomidine mcg/kg", columns = c(loading, maintain_range, postdose), level = 1) |>
  # tab_spanner(label = "Maintenance/hr", columns = c(loading, maintain_range, postdose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:sedation_only_tab)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(age_table, pre_mmse, loading:postdose))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(loading, maintain_range, postdose))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_recode_abbr, study_l, timing_all))) |>
  tab_style(style = cell_text(font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(volatile_tab, regional_tab, sedation_only_tab, timing_all))) |>
  tab_style(style = cell_text(size = px(8)), locations = cells_column_labels(columns = c(tiva_tab))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode_abbr:timing_all), rows = str_detect(drug_recode_abbr, "Dex"))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "—") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(30),
    tiva_tab ~ px(30),
    regional_tab ~ px(30),
    sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(90),
    loading ~ px(60),
    maintain_range ~ px(90),
    postdose ~ px(60),
    timing_all ~ px(85),
  ) |>
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  fmt_number(columns = c(postdose), drop_trailing_zeros = TRUE) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Oralmax: oral and maxillofacial; Ophtho; ophthalmologic; Urol: urologic; Dex: dexmedetomidine; Ulin: ulinastatin; Hal: haloperidol; Mid: midazolam; Mid/Prop: midazolam/propofol; Mid/Seve: midazolam/sevoflurane; Preg: pregabalin; Prop: propofol; Plac; placebo; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; Sed: sedation; MMSE: Mini-Mental State Exam.") |>
  tab_footnote("Maintenance range if reported in parentheses.", locations = cells_column_labels(columns = maintain_range)) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote(md("Given as a single dose."), locations = cells_body(columns = maintain_range, rows = maintain_range %in% c("100", "200", "400"))) |> 
  tab_footnote("Bars indicate adminstration times from left to right: preoperative, induction, intraoperative, and postoperative (includes PACU).", locations = cells_column_labels(columns = c(timing_all)))
```

### Ketamine

<caption_mg> `r table_ref()` Selected characteristics, comparators, and dosing in ketamine studies. </caption_mg>

```{r ket_compare}
#| eval: true
ket_refid <- drugs_dat |> 
  filter(drug == "Ketamine") |> 
  pull(refid)

ket_by_arm <- drugs_dat |>
  filter(refid %in% ket_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(study, refid:arm_proph_meds, matches("^proph_|keta"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("ketamine_", "", .x, fixed = TRUE)) |>
  # unite("time_admin", c(pre:unspec), sep = "|", na.rm = TRUE, remove = FALSE) |>
  mutate(
    # time_admin = str_remove_all(time_admin, "proph_med_"),
    # across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    # across(pre:unspec, ~ notna_to_x(.x, "\U2582")),
    drug = fct(drug, levels = c("Ketamine", "Haloperidol", "Placebo", "Other", "None")),
  ) |>
  left_join(timing, by = c("refid", "arm_id")) |>
  relocate(timing_all, .after = arm_n) |>
  # dosing
  arrange(year, refid, desc(drug)) |>
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
  mutate(ket_groups = paste0(surgs_single_f, " - ", design_f_lab))

# manually order ketamine groups
# ket_by_arm |> 
#   group_by(refid) |> 
#   slice(1) |> 
#   ungroup() |> 
#   tabyl(ket_groups) |> 
#   mutate(design = str_extract(ket_groups, "-.*$")) |> 
#   arrange(desc(design), desc(n)) |> 
#   pull(ket_groups) |> 
#   glue_collapse(sep = "\n")

ket_group_levels <- c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "GI/Abd - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Ophtho - Randomized Clinical Trial", "Ortho - Prospective Cohort", "Spine - Prospective Cohort", "Other - Prospective Cohort", "Ortho - Retrospective Cohort", "Thoracic - Retrospective Cohort")

ket_by_arm <- ket_by_arm |> 
  mutate(  
  ket_groups = factor(ket_groups, levels = ket_group_levels)) |> 
  select(study, year, refid, study_l, arm_n, drug_recode_abbr, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose, dose_iv, timing_all, ket_groups)

rm(ket_group_levels)
```

```{r ket_table}
ket_by_arm |> 
  arrange(ket_groups, year, study) |>
  group_by(refid) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x))) |> 
  ungroup() |>
  group_by(ket_groups) |>
  gt(id = "one") |>
  cols_hide(c(year, study, refid, ket_groups, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = md("  PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("(mg/kg)"),
    dose_iv = md("  (mg/kg)"),
    timing_all ~ "Timing",
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, timing_all)) |>
  tab_spanner(label = "Maintenance", columns = c(dose_iv), level = 1) |>
  tab_spanner(label = "Dose", columns = c(dose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug_recode_abbr))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(dose, dose_iv))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(dose, dose_iv))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug_recode_abbr, timing_all))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(timing_all))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode_abbr:timing_all), rows = drug_recode_abbr == "Ket")) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "—") |>
  # tab_row_group(label = "numbered", rows = 1:10) |> 
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    # sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(100),
    dose ~ px(80),
    dose_iv ~ px(100),
    timing_all ~ px(85),
  ) |>
  fmt_number(columns = c(dose, dose_iv), drop_trailing_zeros = TRUE) |>
  tab_footnote(footnote = md("S-Ketamine."), locations = cells_body(columns = drug_recode_abbr, rows = refid %in% c(13184, 15285) & drug_recode_abbr == "Ket")) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Dex: dexmedetomidine; Hal: haloperidol; Suf: sufentanil; Prop: propofol; Plac; placebo; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote("Bars indicate adminstration times from left to right: preoperative, induction, intraoperative, and postoperative (includes PACU).", locations = cells_column_labels(columns = c(timing_all)))

```

### Melatonin/Ramelteon

```{r melatonin_ramelteon_compare}
#| eval: true
mel_ram_refid <- drugs_dat |> 
  filter(drug %in% c("Melatonin", "Ramelteon")) |> 
  pull(refid)

mel_ram_by_arm <- drugs_dat |>
  filter(refid %in% mel_ram_refid) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  select(refid:arm_proph_meds, matches("^proph_|mela|ramel"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  mutate(
    dose = coalesce(melatonin_dose, ramelteon_dose),
    days = coalesce(as.character(melatonin_days), as.character(ramelteon_numberdoses)),
    dose = ifelse(!is.na(dose), paste0(dose, "mg × ", days), dose),
   # to order drugs
   drug = fct(drug, levels = c("Melatonin", "Ramelteon", "Midazolam", "Oxazepam", "Placebo", "Other", "None"))
  ) |>
  left_join(timing |> select(-c(unspec)), by = c("refid", "arm_id")) |>
  mutate(
    timing_all = paste0(str_sub(timing_all, 1, 1), str_sub(timing_all, 4, 4)),
    timing_all = ifelse(timing_all == "NANA", NA_character_, timing_all),
  ) |> 
  relocate(timing_all, .after = arm_n) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
  mutate(mel_ram_groups = paste0(surgs_single_f, " - ", design_f_lab))
  
# manually order melatonin/ramelteon groups

mel_ram_group_levels <- c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "GI/Abd - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "GI/Abd - Before-After/Time Series", "Thoracic - Before-After/Time Series")

mel_ram_by_arm <- mel_ram_by_arm |>
  mutate(
    mel_ram_groups = factor(mel_ram_groups, levels = mel_ram_group_levels)) |>
  select(study, year, refid, study_l, arm_n, drug_recode_abbr, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose, timing_all, mel_ram_groups)

rm(mel_ram_group_levels)
```

<caption_mg> `r table_ref()` Selected characteristics, comparators, and dosing in melatonin and ramelteon studies. </caption_mg>

```{r melatonin_ramelteon_table}
mel_ram_by_arm |>
  arrange(mel_ram_groups, year, study) |>
  group_by(refid) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x))) |> 
  ungroup() |>
  group_by(mel_ram_groups) |>
  gt(id = "one") |>
  # row_group_order(groups = c("Melatonin - Randomized Clinical Trial", "Ramelteon - Randomized Clinical Trial", "Ramelteon - Before-After/Time Series")) |>
  cols_hide(c(study, year, refid, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = md("  PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("Dosing"),
    timing_all = "Timing"
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, timing_all)) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug_recode_abbr:timing_all))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug_recode_abbr, dose, timing_all))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:timing_all), rows = drug_recode_abbr %in% c("Mel", "Mel/Dex", "Ram"))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "—") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    sedation_only_tab ~ px(30),
    age_table ~ px(100),
    pre_mmse ~ px(100),
    dose ~ px(90),
    timing_all ~ px(85)
  ) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Mel: melatonin; Ram: ramelteon; Oxaz: oxazepam; Dex: dexmedetomidine; Mid: midazolam; Plac; placebo.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote("Bars indicate adminstration times from left to right: preoperative and postoperative.", locations = cells_column_labels(columns = c(timing_all)))

```

## **Delirium Incidence**

```{r delirium_meta_data}
# VARIABLE: postop_only <lgl> from study arm only post-op administration [postop_only_dat]
postop_only_dat <- study_arm_dat |> 
  select(refid, study, proph_med_pre, proph_med_induct, proph_med_intra, proph_med_postop) |> 
  # missing preop, induction, intraop
  filter(if_all(c(proph_med_pre, proph_med_induct, proph_med_intra), ~ is.na(.x))) |> 
  # not missing postop
  filter(!is.na(proph_med_postop)) |> 
  mutate(postop_only = TRUE) |> 
  select(refid, postop_only)

postop_any_dat <- study_arm_dat |> 
  select(refid, study, proph_med_pre, proph_med_induct, proph_med_intra, proph_med_postop) |> 
  # missing preop, induction, intraop
  filter(!is.na(proph_med_postop)) |> 
  mutate(postop_any = TRUE) |> 
  select(refid, postop_any)

delirium_meta_dat <- dichot_dat |>
  filter(!is.na(delitotal_n)) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(postop_only_dat, by = "refid") |> 
  left_join(postop_any_dat, by = "refid") |> 
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |> 
  select(refid, refid_c, arm_id, year, study, design_f_lab, country, surg_f, postop_only, postop_any, arm, delitotal_n, arm_n, deli_update_arm_n, delitotal_perc, delirium_inc_prop) |>
  arrange(refid_c, arm_id) |>
  # collapse arms
  # group_by(refid) |>  filter(n() > 2) |>  ungroup() |> # verify collapsed arms; verified 2023-03-09
  mutate(
    arm_n = ifelse(!is.na(deli_update_arm_n), deli_update_arm_n, arm_n),
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    delitotal_n = case_when(
      study == "Lee 2018a" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), delitotal_n),
      study == "Avidan 2017" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Avidan 2017", c(2, 3), delitotal_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), delitotal_n), # collapses all doses
      .default = delitotal_n
    ),
    arm_n = case_when(
      study == "Lee 2018a"   & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), arm_n),
      study == "Avidan 2017" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Avidan 2017", c(2, 3), arm_n),
      study == "Zhao 2020"   & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), arm_n),
      .default = arm_n
    )
  ) |>
# TODO: He 2018 midazolam arm; keep for delirium incidence in kq56 file below
  filter(!(study == "He 2018" & arm_id == 2)) |>
  filter(!(study %in% c("Lee 2018a", "Avidan 2017") & arm_id == 3)) |>
  filter(!(study %in% c("Zhao 2020") & arm_id %in% c(3, 4))) |>
  filter(!(study %in% c("Lee 2018b") & arm_id %in% c(2, 4))) |> # remove pregabalin, pregabaline/dex arms
  filter(!(study %in% c("Hollinger 2021") & arm_id %in% c(2))) # remove haldol arm

## calculated vs reported percentages; 2023-04-08 ----- (2023-04-24 18:21) @----
# calculated vs reported percentages; verified 2023-04-08
# temp <- delirium_meta_dat |>
#   mutate(
#     calc_percent = delitotal_n / arm_n * 100,
#     diff = calc_percent - delitotal_perc
#   ) |>
#   select(refid, study, arm_id, arm, arm_n, delitotal_n, calc_percent, delitotal_perc, diff) |> 
#   # exclude collapsed arms
#   filter(!study %in% c("Lee 2018a", "Avidan 2017", "Zhao 2020")) |> 
#   filter(abs(diff) >= 0.05)
# 
# writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")
```

```{r delirium_meta_dat_kq56}
#| eval: false
# # TODO: Change He 2018 midazolam arm above; keep for delirium incidence in kq56 file
# combine with kq5 data saved 2023-10-27
delirium_meta_kq5_dat <- read_csv("data/delirium_meta_kq5_dat.csv") |> 
  rename(arm = arm_up) |> 
  select(refid, study, arm_id, arm, drug_up, year, design_f_lab, surg_f, delitotal_n, arm_n)

delirium_meta_kq6_dat <- delirium_meta_dat |> 
  filter(!refid %in% delirium_meta_kq5_dat$refid) |>
  mutate(drug_up = NA_character_) |>
  select(refid, study, arm_id, arm, drug_up, year, design_f_lab, surg_f, delitotal_n, arm_n)

delirium_combined <- bind_rows(delirium_meta_kq5_dat, delirium_meta_kq6_dat) |> 
  filter(str_detect(design_f_lab, "Randomized Clinical Trial")) |>
  mutate(
    drug_up = case_when(
      arm == "Prop" ~ "Propofol",
      arm == "Dex" ~ "Dexmedetomidine",
      arm == "none" ~ "Plac/None",
      arm == "placebo" ~ "Plac/None",
      arm == "Plac/None" ~ "Plac/None",
      arm == "Mel/Dex" ~ "Melatonin/Dexmedetomidine",
      arm == "Ram" ~ "Ramelteon",
      arm == "Mel" ~ "Melatonin",
      arm == "Ket" ~ "Ketamine",
      arm == "MS" ~ "Morphine Sulfate",
      .default = drug_up
    )
  )

# for appendix nma
write_csv(delirium_combined, "data/delirium_combined.csv", na = "")
```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Delirium incidence by surgical category across all treatment arms in randomized clinical trials. </caption_mg>

```{r delirium_incidence_fig, out.width = "70%", out.height = "40%", fig.align = "left"}
#| warning: false
par(mar = c(1, 1, 1, 1))
set.seed(1234)
# total to add
all_to_boxplot_dat <- delirium_meta_dat |>
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  mutate(deli_prop = delitotal_n / arm_n,
         surg_f = "Any") 

# placebo/none to add
plac_none_to_boxplot_dat <- delirium_meta_dat |>
  filter(arm == "Plac/None") |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  mutate(deli_prop = delitotal_n / arm_n,
         surg_f = "Plac/None") 

delirium_meta_dat |>
  # filter(arm == "Plac/None") |>
  filter(design_f_lab == "Randomized Clinical Trial") |>
  mutate(
    deli_prop = delitotal_n / arm_n,
  ) |>
  bind_rows(all_to_boxplot_dat) |>
  bind_rows(plac_none_to_boxplot_dat) |>
  mutate(
    surg_f = fct_rev(factor(surg_f, levels = c("Ortho", "Cardiac", "GI/Abd", "Thoracic", "Oralmax", "Spine", "Various", "Any", "Plac/None")))
  ) |>
  ggplot(aes(deli_prop, surg_f)) +
  geom_boxplot(width = 0.2, outlier.size = 1.3) +
  geom_jitter(aes(color = arm)) + # geom_point(aes(color = arm)) 
  scale_colour_manual(values = c("#e41a1c", "#8B0000", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#D4AC0D", "#a65628", "#946F33", "#273746")) +
  labs(y = "", x = "Incidence Proportion") +
  scale_x_continuous(limits = c(0, 1), labels = scales::percent) +
  theme(
    axis.text.x = element_text(size = 11),
    axis.text.y = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.position = "right",
    legend.title = element_blank()
  )

```

<foot_mg>Dex: dexmedetomidine; Ket: ketamine; Mel: melatonin; Ram: ramelteon; Oxaz: oxazepam; MS: morphine sulfate; Prop: propofol; Plac/None: placebo or no active comparator. <br/> Note that the "Any" and "Plac/None" box plots are not mutually exclusive. </foot_mg>
:::

### Dexmedetomidine

<caption_mg> `r table_ref()` Delirium incidence and ascertainment during hospitalization in trials of dexmedetomidine. </caption_mg>

```{r delirium_total_dex_tab}
# CODE: delirium incidence dexmedetomidine
delirium_total_tab <- delirium_total_tab_fun(dex_refid) |> 
  left_join(dex_by_arm |> select(refid, dex_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = dex_groups) |> 
  mutate(delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time))

refid_max_of_days <- delirium_total_tab |> 
  filter(delitotal_time == "Note") |> 
  mutate(refid = as.numeric(refid)) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)
  
```

```{r delirium_total_dex_gt}
delirium_total_gt_fun("Dex") |>
  tab_footnote("RR: risk ratio; Dex: dexmedetomidine; Mid: midazolam; Prop: propofol; MS: morphine sulfate; Preg: pregabalin; Plac: placebo; DSM: Diagnostic and Statistical Manual of Mental Disorders; ICDSC: Intensive Care Delirium Screening Checklist; Psych: psychiatrist interview; NS: not specified.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |>
  tab_footnote("Tool reported in the `Chinese Expert Consensus on the Prevention and Treatment of Postoperative Delirium in Elderly Patients.'", locations = cells_body(columns = scale_delirium, rows = scale_delirium == "Note")) |> 
  tab_footnote("Postoperative dexmedetomidine only.", locations = cells_body(columns = rr_ci, rows = refid %in% postop_only_dat$refid & rr_ci != "—")) |> 
  tab_footnote("Reported only daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = n_percent, rows = refid %in% refid_max_of_days), placement = "right") |> 
  tab_footnote("Primary outcome was delirium on postoperative day 1 — OR 0.32 (95% CI, 0.10–0.83)", locations = cells_body(columns = study_l, rows = str_detect(study_l, "Qu 2023"))) 
  
rm(refid_max_of_days)
```

### Ketamine

<caption_mg> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in ketamine studies. </caption_mg>

```{r delirium_total_ket_tab}
# CODE: delirium incidence ketamine
delirium_total_tab <- delirium_total_tab_fun(ket_refid) |> 
  left_join(ket_by_arm |> select(refid, ket_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = ket_groups)
```

```{r delirium_total_ket_gt}
delirium_total_gt_ket <- delirium_total_gt_fun("Ket")
# tab_info(delirium_total_gt_ket)
delirium_total_gt_ket |>
  tab_footnote("RR: risk ratio; Ket: ketamine; Plac: placebo; Prop: propofol; Hal: haloperidol; ICDSC: Intensive Care Delirium Screening Checklist;  CAM: Confusion Assessment Method.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence assessed. Stay indicates duration of hospital stay.", locations = cells_column_labels(columns = delitotal_time))
```

### Melatonin/Ramelteon

<caption_mg> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in melatonin and ramelteon studies. </caption_mg>

```{r delirium_total_mel_ram_tab}
# CODE: delirium incidence melatonin ramelteon
delirium_total_tab <- delirium_total_tab_fun(mel_ram_refid) |> 
    left_join(mel_ram_by_arm |> select(refid, mel_ram_groups) |> distinct(), by = c("refid")) |> 
  mutate(scale_delirium = ifelse(refid == 3841, "CAM/DRS/DSM", scale_delirium)) |> 
  rename(compare_groups = mel_ram_groups) |> 
  mutate(delitotal_time = ifelse(is.na(delitotal_time), "Note", delitotal_time))

refid_max_of_days <- delirium_total_tab |> 
  filter(delitotal_time == "Note") |> 
  mutate(refid = as.numeric(refid)) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

```

```{r delirium_total_mel_ram_gt}
delirium_total_gt_mel_ram <- delirium_total_gt_fun("Mel|Ram|Mel/Dex") 

# tab_info(delirium_total_gt_mel_ram_gt)
delirium_total_gt_mel_ram |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "GI/Abd - Before-After/Time Series", "Thoracic - Before-After/Time Series")) |> 
  tab_footnote("RR: risk ratio; MMSE: Mini-Mental State Examination; Mel: melatonin; Ram: ramelteon; Dex: dexmedetomidine; Oxaz: oxazepam; Mid: midazolam; AMT: Abbreviated Mental Test; DRS: Delirium Rating Scale; DSM: Diagnostic and Statistical Manual of Mental Disorders; CAM: Confusion Assessment Method; ICDSC: Intensive Care Delirium Screening Checklist.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates duration of hospitalization.", locations = cells_column_labels(columns = delitotal_time)) |> 
  tab_footnote("Reported only daily incidence.", locations = cells_body(columns = delitotal_time, rows = delitotal_time == "Note")) |> 
  tab_footnote("Maximum of reported daily incidence.", locations = cells_body(columns = n_percent, rows = refid %in% refid_max_of_days), placement = "right")

rm(refid_max_of_days)
```

### *Pooled*

```{r delirium_nma_meta_dat}
#| eval: true
nma_rct_dat <- delirium_meta_dat |> 
  mutate(arm = fct_collapse(arm, "Benzo" = c("Oxaz", "Mid"))) |>
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  filter(str_detect(design_f_lab, "Random")) |> 
  mutate(across(c(arm, design_f_lab), ~ fct_drop(.x))) |> 
  select(refid, study, year, arm, delitotal_n, arm_n)

trts <- levels(nma_rct_dat$arm)

pairs_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = nma_rct_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_nma <- netmeta(
  pairs_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts,
  sm = "RR",
  reference.group = "Plac/None"
)

# pairwise for metabin
pairwise_dat <- pairs_dat |> 
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = "refid") |>
  left_join(dichot_dat |> select(refid, delirium_inc_prop) |> group_by(refid) |> slice(1) |> ungroup(), by = "refid") |> 
  left_join(postop_only_dat, by = "refid") |> 
  left_join(postop_any_dat, by = "refid") |> 
  rename(surg_f = surgs_single_f)  |> 
  select(refid, studlab, study, treat1, treat2, event1, n1, event2, n2, country, surg_f, year, postop_only, postop_any, delirium_inc_prop) |> 
  mutate(china_vs_other = ifelse(country == "China", "China", "Other countries")) |> 
  unite(to_select, treat1:treat2, sep = "|", remove = FALSE) |> 
  arrange(year, study) 

# function to select subset pairwise data
# filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex"))

# combine ramelteon and melatonin
nma_rct_melram_dat <- nma_rct_dat |> 
  mutate(arm = fct_collapse(arm, "Mel/Ram" = c("Mel", "Ram")))

trts_melram <- levels(nma_rct_melram_dat$arm)

pairs_melram_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = nma_rct_melram_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_melram_nma <- netmeta(
  pairs_melram_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts_melram,
  sm = "RR",
  reference.group = "Plac/None"
)

```

#### Comparator Network

<caption_mg> `r figure_ref()` Randomized clinical trials and comparators reporting overall incidence of delirium. </caption_mg>

```{r delirium_nma_plot, warning = TRUE, fig.dim = c(6, 5), out.width = "50%", fig.align = "center"}
#| eval: true
#| warning: false
# CODE: network plot
# FIXME: adjust offsets 
## Modify current setting for position of treatment labels
## (argument 'offset')
# tmp <- netgraph(net1)
# names(tmp)
# names(tmp$nodes)
# tmp$nodes$offset.x
# netgraph(net1, offset = cbind(tmp$nodes$offset.x, tmp$nodes$offset.y + 0.1))
# netgraph(net1, offset = cbind(tmp$nodes$offset.x + 0.1, tmp$nodes$offset.y))

par(mfrow = c(1, 1), mar = c(1, 1, 1, 1))

netgraph(netmeta_melram_nma,
  lwd = 4,
  plastic = FALSE,
  thickness = TRUE,
  points = TRUE,
  alpha.transparency = 2,
  col = "azure3",
  col.points = "#F39C12",
  number.of.studies = TRUE,
  # seq = trts_melram,
  rescale.pointsize = TRUE,
  # cex.points = c(1, 2, 3, 4, 5),
  # cex.points = node_size$n/40,
  cex.points = netmeta_melram_nma$n.trts,
  labels = paste0(trts, "\n(n=", round(n.trts), ")"),
  col.number.of.studies = "black",
  cex.number.of.studies = 1.2,
  col.highlight = "white",
  bg.number.of.studies = c("#FFFFFF"),
  offset = .02
)

```

<foot_mg> Dex: dexmedetomidine; Ket: ketamine; Mel/Ram: melatonin or ramelteon; Benz: benzodiazepine (midazolam or oxazepam); MS: morphine sulfate; Plac/None: placebo or no intervention; Prop: propofol.</foot_mg>

#### Dexmedetomidine

<caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention. </caption_mg>

```{r nma_dat, fig.width = 14, fig.height = 7.5, fig.align = "left", warning = TRUE}
dex_plac_refid <- pairwise_dat |> 
  filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex")) |> 
  pull(refid)

dex_meta_dat <- pairwise_dat |>
  left_join(rob2_meta_dat, by = "refid") |>
  filter(refid %in% dex_plac_refid) |>
  select(study, year, event2, n2, event1, n1, D1:Overall, china_vs_other, postop_only, postop_any, delirium_inc_prop, surg_f) |>
  mutate(
    postop_only = ifelse(!is.na(postop_only), "Only postop", "Any preop through intraop ± postop"),
    postop_any = ifelse(!is.na(postop_any), "Postop ± preop through intraop", "Any preop through intraop (no postop)"),
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    study = ifelse(china_vs_other == "China", paste0(study, "*"), study),
    # total_samp = n1 + n2,
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  ) 

# length(unique(dex_plac_refid))
# toString(sort(dex_plac_refid))
# total_meta(dex_meta_dat)

dex_plac_meta <- metabin(event2, n2, event1, n1,
  data = dex_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE
)

# for sensitivity analysis
# dex_sens_dat <- metafor::escalc(measure = "RR", ai = event2, bi = n2 - event2, ci = event1, di = n1 - event1, data = dex_meta_dat, append = TRUE) |> select(study, yi, vi)
# write_csv(dex_sens_dat, "/Users/mgrant/Desktop/dex_sens_dat.csv")

dex_plac_china_meta <- update(dex_plac_meta, subset = china_vs_other == "China")
dex_plac_other_meta <- update(dex_plac_meta, subset = china_vs_other != "China")

# small study effects; here to have result of Harbord test
temp_meta <- dex_plac_meta
temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# small study effects for china; here to have result of Harbord test; china only
temp_china_meta <- update(dex_plac_meta, subgroup = NULL, sm = "OR", subset = china_vs_other == "China")
temp_china_metabias <- metabias(temp_china_meta, method.bias = "Harbord", k.min = 10)

# small study effects other; here to have result of Harbord test; china only
temp_other_meta <- update(dex_plac_meta, subgroup = NULL, sm = "OR", subset = china_vs_other != "China")

# summary(dex_plac_meta)

# functions to produce forest plots
# no subgroups
dex_meta_forest_nosub_fun <- function(data_meta) {
forest(data_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
)  
}

# forext with subgroups
dex_meta_forest_fun <- function(data_meta) {
forest(data_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  subgroup = TRUE,
  prediction.subgroup = TRUE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
)  
}

dex_meta_forest_nosub_fun(dex_plac_meta)
# summary(update(dex_plac_meta, subset = study != c("Turan 2020")))
```

```{r ancred}
#| eval: false
# meta_ancred(update(dex_plac_meta, subset = china_vs_other == "China"))
# meta_ancred(dex_plac_meta)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <a id="figure-4"></a><br/> `r paste0("Harbord test for small study effects P = ", formatC(temp_metabias$pval, digits = 4, format = "f"), ".")`<br/> `r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, dex_plac_refid), "; a secondary outcome in ", prim_sec_out_fun(sec_delirium, dex_plac_refid), ".")`<br/> Excluding Turan 2020 reduced heterogeneity substantially --- *I*<sup> 2</sup> = 21%, $\tau$<sup>2</sup> = 0.04, and pooled RR 0.55 (95% CI, 0.48-0.65). <br/>\*Trials conducted in China.</foot_mg><br/>

<caption_mg> `r figure_ref()`Dexmedetomidine compared with placebo or no intervention --- trials from China vs. other countries. </caption_mg>

```{r nma_dat_china, fig.width = 14, fig.height = 10, fig.align = "left"}
china_meta <- update(dex_plac_meta, subgroup = china_vs_other)
dex_meta_forest_fun(china_meta)

temp_metareg <- update(china_meta, tau.common = TRUE, common = FALSE, method.tau = "REML", method.random.ci = "HK")
temp_metareg <- metareg(temp_metareg)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <br/> Meta-regression (China vs. Other), *I*<sup> 2</sup> = `r paste0(digit0(temp_metareg$I2), "%.")` `r rm(temp_metareg, china_meta)`<br/> \*Trials conducted in China. </foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention **small study effects**. </caption_mg>

```{r dex_plac_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta, ylim = c(0.8, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

<foot_mg> Estimates (odds ratio and 95% CI) from random effects models --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.<br/> \*Trials conducted in China.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **small study effects in trials conducted in China**. </caption_mg>

```{r dex_plac_china_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

temp_limit_china_meta <- limitmeta(temp_china_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_china_meta, ylim = c(0.8, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

<foot_mg> Estimates (odds ratio and 95% CI) from random effects models --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_china_meta$TE.adjust)), " (", digit2(exp(temp_limit_china_meta$lower.adjust)), "–", digit2(exp(temp_limit_china_meta$upper.adjust)), ")")`.<br/> `r paste0("Harbord test for small study effects P = ", formatC(temp_china_metabias$pval, digits = 4, format = "f"), ".")`<br/></foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **small study effects in trials conducted outside of China**. </caption_mg>

```{r dex_plac_other_meta_funnel, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_other_meta, ylim = c(0.8, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

```

<foot_mg> Too few studies for tests of small study effects.</foot_mg>
:::


::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **postoperative administration only or at other times**. </caption_mg>

```{r meta_dat_postop_only, fig.width = 14, fig.height = 10.5, fig.align = "left"}
dex_plac_meta_postop <- update(dex_plac_meta, subgroup = postop_only)

dex_meta_forest_fun(dex_plac_meta_postop)

rm(dex_plac_meta_postop)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> \*Trials conducted in China.</foot_mg><a id="figure-7"></a>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **any postoperative administration or at other times**. </caption_mg>

```{r meta_postop_any, fig.width = 14, fig.height = 10.5, fig.align = "left"}
dex_plac_meta_postop_any <- update(dex_plac_meta, subgroup = postop_any)

dex_meta_forest_fun(dex_plac_meta_postop_any)

rm(dex_plac_meta_postop_any)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> \*Trials conducted in China.</foot_mg><a id="figure-7"></a>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **by surgical category**. </caption_mg>

```{r nma_dat_postop, fig.width = 14, fig.height = 14.3, fig.align = "left"}
dex_plac_meta_surgs <- update(dex_plac_meta, hakn = FALSE, subgroup = surg_f)

dex_meta_forest_fun(dex_plac_meta_surgs)

rm(dex_plac_meta_surgs)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <br/> Hartung-Knapp adjustment not applied owing to \< 5 trials in some subgroups.<br/> \*Trials conducted in China.</foot_mg><a id="figure-7"></a>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` <a id="figure-china"></a> Dexmedetomidine compared with placebo or no intervention --- **according to reporting incidence proportion**. </caption_mg>

```{r dex_meta_sens_incidence_prop, fig.width = 14, fig.height = 10.5, fig.align = "left"}
delirium_inc_pro_meta <- update(dex_plac_meta, subgroup = delirium_inc_prop, hakn = FALSE)

dex_meta_forest_fun(delirium_inc_pro_meta)

rm(delirium_inc_pro_meta)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> Hartung-Knapp adjustment not applied.<br/> \*Trials conducted in China.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention --- **according to risk of bias appraisal**. </caption_mg>

```{r nma_dat_rob, fig.width = 14, fig.height = 11.7, fig.align = "left"}
rob_meta <- update(dex_plac_meta, subgroup = rob)

dex_meta_forest_fun(rob_meta)

rm(rob_meta)
```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> \*Trials conducted in China.</foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Summary risk of bias from randomized clinical trials of dexmedetomidine compared with placebo or no intervention. </caption_mg>

```{r rob2_summary_dex_plac, fig.height = 3, out.width = "60%"}
rob_summary_fun(cogfunc_refid)
```
:::

#### *Subgroup Summary*

<caption_mg> `r figure_ref()` Summary of subgroup results. </caption_mg>

```{r dex_subgroup_summary}
# library(extrafont)
# loadfonts(device = "pdf")

subgroup_dat <- readxl::read_excel(
  "data/forester_data.xlsx",
  sheet = "dex_subgroups",
  range = "A1:H22"
) |> 
  mutate(
    Subgroup = ifelse(!is.na(Studies) & Subgroup != "Overall", paste0("   ", Subgroup), Subgroup),
    `   I²` = ifelse(!is.na(`   I²`), paste0(as.character(round(`   I²`*100, 0)), "%   "), NA)
  )

with(subgroup_dat, 
  forester::forester(
  left_side_data = subgroup_dat[, c(1, 2, 3, 4, 8)],
  estimate = rr,
  estimate_col_name = "RR (95% CI)",
  ci_low = `CI low`,
  ci_high = `CI high`,
  display = FALSE,
  estimate_precision = 2,
  add_plot_gap = TRUE,
  null_line_at = 1,
  # arrows = TRUE,
  # nudge_y = -.3,
  # nudge_width = 1.2,
  # null_line_at = 1.5,
  justify = c(0, 0.5, 0.5, 0.5, 0.5, 0),
  # uncomment to save file
  file_path = "docs/assets/subgroup_summary.png",
  font_family = "Fira Sans",
  xlim = c(0.1, 2.0),
  arrows = TRUE,
  arrow_labels = c("Dexmedetomidine Better", "Placebo Better")
)
)

```

![](assets/subgroup_summary.png){#subgroup_summary fig-align="center" width="750"}

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio. </foot_mg>

#### *Timing*

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> Exploratory network meta-analysis examining timing of dexmedetomidine administration. </caption_mg>

```{r component_nma}
# VARIABLE: postop_only <lgl> from study arm only post-op administration [postop_only_dat]
# study arm postop only
timing_dat <- study_arm_dat |>
  select(refid, arm_id, proph_med_pre, proph_med_induct, proph_med_intra, proph_med_postop) |>
  rename_with(~ str_replace(.x, "proph_med", "time")) |>
  mutate(
    # time_pre = ifelse(!is.na(time_pre), "Preop/Induction", NA),
    # time_induct = ifelse(!is.na(time_induct), "Preop/Induction", NA),
    # time_intra = ifelse(!is.na(time_intra), "Intraop", NA),
    time_pre_induct_intra = ifelse(!is.na(time_pre) | !is.na(time_induct) | !is.na(time_intra), "Preop/Induct/Intra", NA),
    time_postop = ifelse(!is.na(time_postop), "Postop", NA),
  ) |>
  # unite(arm_time, time_pre, time_induct, time_intra, time_postop, na.rm = TRUE, sep = "|") |>
  unite(arm_time, time_pre_induct_intra, time_postop, na.rm = TRUE, sep = "|") 
  # mutate(arm_time = ifelse(arm_time == "Preop/Induction|Preop/Induction|Intraop", "Preop/Induction|Intraop", arm_time))

delirium_dex_comp_meta_dat <- dichot_dat |>
  # only dexmedetomidine studies
  filter(refid %in% dex_refid) |>
  filter(!is.na(delitotal_n)) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(timing_dat, by = c("refid", "arm_id")) |>
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |>
  select(refid, refid_c, arm_id, year, study, design_f_lab, country, surg_f, arm_time, arm, delitotal_n, arm_n, delitotal_perc, delirium_inc_prop) |>
  arrange(refid_c, arm_id) |>
  # collapse arms
  # group_by(refid) |>  filter(n() > 2) |>  ungroup() |> # verify collapsed arms; verified 2023-03-09
  mutate(
    arm = fct_collapse(arm, "Plac" = c("Plac", "None")),
    arm_time = ifelse(arm_time == "", as.character(arm), arm_time),
    # arm_time = ifelse(arm == "None", "Place", arm_time),
    delirium_inc_prop = ifelse(delirium_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    delitotal_n = case_when(
      study == "Lee 2018a" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), delitotal_n), # for nma keep all arms as is
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), delitotal_n), # nb collapses all doses
      .default = delitotal_n
    ),
    arm_n = case_when(
      study == "Lee 2018a" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), arm_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), arm_n),
      .default = arm_n
    ),
    arm_time = ifelse(study == "Lee 2018b" & arm_id == 4, "Induction/Preop|Intraop|Preg", arm_time)
  ) |>
  filter(!(study %in% c("Zhao 2020") & arm_id %in% c(3, 4))) |> 
  filter(!(study == "Lee 2018a" & arm_id == 3)) |> 
  filter(!(study == "Lee 2018b" & arm_id %in% c(2, 4))) 
  # filter(!(study == "He 2018" & arm_id == 2)) |>
  # filter(!(study %in% c("Lee 2018a", "Avidan 2017") & arm_id == 3)) |>
  # filter(!(study %in% c("Lee 2018b") & arm_id %in% c(2, 4))) |> # remove pregabalin, pregabaline/dex arm

```

```{r delirium_comp_meta, fig.width = 12, fig.height = 9, fig.align = "center"}
#| eval: true
library(netmeta)
component_nma_dat <- delirium_dex_comp_meta_dat 

# trts <- unique(component_nma_dat$arm_time)
trts <- c("Preop/Induct/Intra", "Preop/Induct/Intra|Postop", "Postop", "Mid", "MS", "Prop", "Plac")

# trts <- unique(component_nma_rct_dat$arm)
tabyl(component_nma_dat$arm_time) |>
  arrange(desc(n)) |>
  gt(id = "one") |>
  gt_theme_mg() |>
  cols_hide(c(percent)) |>
  cols_label(
    "component_nma_dat$arm_time" = "Time (dexmedetomidine) or arm",
    n = "Studies",
  ) |>
  cols_width(
    "component_nma_dat$arm_time" ~ px(250),
    n ~ px(100)
  ) |>
  tab_footnote("MS: morphine sulfate; Mid: midazolam; Preop/Induction/Intra|Postop: given any of preoperative, intraoperative, or intraoperative periods and postoperatively; Preop/Induction/Intra: given any of preoperative, intraoperative, or intraoperative periods.")

pairwise_comp_dat <- pairwise(
  treat = arm_time,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = component_nma_dat,
  # data = component_nma_rct_dat,
  sm = "RR") |>
  select(studlab:seTE)

net1 <- netmeta(TE, seTE, treat1, treat2, studlab,
  data = pairwise_comp_dat,
  ref = "Plac",
  sm = "OR",
  trts = c("Preop/Induct/Intra", "Preop/Induct/Intra|Postop", "Postop", "Mid", "MS", "Prop", "Plac")
)

net_comb <- netcomb(net1, inactive = "Plac")

# netleague(net1,
#   digits = 2,
#   common =  FALSE,
#   # direct = FALSE,
#   seq = trts
# )

# forest(net_disc)
netgraph(net1,
  lwd = 4,
  plastic = FALSE,
  thickness = TRUE,
  points = TRUE,
  alpha.transparency = 2,
  col = "azure3",
  col.points = "#F39C12",
  number.of.studies = TRUE,
  seq = c("Preop/Induct/Intra", "Preop/Induct/Intra|Postop", "Postop", "Mid", "MS", "Prop", "Plac"),
  rescale.pointsize = TRUE,
  # cex.points = c(1, 2, 3, 4, 5),
  # cex.points = node_size$n/40,
  # cex.points = netmeta_melram_nma$n.trts,
  # labels = paste0(trts, "\n(n=", round(n.trts), ")"),
  col.number.of.studies = "black",
  cex.number.of.studies = 1.2,
  col.highlight = "white",
  bg.number.of.studies = c("#FFFFFF"),
  offset = .02
)

```

```{r component_nma_forest, fig.width = 12, fig.height = 4, fig.align = "left"}
#| eval: true
meta::forest(net_comb, xlab = "Odds Ratio", sortvar = trts)
```

<foot_mg> MS: morphine sulfate; Mid: midazolam; Prop: propofol; Plac: placebo; Preop: preoperative; Induct: induction; Intra: intraoperative; Postop: postop. <br/> Excludes Lee 2018b pregabalin arms (pregabalin alone and with dexmedetomidine). </foot_mg>
:::

#### Ketamine

<caption_mg> `r figure_ref()` Ketamine compared with placebo. </caption_mg>

```{r nma_ket_dat, fig.width = 14, fig.height = 3, fig.align = "left"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
# risk of bias
ket_plac_refid <- pairwise_dat |> 
  filter(str_detect(to_select, "Plac") & str_detect(to_select, "Ket")) |> 
  pull(refid)

ket_meta_dat <- pairwise_dat |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(refid %in% ket_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, china_vs_other)

ket_plac_meta <- metabin(event2, n2, event1, n1,
  data = ket_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  )

# summary(ket_plac_meta)
forest(ket_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Ketamine",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Ketamine               Placebo",
  addrows.below.overall = 4
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```

<foot_mg> D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . </foot_mg> <br/>

#### Melatonin/Ramelteon

<caption_mg> `r figure_ref()` Melatonin and ramelteon compared with placebo or no intervention. </caption_mg>

```{r nma_mel_ram_dat, fig.width = 14, fig.height = 7.2, fig.align = "left"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
# risk of bias
mel_ram_plac_refid <- pairwise_dat |> 
  filter(treat2 %in% c("Mel", "Ram")) |> 
  filter(treat1 == "Plac/None") |> 
  pull(refid)

mel_ram_meta_dat <- pairwise_dat |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(refid %in% mel_ram_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, treat2, treat1) |> 
  filter(!treat2 == c("Benzo")) |> 
  filter(!treat1 == c("Benzo")) |> 
  mutate(mel_ram = ifelse(treat2 == "Mel", "Melatonin", "Ramelteon")) 

# total_meta(mel_ram_meta_dat)
# toString(mel_ram_plac_refid)

mel_ram_plac_meta <- metabin(event2, n2, event1, n1,
  data = mel_ram_meta_dat,
  studlab = study,
  # cluster = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE,
  subgroup = mel_ram
  )

# small study effects; here to have result of Harbord test
temp_meta <- mel_ram_plac_meta 
temp_meta <- update(mel_ram_plac_meta, subgroup = NULL, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# summary(mel_ram_plac_meta)
forest(mel_ram_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Mel/Ram",
  label.c = "Plac/None",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  text.subgroup.nohet = TRUE,
  xlim = c(0.1, 3),
  xlab = "Favors: Ram/Mel                   Placebo",
  addrows.below.overall = 4
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```

<foot_mg> Mel: melatonin; Ram: ramelteon; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/> `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> `r paste0("Delirium a designated primary outcome in ", prim_sec_out_fun(prim_delirium, mel_ram_plac_refid), ".")`</foot_mg><br/> <a id="figure-13.-ramelteon-compared-with-placebo-before-after-studies."></a>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Melatonin or ramelteon compared with placebo or no intervention --- small study effects. </caption_mg>

```{r mel_ram_plac_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta, ylim = c(1.2, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 7, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

<foot_mg> Estimates (odds ratio and 95% CI) from random effects models --- unadjusted OR `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</foot_mg>
:::

<caption_mg> `r figure_ref()` Ramelteon compared with placebo (before-after studies). </caption_mg>

```{r mel_ram_bef_after_meta, fig.width = 14, fig.height = 3, fig.align = "left"}
mel_ram_bef_aft_dat <- delirium_meta_dat |> 
  group_by(refid) |>
  filter(any(arm %in% c("Ram", "Mel"))) |>
  filter(design_f_lab == "Before-After/Time Series") |>
  ungroup()

pairwise_dat <- pairwise(
    treat = arm,
    event = delitotal_n,
    n = arm_n,
    studlab = study,
    data = mel_ram_bef_aft_dat,
    sm = "RR",
    keep.all.comparisons = TRUE
  ) |> 
  left_join(robinsi_meta_dat |> select(-Study), by = "refid") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, treat2, treat1) |> 
  mutate(treat2 = "Ramelteon",
         treat1 = "None") |> 
  group_by(study) |> 
  slice(1) |> 
  ungroup()
# TODO: after reconcile robins-i fix

mel_ram_bef_aft_meta <- metabin(event2, n2, event1, n1,
  data = pairwise_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE
)
  
forest(mel_ram_bef_aft_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Ramelteon",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = FALSE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  # colgap.forest.left = "10mm",
  # colgap.forest.right = "10mm",
  # colgap.left = "2mm",
  xlim = c(0.1, 2),  # at = c(0.1, 0.5, 1, c, ...),
  xlab = "Favors: Ramelteon                   None",
  addrows.below.overall = 4,
  text.addline1 = "Continuity correction of 0.5 in studies with zero cell frequencies."
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```

<foot_mg> D1: Bias due to confounding; D2: Bias in selection of participants into the study; D3: Bias in classification of interventions; D4: Bias due to deviations from intended interventions; D5: Bias due to missing data; D6: Bias in measurement of outcomes; D7: Bias in selection of reported results; All: overall risk of bias.<br/> Risk of bias ratings: low ++, moderate +, serious -, critical - - ; NI: no information; NA: not applicable.</foot_mg>

#### All Comparators

<caption_mg> `r figure_ref()` Network meta-analysis of delirium incidence including all comparators.</caption_mg>

```{r nmaForest, fig.dim = c(6, 3.3), out.width = "45%", fig.align = "center"}
#| eval: true
# CODE: network meta results
# fig.width = 6, fig.height = 3.3, fig.align = "center"}
par(mar = c(1, 1, 1, 1))
forest(netmeta_melram_nma,
       xlab = "Risk Ratio")
       # xlim = c(.001, 2),
       # at = c(0.01, .1, 0.5, 1, 2))
```

<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin or Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>

<br/>

<caption_mg> `r table_ref()` League table of risk ratios and 95% confidence intervals from network meta-analysis (random effects model). Comparisons from direct evidence displayed in the upper diagonal; network comparisons shown on the lower diagonal. </caption_mg>

```{r leagueTable}
#| results: asis
nma_melram_league <- netleague(netmeta_melram_nma,
  digits = 2,
  common =  FALSE,
  # direct = FALSE,
  seq = trts_melram
)

as_tibble(nma_melram_league$random) |>
  mutate(
    across(V1:V7, ~ str_replace(.x, " \\(", "<br>\\(")),
    # across(V1:V8, ~ str_replace(.x, "\\]", "\\)")),
    across(V1:V7, ~ ifelse(.x == ".", "", .x))
  ) |>
  gt(id = "one") |>
  fmt_markdown(columns = everything()) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V1, rows = V1 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V2, rows = V2 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V3, rows = V3 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V4, rows = V4 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V5, rows = V5 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V6, rows = V6 %in% trts_melram)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V7, rows = V7 %in% trts_melram)) |>
  # tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V8, rows = V8 %in% trts_melram)) |>
  rm_stubhead() |>
  gt_theme_mg() |>
  tab_options(column_labels.hidden = TRUE, table.font.size = px(14)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(V1:V7)) |>
  tab_footnote("Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin or Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator.")

# tab_info(temp)

```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Comparison adjusted funnel plot. </caption_mg>

```{r compare_adj_fun_delirium, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
par(mar = c(4, 4, 2, 1), bty = "n", xaxt = "s", yaxt = "s")
funnel(netmeta_melram_nma,
  order = trts_melram
)
```
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Comparison of direct and indirect evidence in network meta-analysis (node splitting forest plot). </caption_mg>

```{r, fig.height = 11, fig.width = 7, out.width = "60%", out.height = "60%", fig.align = 'center'}
netsplit(netmeta_melram_nma, order = trts_melram) %>%
  forest(.,
    xlab = "Risk Ratio",
    xlim = c(0.1, 10),
    leftcols = c("studlab", "k"),
    rightlabs = c("RR", "(95% CI)")
  )
```

<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin/Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>
:::

<br/>

```{r}
#| eval: false
```

## **Delayed Neurocognitive Recovery**

```{r dncr_ncd_dat}
#| eval: true
# CODE: neurocog meta data munge; here to produce figure
# VARIABLE: postop_only <lgl> from study arm only post-op administration [postop_only_dat]

## dncr_dat ------------------------------------------- (2023-04-15 15:55) @----
dncr_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x <= 30)) |>
  # select(refid, study, arm_n, neurocog_update_arm_n, neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n, matches("neurocog.*time")) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    neurocog_n1 = ifelse(neurocog_time1 > 30, NA, neurocog_n1),
    neurocog_n2 = ifelse(neurocog_time2 > 30, NA, neurocog_n2),
    neurocog_n3 = ifelse(neurocog_time3 > 30, NA, neurocog_n3),
    neurocog_last_n = ifelse(neurocog_last_time > 30, NA, neurocog_last_n),
    neurocog_total_n = ifelse(neurocog_total_time > 30, NA, neurocog_total_n),
    neurocog_time1 = ifelse(neurocog_time1 > 30, NA, neurocog_time1),
    neurocog_time2 = ifelse(neurocog_time2 > 30, NA, neurocog_time2),
    neurocog_time3 = ifelse(neurocog_time3 > 30, NA, neurocog_time3),
    neurocog_last_time = ifelse(neurocog_last_time > 30, NA, neurocog_last_time),
    neurocog_total_time = ifelse(neurocog_total_time > 30, NA, neurocog_total_time),
    dncr_time = pmax(neurocog_time1, neurocog_time2, neurocog_time3, neurocog_last_time, neurocog_total_time, na.rm = TRUE),
    neurocog_total_n = case_when(
      neurocog_time1 == dncr_time ~ neurocog_n1,
      neurocog_time2 == dncr_time ~ neurocog_n2,
      neurocog_time3 == dncr_time ~ neurocog_n3,
      neurocog_last_time == dncr_time ~ neurocog_last_n,
      neurocog_total_time == dncr_time ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n/arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  left_join(study_char_dat |> select(refid, country, neuro_threshold), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(postop_only_dat, by = "refid") |> # 2023-04-18 none postop only 
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |>
  arrange(refid_c, arm_id) |>
  mutate(
    bar = case_when(
      str_detect(arm, "Dex|Ket|Mel|Ram") ~ bar_prop(neurocog_prop * 100, "#A93226"),
      str_detect(arm, "Plac") ~ bar_prop(neurocog_prop * 100, "#969696"),
      .default = bar_prop(neurocog_prop * 100, "#104E8B")),
    year = as.numeric(str_extract(study, "\\d{4}")),
    # arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    scale_mmse = ifelse(!is.na(neurocog_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |> 
  select(refid, refid_c, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, postop_only, arm, pre_mmse, dncr_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf, neuro_threshold)

# add referents for rr calculation
dncr_rr_ref <- dncr_dat |>
  select(refid, refid_c, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid_c, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  ) |>
  select(-refid)

#| DATA: neurocog_allarms_meta_dat for subsequent pooling, arms not collapsed
neurocog_allarms_meta_dat <- dncr_dat |> 
  select(refid, study, design_f_lab, year, arm_id, arm, neurocog_total_n, arm_n, dncr_time, surg_f) |> 
  filter(study != "Lu 2017") # both dex arms; different dose

dncr_dat <- dncr_dat |> 
  left_join(dncr_rr_ref, by = c("refid_c", "arm_id")) |> 
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |> 
  select(refid, year, design_f_lab, surg_f, study, study_l, arm_id, arm_n, arm, pre_mmse, scale_mmse:scale_other_tf, neuro_threshold, dncr_time, neurocog_nper, bar, rr_ci)

rm(dncr_rr_ref)
```

### Dexmedetomidine

<caption_mg> `r table_ref()` Delayed neurocognitive recovery incidence and ascertainment in trials of dexmedetomidine. </caption_mg>

```{r dncr_dex_gt}
#| eval: true
dncr_dex_refid <- dncr_dat |> 
  filter(str_detect(arm, "Dex")) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

dncr_ket_refid <- dncr_dat |> 
  filter(str_detect(arm, "Ket")) |> 
  select(refid) |> 
  distinct() |> 
  pull(refid)

# dncr_dat |>
#   filter(refid %in% dncr_ket_refid, !is.na(scale_other)) |>
#   filter(refid %in% dncr_dex_refid, !is.na(scale_other)) |>
#   select(refid, study, scale_other)

# create footnotes for thresholds
# dncr_dat |>
#   select(refid, study, scale_mmse, scale_dst, scale_moca, neuro_threshold) |>
#   slice(1, .by = refid) |>
#   mutate(
#     neuro_threshold = str_replace(neuro_threshold, "≤-", "≥"), 
#     footnotes = case_when(
#     !is.na(scale_mmse) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == '", study, "')) |>"),
#     !is.na(scale_dst) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == '", study, "')) |>"),
#     !is.na(scale_moca) ~ paste0("tab_footnote('", neuro_threshold, ".', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == '", study, "')) |>")
#   ),
#   footnotes = ifelse(row_number() == n(), str_remove(footnotes, ".{2}$"), footnotes)) |> 
#   filter(!is.na(footnotes)) |> 
#   pull(footnotes) |> 
#   noquote()


dncr_dat |>
  arrange(year, study) |> 
  # select(study, refid, starts_with("scale"), neuro_threshold)
  filter(refid %in% dncr_dex_refid) |> 
  mutate(design_surg = paste0(as.character(design_f_lab), "—", as.character(surg_f)),
         # design_surg = str_replace(design_surg, "Randomized Clinical Trial—GI/Abd", "Randomized Clinical Trial<br/>GI/Abd"),
         design_surg = str_remove(design_surg, "Randomized Clinical Trial—")) |> 
  mutate(study_l = ifelse(row_number() > 1, NA, study_l), 
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         dncr_time = ifelse(row_number() > 1, NA, dncr_time), 
                .by = study) |> 
  # tabyl(design_surg) |> arrange(desc(percent))
  group_by(design_surg) |>
  gt(id = "one") |>
  row_group_order(groups = c("GI/Abd", "Various", "Ortho", "Cardiac", "Ophtho", "Thoracic", "Urol", "Nonrandomized Trial—GI/Abd")) |>
  # row_group_order(groups = c("Randomized Clinical Trial — GI/Abd", "Randomized Clinical Trial — Various", "Randomized Clinical Trial — Ortho", "Randomized Clinical Trial — Cardiac", "Randomized Clinical Trial — Ophtho", "Randomized Clinical Trial — Thoracic", "Randomized Clinical Trial — Urol", "Nonrandomized Trial — GI/Abd")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other, design_f_lab, surg_f, neuro_threshold)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA", 
    scale_other_tf   = "Other",
    dncr_time        = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |> 
  gt_theme_mg() |> 
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |>
  fmt_number(dncr_time, decimals = 0) |> 
  sub_missing(columns = everything(), missing_text = "") |> 
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Delayed Neurocognitive Recovery", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    dncr_time        ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, dncr_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), dncr_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm, "Dex|Ket|Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = !str_detect(arm, "Dex|Ket|Mel|Ram|Plac"))) |>
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Dex: Dexmedetomidine; Mid: Midazolam; Prop: Propofol; Ulin: ulinastatin; Plac/None: placebo or no intervention.") |> 
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(dncr_time))) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Hasegawa's Dementia Scale; Trail-Making Test; Word Recall; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2022")) |> 
  tab_footnote("Trail Making Test; Words Recall Test; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2015")) |> 
  tab_footnote("American Psychiatric Association postoperative cognitive dysfunction diagnostic criteria.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Gao 2020")) |> 
  tab_footnote("Visual Verbal Learning Tests; Trail Making Test; Stroop Color Word Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Chawdhary 2020")) |> 
  tab_footnote("Stroop Color-Word Test; Associative Learning And Memory Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Li 2019")) |> 
  tab_footnote('MMSE <26.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Mansouri 2019')) |>                       
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2020d')) |>   
  tab_footnote('Low score not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Bao 2020')) |>             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == 'Zhou 2019b')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2019')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2018c')) |>                          
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Ding 2022')) |>      
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Hudetz 2009a')) |>   
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Hollinger 2021')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lee 2015')) |>                             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2017')) |>                            
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lu 2017')) |>      
  tab_footnote('Z >2.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Shi 2020')) |>                                
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhao 2020')) |>    
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Ding 2015')) |>     
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2021b')) |>      
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2015')) |>       
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chawdhary 2020')) |>
  tab_footnote('MMSE <27.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2013')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2021')) |>                     
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Li 2019')) |>                               
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2020')) 
```

### Ketamine

<caption_mg> `r table_ref()` Delayed neurocognitive recovery incidence and ascertainment in randomized clinical trials of ketamine. </caption_mg>

```{r dncr_ket_gt}
#| eval: true
dncr_dat |> 
  arrange(year, study) |> 
  filter(refid %in% dncr_ket_refid) |> 
  mutate(design_surg =  as.character(surg_f)) |> 
  # mutate(design_surg = paste0(as.character(design_f_lab), " — ", as.character(surg_f))) |> 
  mutate(study_l = ifelse(row_number() > 1, NA, study_l), 
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         dncr_time = ifelse(row_number() > 1, NA, dncr_time), 
                .by = study) |> 
  # tabyl(design_surg) |> arrange(desc(percent))
  group_by(design_surg) |>
  gt(id = "one") |>
  # row_group_order(groups = c("Randomized Clinical Trial — Various", "Randomized Clinical Trial — Ortho", "Randomized Clinical Trial — Cardiac", "Randomized Clinical Trial — Ophtho")) |>
  row_group_order(groups = c("Various", "Ortho", "Cardiac", "Ophtho")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other, surg_f, design_f_lab, neuro_threshold)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA", 
    scale_other_tf   = "Other",
    dncr_time        = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |> 
  gt_theme_mg() |> 
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |> 
  fmt_number(dncr_time, decimals = 0) |> 
  sub_missing(columns = everything(), missing_text = "") |> 
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Delayed Neurocognitive Recovery", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    dncr_time        ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, dncr_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), dncr_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm, "Dex|Ket|Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = !str_detect(arm, "Plac|Dex|Ket|Mel|Ram"))) |> 
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Ket: ketamine; Hal: haloperidol; Plac: placebo.") |> 
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(dncr_time))) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Short Portable Mental Status Questionnaire.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Hudetz 2009a")) |> 
  tab_footnote("Repeatable Battery for the Assessment Of Neuropsychological Status Subtests; Brief Visual Memory Test Revised; Backward Digit Span; Semantic Fluency; Phonemic Fluency.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Rascon-Martinez 2016")) |> 
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Dex: Dexmedetomidine; Mid: Midazolam; Prop: Propofol; Ulin: ulinastatin; Plac/None: placebo or no intervention.") |> 
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(dncr_time))) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |>
  tab_footnote("Hasegawa's Dementia Scale; Trail-Making Test; Word Recall; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2022")) |> 
  tab_footnote("Trail Making Test; Words Recall Test; Verbal Fluency Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Ding 2015")) |> 
  tab_footnote("American Psychiatric Association postoperative cognitive dysfunction diagnostic criteria.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Gao 2020")) |> 
  tab_footnote("Visual Verbal Learning Tests; Trail Making Test; Stroop Color Word Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Chawdhary 2020")) |> 
  tab_footnote("Stroop Color-Word Test; Associative Learning And Memory Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Li 2019")) |> 
  tab_footnote('MMSE <26.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Mansouri 2019')) |>                       
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2020d')) |>   
  tab_footnote('Low score not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Bao 2020')) |>             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == 'Zhou 2019b')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2019')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2018c')) |>                          
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Ding 2022')) |>      
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Hudetz 2009a')) |>   
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Hollinger 2021')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lee 2015')) |>                             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2017')) |>                            
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lu 2017')) |>      
  tab_footnote('Z >2.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Shi 2020')) |>                                
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhao 2020')) |>    
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Ding 2015')) |>     
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2021b')) |>      
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2015')) |>       
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chawdhary 2020')) |>
  tab_footnote('MMSE <27.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2013')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2021')) |>                     
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Li 2019')) |>                               
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2020'))   
```

### Melatonin/Ramelteon

No studies

<br/>

### *Pooled*

```{r dncr_meta_dat}
#| eval: true
# NOTE: 2023-04-20 adding ketamine studies to dexmedetomidine dncr would not connect any network; so left distinct
neurocog_meta_dat <- neurocog_allarms_meta_dat |>
  filter(dncr_time >= 3) |> 
  # collapse arms
  mutate(
    neurocog_total_n = case_when(
      study == "Zhou 2019b" & arm_id == 3 ~ collapse_dichot(neurocog_allarms_meta_dat, "Zhou 2019b", c(3, 4), neurocog_total_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Zhao 2020", c(2, 3, 4), neurocog_total_n),
      study == "Li 2021b" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Li 2021b", c(2, 3, 4), neurocog_total_n),
      .default = neurocog_total_n
    ),
    arm_n = case_when(
      study == "Zhou 2019b" & arm_id == 3 ~ collapse_dichot(neurocog_allarms_meta_dat, "Zhou 2019b", c(3, 4), arm_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Zhao 2020", c(2, 3, 4), arm_n),
      study == "Li 2021b" & arm_id == 2 ~ collapse_dichot(neurocog_allarms_meta_dat, "Li 2021b", c(2, 3, 4), arm_n),
      .default = arm_n
    ),
    arm = fct_collapse(arm, Plac = c("Plac", "None"))
  ) |>
  filter(!(study %in% c("Zhou 2019b") & arm_id %in% c(4))) |>
  filter(!(study %in% c("Zhao 2020") & arm_id %in% c(3, 4))) |>
  filter(!(study %in% c("Li 2021b") & arm_id %in% c(3, 4))) |>
  # add potential subgroups
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  # NOTE: 2023-04-20 no dexmedetomidine studies included in dncr pooled results administered only postop
  left_join(postop_only_dat, by = "refid") 

```

```{r dncr_meta}
#| eval: true
# CODE: dncr meta data, pairwise and network (netmeta)
nma_dncr_dat <- neurocog_meta_dat |>
  # mutate(arm = fct_collapse(arm, "Benzo" = c("Oxaz", "Mid"))) |>
  # mutate(time = ifelse(dncr_time < 3, "at <3 days", "at ≥3 days" )) |> 
  # filter(time == "at ≥3 days") |> 
  select(-dncr_time) |> 
  filter(design_f_lab == "Randomized Clinical Trial") |>
  # filter(surg_f == "Cardiac") |>
  # filter(postop_only == TRUE) |>
  # filter(!country == "China") |> 
  mutate(across(c(arm, design_f_lab), ~ fct_drop(.x)))

trts <- levels(nma_dncr_dat$arm)

pairs_dat <- pairwise(
  treat = arm,
  event = neurocog_total_n,
  n = arm_n,
  studlab = study,
  data = nma_dncr_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

netmeta_dncr_nma <- netmeta(
  pairs_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts,
  sm = "RR",
  reference.group = "Plac"
)

```

#### Comparator Network

<caption_mg> `r figure_ref()` Randomized clinical trials and comparators reporting delayed neurocognitive recovery. </caption_mg>

```{r dncr_nma_plot, warning = TRUE, fig.dim = c(6, 5), out.width = "50%", fig.align = "center"}
#| eval: true
# CODE: dncr network plot
par(mfrow = c(1, 1), mar = c(1, 1, 1, 1))

netgraph(
  netmeta_dncr_nma,
  lwd = 4,
  plastic = FALSE,
  thickness = TRUE,
  points = TRUE,
  alpha.transparency = 2,
  col = "azure3",
  col.points = "#F39C12",
  number.of.studies = TRUE,
  # seq = trts_melram,
  rescale.pointsize = TRUE,
  # cex.points = c(1, 2, 3, 4, 5),
  # cex.points = node_size$n/40,
  cex.points = netmeta_dncr_nma$n.trts,
  labels = paste0(trts, "\n(n=", round(n.trts), ")"),
  col.number.of.studies = "black",
  cex.number.of.studies = 1.2,
  col.highlight = "white",
  bg.number.of.studies = c("#FFFFFF"),
  offset = .02
)

# forest(netmeta_dncr_nma)

```

<foot_mg> Dex: Dexmedetomidine; Ket: ketamine; Hal: haloperidol; Mid: midazolam; Prop: propofol; Ulin: ulinastatin; Plac/None: Placebo or no intervention; Prop: Propofol. <br/> Zhao 2020 no intervention (usual care) arm included as placebo.</foot_mg>

#### Dexmedetomidine

<caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention (randomized clinical trials, delayed neurocognitive recovery assessed postop day 3 or later). </caption_mg>

```{r dncr_dex_plac_meta, fig.width = 14, fig.height = 5, fig.align = "left", warning = TRUE}
#| eval: true
dex_meta_dat <- pairs_dat |>
  arrange(year, study) |> 
  unite(to_select, treat1, treat2, sep = "/") |> 
  filter(str_detect(to_select, c("Plac")) & str_detect(to_select, "Dex") & !str_detect(to_select, "Ulin")) |> 
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall, country, surgs_single_f) |>
  mutate(
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  ) |> 
  arrange(study)

dex_plac_meta <- metabin(event2, n2, event1, n1,
  data = dex_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE,
  # subgroup = time
  )

# refid_meta_fun(dex_meta_dat)

# small study effects; here to have result of Harbord test
temp_meta <- dex_plac_meta
temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
# temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)
# trimfill(temp_meta)

# summary(dex_plac_meta)
forest(dex_plac_meta,
  # sortvar = year,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "surgs_single_f", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)   ", "Procedure", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "left",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  # subgroup = TRUE,
  # prediction.subgroup = FALSE,
  colgap.right = "5mm",
  # print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
  # text.addline1 = "Hartung-Knapp adjustment not applied owing to subgroups — overall RR 0.55 (95% CI, 0.37–0.79) when used.",
  # text.addline2 = "Excluding studies with assessments at less than 3 days (95% prediction interval, 0.24–0.92)."
)  

```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <a id="figure-4"></a><br/> <!-- `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/>  --> `r paste0("Neurocognitive recovery a designated primary outcome in ", prim_sec_out_fun(prim_pocd, dex_meta_dat$refid), "; a secondary outcome in ", prim_sec_out_fun(sec_pocd, dex_meta_dat$refid), ".")`<br/> Six trials conducted in China and 1 each in Egypt and Iran.<br/> Using odds ratios, pooled OR 0.36 (95% CI, 0.19--0.70; *I*<sup> 2</sup> 44%), prediction interval (0.09--1.45). </foot_mg><br/>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention according to risk of bias appraisals (randomized clinical trials; delayed neurocognitive recovery). </caption_mg>

```{r dncr_rob_meta, fig.width = 14, fig.height = 8, fig.align = "left"}
rob_meta <- update(dex_plac_meta, subgroup = rob)

forest(rob_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex     ",
  label.c = "Plac/None  ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  subgroup = TRUE,
  prediction.subgroup = FALSE,
  print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 3),
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
)  

```

<foot_mg> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- .<br/>0.5 added to cells of studies without events in one arm. </foot_mg>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects --- funnel plot (delayed neurocognitive recovery). </caption_mg>

```{r dex_plac_dncr_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

# temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_meta, pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.05, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

# text(0.95, 0.03, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

<!-- <foot_mg> Estimates (odds ratio and 95% CI) from random effects models --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</foot_mg> -->
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Summary risk of bias from randomized clinical trials of dexmedetomidine compared with placebo or no intervention (delayed neurocognitive recovery). </caption_mg>

```{r rob2_summary_dncr_dex_plac, fig.height = 3, out.width = "60%"}
rob_summary_fun(dex_meta_dat$refid)
```
:::

#### Ketamine

<caption_mg> `r figure_ref()` Ketamine compared with placebo or no intervention (randomized clinical trials, delayed neurocognitive recovery). </caption_mg>

```{r dncr_ket_plac_meta, fig.width = 14, fig.height = 4, fig.align = "left", warning = TRUE}
#| eval: true
ket_meta_dat <- pairs_dat |>
  arrange(year, study) |>
  unite(to_select, treat1, treat2, sep = "/") |>
  filter(str_detect(to_select, c("Plac")) & str_detect(to_select, "Ket") & !str_detect(to_select, "Hal")) |>
  left_join(rob2_meta_dat, by = "refid") |>
  select(refid, study, year, event2, n2, event1, n1, D1:Overall, country, surgs_single_f) |>
  mutate(
    rob = case_when(
      Overall == "+" ~ "Low",
      Overall == "?" ~ "Some Concerns",
      Overall == "–" ~ "High"
    )
  ) |>
  arrange(study)

ket_plac_meta <- metabin(event2, n2, event1, n1,
  data = ket_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  allstudies = TRUE
)

# small study effects; here to have result of Harbord test
# temp_meta <- ket_plac_meta
# temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
# temp_metabias <- metabias(temp_meta, method.bias = "Egger", k.min = 10)
# trimfill(temp_meta)

# summary(ket_plac_meta)
forest(ket_plac_meta,
  # sortvar = year,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Ketamine",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR ", "(95% CI)   ", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  # subgroup = TRUE,
  # prediction.subgroup = FALSE,
  # print.subgroup.name = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  print.pval.Q = FALSE,
  xlim = c(0.1, 5),
  xlab = "Favors: Ketamine               Placebo/None",
  addrows.below.overall = 4
)
```

<foot_mg> Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias.<br/> Risk of bias ratings: low +, some concerns ?, high -- . <br/> Too few studies to examine small study effects. </foot_mg><br/>

#### All Comparators

<caption_mg> `r figure_ref()` Network meta-analysis of delayed neurocognitive recovery including all comparators.</caption_mg>

```{r dncr_nma_forest, fig.dim = c(6, 3.3), out.width = "45%", fig.align = "center"}
#| eval: true
# CODE: network meta results
# fig.width = 6, fig.height = 3.3, fig.align = "center"}
par(mar = c(1, 1, 1, 1))
forest(netmeta_dncr_nma,
  xlab = "Risk Ratio",
  xlim = c(.15, 2),
  at = c(0.2, 0.5, 1, 2)
)
```

<foot_mg> Dex: Dexmedetomidine; Ket: ketamine; Hal: haloperidol; Mid: midazolam; Prop: propofol; Ulin: ulinastatin; Plac/None: Placebo or no intervention; Prop: Propofol. </foot_mg>

<br/>

<caption_mg> `r table_ref()` League table of risk ratios and 95% confidence intervals from network meta-analysis (random effects model). Comparisons from direct evidence displayed in the upper diagonal; network comparisons shown on the lower diagonal. </caption_mg>

```{r dncr_nma_league}
#| results: asis
nma_dncr_league <- netleague(netmeta_dncr_nma,
  digits = 2,
  common = FALSE,
  # direct = FALSE,
  seq = trts
)

as_tibble(nma_dncr_league$random) |>
  mutate(
    across(V1:V8, ~ str_replace(.x, " \\(", "<br>\\(")),
    # across(V1:V8, ~ str_replace(.x, "\\]", "\\)")),
    across(V1:V8, ~ ifelse(.x == ".", "", .x))
  ) |>
  gt(id = "one") |>
  fmt_markdown(columns = everything()) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V1, rows = V1 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V2, rows = V2 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V3, rows = V3 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V4, rows = V4 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V5, rows = V5 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V6, rows = V6 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V7, rows = V7 %in% trts)) |>
  tab_style(style = list(cell_text(color = "maroon", weight = "bold")), locations = cells_body(columns = V8, rows = V8 %in% trts)) |>
  rm_stubhead() |>
  gt_theme_mg() |>
  tab_options(column_labels.hidden = TRUE, table.font.size = px(14)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(V1:V8)) |>
  tab_footnote("Dex: Dexmedetomidine; Ket: ketamine; Hal: haloperidol; Mid: midazolam; Prop: propofol; Ulin: ulinastatin; Prop: Propofol; Plac/None: Placebo or no intervention.")

# tab_info(temp)
```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Comparison adjusted funnel plot (delayed neurocognitive recovery). </caption_mg>

```{r compare_adj_fun_dncr, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
par(mar = c(4, 4, 2, 1), bty = "n", xaxt = "s", yaxt = "s")
funnel(netmeta_dncr_nma,
  order = trts
)
```
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Comparison of direct and indirect evidence in network meta-analysis (node splitting forest plot, delayed neurocognitive recovery). </caption_mg>

```{r, fig.height = 11, fig.width = 7, out.width = "60%", out.height = "60%", fig.align = 'center'}
netsplit(netmeta_dncr_nma, order = trts) %>%
  forest(.,
    xlab = "Risk Ratio",
    # xlim = c(0.15, 2),
    leftcols = c("studlab", "k"),
    rightlabs = c("RR", "(95% CI)")
  )
```

<foot_mg> Dex: Dexmedetomidine; Ket: Ketamine; Mel/Ram: Melatonin/Ramelteon; Mid: Midazolam; MS: Morphine; Prop: Propofol; Plac/None: Placebo or no comparator. </foot_mg>
:::

<br/>

## **Neurocognitive Disorder**

### Dexmedetomidine or Melatonin

<caption_mg> `r table_ref()` Neurocognitive disorder and ascertainment reported in dexmedetomidine and melatonin trials. </caption_mg>

```{r ncd_dat}
#| eval: true

## ncd_dat -------------------------------------------- (2023-04-15 15:55) @----
ncd_dat <- dichot_dat |>
  filter(if_any(c(neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n), ~ !is.na(.x))) |>
  # > 30 day exam
  filter(if_any(matches("neurocog.*time.*"), ~ .x > 30)) |>
  # select(refid, study, arm_n, neurocog_update_arm_n, neurocog_n1, neurocog_n2, neurocog_n3, neurocog_last_n, neurocog_total_n, matches("neurocog.*time")) |>
  mutate(
    arm_n = ifelse(!is.na(neurocog_update_arm_n), neurocog_update_arm_n, arm_n),
    ncd_time = case_when(
      neurocog_time1 > 30 ~ neurocog_time1,
      neurocog_time2 > 30 ~ neurocog_time2,
      neurocog_time3 > 30 ~ neurocog_time3,
      neurocog_last_time > 30 ~ neurocog_last_time,
      neurocog_total_time > 30 ~ neurocog_total_time,
      .default = NA
    ),
    neurocog_total_n = case_when(
      neurocog_time1 > 30 ~ neurocog_n1,
      neurocog_time2 > 30 ~ neurocog_n2,
      neurocog_time3 > 30 ~ neurocog_n3,
      neurocog_last_time > 30 ~ neurocog_last_n,
      neurocog_total_time > 30 ~ neurocog_total_n
    ),
    neurocog_prop = neurocog_total_n / arm_n,
    neurocog_nper = n_per_fun(neurocog_total_n, arm_n, 1)
  ) |>
  # add drug (arm), country, surgery, postop only
  left_join(study_char_dat |> select(refid, country), by = "refid") |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(postop_only_dat, by = "refid") |> # 2023-04-18 none postop only
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |>
  # select(refid, refid_c, arm_id, study, design_f_lab, country, surg_f, postop_only, arm, pre_mmse, neurocog_total_n, arm_n, ncd_time, neurocog_prop, neurocog_nper) |>
  arrange(refid_c, arm_id) |>
  mutate(
    year = as.numeric(str_extract(study, "\\d{4}")),
    # neurocog_inc_prop = ifelse(neurocog_inc_prop == TRUE, "Incidence Proportion", "Maximum Daily"),
    # arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")), # all placebo
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    bar = case_when(
      str_detect(arm, "Dex|Ket|Mel|Ram") ~ bar_prop(neurocog_prop * 100, "#A93226"),
      str_detect(arm, "Plac") ~ bar_prop(neurocog_prop * 100, "#969696"),
      .default = bar_prop(neurocog_prop * 100, color_1)
    ),
    year = as.numeric(str_extract(study, "\\d{4}")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    scale_mmse = ifelse(!is.na(neurocog_mmse), "\U2713", NA),
    scale_dst = ifelse(!is.na(neurocog_dst) | str_detect(neurocog_scale_otherspec, "[Dd]igit"), "\U2713", NA),
    scale_moca = ifelse(str_detect(neurocog_scale_otherspec, "MoCA|Montreal"), "\U2713", NA),
    scale_other = neurocog_scale_otherspec,
    scale_other = str_to_title(str_replace(scale_other, "Digit [Ss]ymbol [Tt]est; |Digit symbol substitution test; |Montreal Cognitive Assessment \\(MoCA\\)|MoCA", "")),
    scale_other = ifelse(scale_other == "", NA, scale_other),
    scale_other = str_replace_all(scale_other, "Pocd", "POCD"),
    scale_other_tf = ifelse(!is.na(scale_other), "\U2713", NA)
  ) |>
  select(refid, refid_c, year, arm_id, study, study_l, design_f_lab, pre_mmse, country, surg_f, postop_only, arm, pre_mmse, ncd_time, neurocog_total_n, arm_n, arm, neurocog_nper, neurocog_prop, bar, scale_mmse:scale_other_tf)

ncd_rr_ref <- ncd_dat |>
  select(refid, refid_c, arm_id, neurocog_total_n, arm_n) |>
  arrange(refid_c, arm_id) |>
  rename(ref_neurocog_n = neurocog_total_n, ref_arm_n = arm_n) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() > 1, NA, ref_neurocog_n)
  ) |>
  fill(ref_arm_n, ref_neurocog_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_neurocog_n = ifelse(row_number() == 1, NA, ref_neurocog_n)
  ) |>
  select(-refid)

ncd_dat <- ncd_dat |>
  left_join(ncd_rr_ref, by = c("refid_c", "arm_id")) |>
  mutate(rr_ci = ifelse(!is.na(ref_arm_n), rr_ci_fun(neurocog_total_n, arm_n, ref_neurocog_n, ref_arm_n), "—")) |>
  select(refid, year, design_f_lab, study, study_l, arm_id, arm_n, arm, pre_mmse, scale_mmse:scale_other_tf, ncd_time, neurocog_nper, bar, rr_ci)
```

```{r ncd_gt}
#| eval: true
ncd_dat |> 
  arrange(year, study) |> 
    mutate(study_l = ifelse(row_number() > 1, NA, study_l), 
         across(scale_mmse:scale_other_tf, ~ ifelse(row_number() > 1, NA, .x)),
         ncd_time = ifelse(row_number() > 1, NA, ncd_time), 
                .by = study) |> 
  group_by(design_f_lab) |>
  gt(id = "one") |>
  row_group_order(groups = c("Randomized Clinical Trial")) |>
  cols_hide(c(refid, year, arm_id, study, scale_other)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              = "Drug",
    pre_mmse         = "MMSE",
    scale_mmse       = "MMSE",
    scale_dst        = "DST",
    scale_moca       = "MoCA", 
    scale_other_tf   = "Other",
    ncd_time         = "Day",
    neurocog_nper    = "N (%)",
    bar              = "0 — 100%",
    rr_ci            = "RR (95% CI)"
  ) |> 
  gt_theme_mg() |> 
  fmt_markdown(columns = c(study_l, bar, pre_mmse, scale_mmse:scale_other_tf)) |> 
  fmt_number(ncd_time, decimals = 0) |> 
  sub_missing(columns = everything(), missing_text = "") |> 
  tab_spanner(label = "Instrument", columns = c(scale_mmse:scale_other_tf), level = 1) |>
  tab_spanner(label = "Neurocognitive Disorder", columns = c(neurocog_nper:rr_ci), level = 1) |>
  tab_spanner(label = "Preop", columns = c(pre_mmse), level = 1) |>
  cols_width(
    study_l          ~ px(165),
    arm_n            ~ px(45),
    arm              ~ px(70),
    pre_mmse         ~ px(80),
    scale_mmse       ~ px(50),
    scale_dst        ~ px(50),
    scale_moca       ~ px(50),
    scale_other_tf   ~ px(50),
    ncd_time         ~ px(60),
    neurocog_nper    ~ px(90),
    bar              ~ px(100),
    rr_ci            ~ px(140),
  ) |> 
  tab_style(style = cell_text(align = "left"),        locations = cells_column_labels(columns = c(study, arm))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_column_labels(columns = c(starts_with("scale"), pre_mmse, ncd_time, neurocog_nper, rr_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c(neurocog_nper))) |>
  tab_style(style = cell_text(align = "left"),        locations = cells_body(columns = c(study, arm, pre_mmse))) |>
  tab_style(style = cell_text(align = "center"),      locations = cells_body(columns = c(starts_with("scale"), ncd_time, rr_ci))) |>
  tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c(neurocog_nper))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = str_detect(arm, "Dex|Ket|Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:pre_mmse, neurocog_nper), rows = !str_detect(arm, "Plac|Dex|Ket|Mel|Ram"))) |> 
  tab_footnote("Mini-Mental State Exam; DST: Digit Span Test; MoCA: Montreal Cognitive Assessment; RR: risk ratio; Dex: dexmedetomidine: Mel: melatonin; Plac: placebo.") |> 
  tab_footnote("Day of assessment.",                   locations = cells_column_labels(columns = c(ncd_time))) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(pre_mmse))) |> 
  tab_footnote("Stroop Color-Word Test; Associative Learning And Memory Test.", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "Li 2019")) |> 
  tab_footnote("Charlson Comorbidity Index Dementia & Informant Questionnaire on Cognitive Decline", locations = cells_body(columns = c(scale_other_tf), rows = !is.na(scale_other_tf) & study == "de Johnghe 2014")) |> 
    tab_footnote('MMSE <26.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Mansouri 2019')) |>                       
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2020d')) |>   
  tab_footnote('Low score not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Bao 2020')) |>             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_moca), rows = arm_id == 1 & study == 'Zhou 2019b')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2019')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2018c')) |>                          
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Ding 2022')) |>      
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Hudetz 2009a')) |>   
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Hollinger 2021')) |>                      
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lee 2015')) |>                             
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Wang 2017')) |>                            
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Lu 2017')) |>      
  tab_footnote('Z >2.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Shi 2020')) |>                                
  tab_footnote('Difference from baseline >2 pts.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhao 2020')) |>    
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Ding 2015')) |>     
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2021b')) |>      
  tab_footnote('Difference from baseline ≥1 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Li 2015')) |>       
  tab_footnote('Difference from baseline ≥2 SD.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chawdhary 2020')) |>
  tab_footnote('MMSE <27.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2013')) |>                           
  tab_footnote('Threshold not specified.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Zhang 2021')) |>                     
  tab_footnote('Z ≥1.96.', locations = cells_body(columns = c(scale_dst), rows = arm_id == 1 & study == 'Li 2019')) |>                               
  tab_footnote('MMSE <24.', locations = cells_body(columns = c(scale_mmse), rows = arm_id == 1 & study == 'Chen 2020')) 
```

### Ketamine

No studies

## **Physical Function**

<caption_mg> `r table_ref()` Physical functional status for expanded versus standard preoperative evaluation. </caption_mg>

```{r exp_std_adl}
#| include: true
#| eval: true
#| warning: true

## main data ------------------------------------------ (2023-07-13 10:05) @----
adl_likert_dat <- likert_dat |> 
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  rename(arm = drug_recode_abbr) |>
  mutate(
    # adl_koos, adl_sf36, adl_womac_func, adl_womac_stiff, adl_qlq_func, adl_other
    adl_scale = coalesce(adl_koos, adl_sf36, adl_womac_func, adl_womac_stiff, adl_qlq_func, adl_other),
    adl_scale = case_when(
      adl_scale == adl_sf36 ~ "SF-36 physical",
      str_detect(adl_other_spec, "Bar?thel") ~ "Barthel Index",
      adl_other_spec ==  "Short Performance Physical Battery" ~ "SPPB",
      str_detect(adl_other_spec, "Groningen") ~ "GARS"
    )
  ) |> 
  filter(!is.na(l_adl)) |> 
  relocate(adl_scale, .after = arm) |> 
  select(refid, study_l, study, arm_id, arm, arm_n, adl_scale, adl_koos:adl_other_spec, matches("sf36_pcs|womac_func|qlq_fs|adl")) |> 
  # select(refid, study, arm, adl_scale, matches("otheradl")) |> 
  rename_with(~ str_replace(., "_95", "ci95")) |> 
  rename_with(~ str_replace(., "other", "other_")) %>%
  mutate(
    time1       = coalesce(!!!select(., contains("time1"))),
    m1          = coalesce(!!!select(., contains("m1"))),
    sd1         = coalesce(!!!select(., contains("sd1"))),
    ci95l1      = coalesce(!!!select(., contains("ci95l1"))),
    ci95u1      = coalesce(!!!select(., contains("ci95u1"))),
    med1        = coalesce(!!!select(., contains("med1"))),
    rl1         = coalesce(!!!select(., contains("rl1"))),
    ru1         = coalesce(!!!select(., contains("ru1"))),
    iqrl1       = coalesce(!!!select(., contains("iqrl1"))),
    iqru1       = coalesce(!!!select(., contains("iqru1"))),
    diff1       = coalesce(!!!select(., contains("diff1"))),
    diffsd1     = coalesce(!!!select(., contains("diffsd1"))),
    diff95low1  = coalesce(!!!select(., contains("diff95low1"))),
    diff95high1 = coalesce(!!!select(., contains("diff95high1"))),
    pval1in    = coalesce(!!!select(., contains("pval1_in"))),
    pval1betw  = coalesce(!!!select(., contains("pval1_betw"))),
    time2       = coalesce(!!!select(., contains("time2"))),
    sd2         = coalesce(!!!select(., contains("sd2"))),
    m2          = coalesce(!!!select(., contains("m2"))),
    ci95l2      = coalesce(!!!select(., contains("ci95l2"))),
    ci95u2      = coalesce(!!!select(., contains("ci95u2"))),
    med2        = coalesce(!!!select(., contains("med2"))),
    rl2         = coalesce(!!!select(., contains("rl2"))),
    ru2         = coalesce(!!!select(., contains("ru2"))),
    iqrl2       = coalesce(!!!select(., contains("iqrl2"))),
    iqru2       = coalesce(!!!select(., contains("iqru2"))),
    diff2       = coalesce(!!!select(., contains("diff2"))),
    diffsd2     = coalesce(!!!select(., contains("diffsd2"))),
    diff95low2  = coalesce(!!!select(., contains("diff95low2"))),
    diff95high2 = coalesce(!!!select(., contains("diff95high2"))),
    pval2in    = coalesce(!!!select(., contains("pval2_in"))),
    pval2betw  = coalesce(!!!select(., contains("pval2_betw"))),
    time3       = coalesce(!!!select(., contains("time3"))),
    m3          = coalesce(!!!select(., contains("m3"))),
    sd3         = coalesce(!!!select(., contains("sd3"))),
    ci95l3      = coalesce(!!!select(., contains("ci95l3"))),
    ci95u3      = coalesce(!!!select(., contains("ci95u3"))),
    med3        = coalesce(!!!select(., contains("med3"))),
    rl3         = coalesce(!!!select(., contains("rl3"))),
    ru3         = coalesce(!!!select(., contains("ru3"))),
    iqrl3       = coalesce(!!!select(., contains("iqrl3"))),
    iqru3       = coalesce(!!!select(., contains("iqru3"))),
    diff3       = coalesce(!!!select(., contains("diff3"))),
    diffsd3     = coalesce(!!!select(., contains("diffsd3"))),
    diff95low3  = coalesce(!!!select(., contains("diff95low3"))),
    diff95high3 = coalesce(!!!select(., contains("diff95high3"))),
    pval3in    = coalesce(!!!select(., contains("pval3_in"))),
    pval3betw  = coalesce(!!!select(., contains("pval3_betw"))),
  ) |> 
  select(refid, study_l, study, arm_id, arm, arm_n, adl_scale, !contains("_"), matches("adl_update_arm_n[1-3]")) |> 
  rename_with(~ paste0("adl_", .x), .cols = matches("[1-3]")) |> 
  rename_with(~ str_remove(.x, "adl_adl_"))

## adl_transpose -------------------------------------- (2023-07-13 10:06) @----
adl_transpose <- function(data, obs_number){
  obs_number <- as.character(obs_number)
  data |> 
  select(refid:adl_scale, matches(obs_number)) |> 
  rename_with(~ str_replace(.x, obs_number, ""))
}

## adl_long_dat --------------------------------------- (2023-07-13 10:06) @----
adl_long_dat <- bind_rows(
  adl_transpose(adl_likert_dat, 1),
  adl_transpose(adl_likert_dat, 2),
  adl_transpose(adl_likert_dat, 3)) |>
  # update arms at follow-up times
  mutate(arm_n = ifelse(!is.na(update_arm_n), update_arm_n, arm_n)) |>
  select(-update_arm_n) |>
  filter(!is.na(adl_time))

```

```{r exp_std_adl_estimates}
#| eval: true
# add formatted m/med and imputed mean sd if missing
adl_mn_med_dat <- mean_med_table_adl(adl_long_dat, "adl_") |>
  filter(!is.na(adl_time)) |>
  select(-scale)

adl_long_dat <- left_join(adl_long_dat, adl_mn_med_dat, by = c("refid", "arm_id", "adl_time")) |> 
  rename_with(~ str_remove(.x, "adl_")) |> 
  mutate(study = paste0(study, "-", time))

# function to calculate means, sd, and create analytical data set
calc_mn_sd <- function(n_e, m_e, sd_e, md_e, q1_e, q3_e, min_e, max_e, study, tx, refid, data = NULL) {
  temp_dat <- data |> 
    select(all_of(c(n_e, m_e, sd_e, md_e, q1_e, q3_e, min_e, max_e, study, tx, refid))) %>%
    mutate(n_c = 20, m_c = 2, sd_c = 1, md_c = 3, q1_c = 2, q3_c = 3, min_c = 1, max_c = 5)
  names(temp_dat)[1:10] <- c("n_e", "m_e", "sd_e", "md_e", "q1_e", "q3_e", "min_e", "max_e", "study", "tx")

  temp <- metacont(
    n.e = n_e,
    n.c = n_c,
    comb.fixed = TRUE,
    mean.e = m_e,
    sd.e = sd_e,
    median.e = md_e,
    q1.e = q1_e,
    q3.e = q3_e,
    min.e = min_e,
    max.e = max_e,
    mean.c = m_c,
    sd.c = sd_c,
    median.c = md_c,
    q1.c = q1_c,
    q3.c = q3_c,
    min.c = min_c,
    max.c = max_c,
    sm = "SMD",
    studlab = study,
    data = temp_dat
  )

  temp <- as_tibble(temp[c("studlab", "n.e", "mean.e", "sd.e")])
  cbind(temp_dat$tx, temp) 
}

adl_scales_dat <- tribble(
  ~study, ~scale, ~metric,
  "de Jonghe 2014", "Katz ADL score", "15→0",
  "Chitnis 2022", "SF-36 physical", "0→100",
)

adl_long_dat <- 
  left_join(
  adl_long_dat,
  calc_mn_sd("arm_n", "m", "sd", "med", "iqrl", "iqru", "rl", "ru", "study", "arm", refid = "refid", data = adl_long_dat) |> rename(arm = "temp_dat$tx", study = studlab),
  by = c("study", "arm")
) |>
  # add calculable missing sd estimates, for Zhu 2022 sd_bwgrp_fun(51.7, 50.5, 85, 70, 0.522)[3]; Bakker use diff
  mutate(
    sd.e = ifelse(study == "Zhu 2022-21", 11.85844, sd.e),
    mean.e = ifelse(is.na(mean.e) & str_detect(study, "Bakker"), -diff, mean.e),
    study_time = study,
    study = str_remove(study_time, "-.*$"),
    year = str_extract(study, "\\d{4}"),
    period = case_when(
      time < 30 ~ "<30 days",
      time <= 90 ~ "30-90 days",
      time > 90 ~ ">90 days"
    )
  ) |>
  select(-scale) |> 
  left_join(adl_scales_dat, by = "study") |>
  select(-c(ci95l:pvalbetw)) |>
  select(refid:study, study_time, arm_id, arm_n, arm, scale, metric, everything()) |>
  arrange(year, study_time, arm_id) |>
  filter(time != 0) |>
  mutate(
    smd = case_when(
      arm_id == 2 ~ suppressWarnings(smd_ci(n.e, mean.e, sd.e, lag(n.e), lag(mean.e), lag(sd.e))),
      arm_id == 1 ~ NA
    ),
    .by = study_time
  ) |> 
  mutate(table = ifelse(study == "Chitnis 2022", str_extract(table, "^\\d{2}\\.\\d{1}"), table),
         smd = ifelse(study == "Chitnis 2022" & arm_id == 2, "0.39 (-1.57, 2.34)", smd))

adl_meta_dat <- adl_long_dat |> 
  select(study, arm, time, period, n.e, mean.e, sd.e) |> 
  pivot_wider(names_from = arm, values_from = c(n.e, mean.e, sd.e)) |> 
  rename_with(~ str_remove(.x, "\\.e"))
```

```{r exp_std_adl_gt}
#| eval: true
adl_long_dat |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  relocate(age_table, .after = arm) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    scale = ifelse(row_number() > 1, "", scale),
    time = ifelse(row_number() > 1, "", time),
    metric = ifelse(row_number() > 1, "", metric),
    .by = study_time
  ) |>
  group_by(period) |>
  gt(id = "one") |>
  row_group_order(groups = c("30-90 days", ">90 days")) |>
  cols_hide(c(refid, study, study_time, arm_id, m, sd, sd.e, n.e, mean.e, year, )) |>
  cols_label(
    study_l          = "Study",
    arm_n            = "N",
    arm              = "Arm",
    age_table        = "    Age",
    scale            = "Scale",
    metric           = "Range",
    time             = "Days",
    table            = "Rating",
    smd              = "SMD (95% CI)"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, age_table, table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  # fmt_integer(use_seps = TRUE, sep_mark = ",") |>
  sub_missing(columns = everything(), missing_text = "") |>
  # replace relative effects calculated from studies with 0 events in one arm
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(135),
    arm_n ~ px(45),
    arm ~ px(50),
    age_table ~ px(90),
    scale ~ px(100),
    metric ~ px(70),
    time ~ px(40),
    table ~ px(90),
    smd ~ px(140)
  ) |>
  tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(arm_n:smd), rows = str_detect(arm, "Exp"))) |>
  tab_footnote(md("SMD: standardized mean difference")) |>
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, table))) |>
  tab_footnote("For scale reverse to be consistent with other studies.", locations = cells_body(columns = c(smd), rows = str_detect(study, "Bakker 2014") & arm == "Exp")) |>
  tab_footnote("Study reported only difference scores.", locations = cells_body(columns = c(table), rows = str_detect(study, "Bakker 2014")))
```

## **Complications**

### Dexmedetomidine

```{r complications_dat}
#| eval: true
# complication_all <- c("medical", "surg", "cardiac", "cardarr", "gastro", "neuro", "pulm", "thromb", "infect", "fall", "stroke", "othcomp", "asppneum", "atelec", "bronch", "cardarr", "myoinfarct", "ssi", "sepsis", "uti", "pneum", "pthorax", "airleak", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48", "kidneyinj", "nerveinj", "clavien1", "clavien2", "clavien3", "clavien4", "clavien5")

complication_incl <- c("cardiac", "myoinfarct", "cardarr", "stroke", "kidneyinj", "asppneum", "atelec", "pulm", "pneum", "pthorax", "pulcongest", "pe", "pinfiltrate", "respfail", "intub", "upperair", "vent48")

complications_kq6_fun <- function(var_prefix) {
  dichot_dat %>%
    filter(if_any(!!paste0(var_prefix, "_per"):!!paste0(var_prefix, "_95high"), ~ !is.na(.x))) |>
    select(refid, year, study, arm_id, arm_n, comp_update_arm_n, !!paste0(var_prefix, "_n"):!!paste0(var_prefix, "_95high")) |>
    left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
    relocate(drug_recode_abbr, .after = arm_id) |>
    rename(arm = drug_recode_abbr) |>
    mutate(complication = var_prefix) |>
    rename_with(~ str_replace(.x, "95", "ci_"), .cols = everything()) |>
    rename_with(~ str_replace(.x, "^.*_", ""), .cols = c(8:15)) |>
    arrange(complication, year, study, arm_id)
}

# adverse event data includes all reported complications
adverse_events_dat <- map_df(complication_incl, complications_kq6_fun) |>
  mutate(
    arm_n = ifelse(!is.na(comp_update_arm_n), comp_update_arm_n, arm_n),
    calc_per = n / arm_n * 100,
    n_per = n_per_fun(n, arm_n, 1),
    diff = per - calc_per
  )

adverse_meta_dat <- adverse_events_dat |>
  left_join(cardiac_compl, by = c("refid", "complication")) |>
  mutate(
    study_compl = paste0(study, complication),
    complication = as.character(complication),
    complication = case_when(
      detail_cardiac == "bradycardia" ~ "bradycardia",
      detail_cardiac %in% c("arrhythmia", "atrial fibrillation", "tachycardia", "ventricular fibrillation") ~ "other arrhythmia",
      detail_cardiac %in% c("heart failure", "cardiac failure") ~ "pulcongest",
      .default = complication
    ),
    complication = factor(complication, levels = c("bradycardia", "other arrhythmia", "myoinfarct", "cardarr", "kidneyinj", "stroke", "pulm", "pneum", "pulcongest", "pe", "respfail", "intub"), labels = c("Bradycardia", "Other arrhythmia", "MI", "Cardiac Arrest", "Renal", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation"))
  ) |>
  select(refid, year, study, arm_id, arm, arm_n, n, complication, study_compl, detail_cardiac)

adverse_events_dat <- adverse_events_dat |>
  left_join(study_char_dat |> select(refid, study_l, surgs_single, design_f_lab), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(cardiac_compl, by = c("refid", "complication")) |>
  mutate(
    study_compl = paste0(study, complication),
    complication = as.character(complication),
    complication = case_when(
      detail_cardiac == "bradycardia" ~ "bradycardia",
      detail_cardiac %in% c("arrhythmia", "atrial fibrillation", "tachycardia", "ventricular fibrillation") ~ "other arrhythmia",
      detail_cardiac %in% c("heart failure", "cardiac failure") ~ "pulcongest",
      .default = complication
    ),
    complication = factor(complication, levels = c("bradycardia", "other arrhythmia", "myoinfarct", "cardarr", "kidneyinj", "stroke", "pulm", "pneum", "pulcongest", "pe", "respfail", "intub"), labels = c("Bradycardia", "Other arrhythmia", "MI", "Cardiac Arrest", "Renal", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation"))
  ) |> 
arrange(complication, surgs_single, year, study, arm_id) |>
  mutate(
    study_compl = paste0(study, complication),
    ref_arm_n = arm_n,
    ref_n = n
  ) |>
  group_by(study_compl) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n)
  ) |>
  ungroup() |>
  mutate(
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(n, arm_n, ref_n, ref_arm_n, digits = 1), "—"),
    bar = case_when(
      str_detect(arm, "Dex") ~ bar_prop(calc_per, "#A93226"),
      str_detect(arm, "Ket|Mel|Ram") ~ bar_prop(calc_per, "#A93226"),
      str_detect(arm, "Plac|None") ~ bar_prop(calc_per, "#969696"),
      .default = bar_prop(calc_per, "#104E8B")
    )
  ) |>
  select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n, age_table, surgs_single, n_per, bar, rd_ci, complication, design_f_lab)

# for summary table
# adverse_events_dat |>
#   group_by(refid, arm_id) |>
#   slice(1) |>
#   ungroup() |>
#   summarise(total = sum(arm_n))

```

```{r hypotension}
# add hypotension
hypotension_dat <- dichot_dat |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, design_f, design_f_lab, design_f_abbrev), by = "refid") |> # add design_f
  rename(arm = drug_recode_abbr) |>
  filter(if_any(starts_with("hypo_"), ~ !is.na(.x))) |>
  mutate(
    complication = "Hypotension",
    study_compl = paste0(study, "Hypotension"),
    ref_arm_n = arm_n,
    ref_n = hypo_n,
    arm_n = ifelse(!is.na(hypo_update_arm_n), hypo_update_arm_n, arm_n),
    bar = case_when(
      str_detect(arm, "Dex") ~ bar_prop(hypo_per, "#A93226"),
      str_detect(arm, "Ket|Mel|Ram") ~ bar_prop(hypo_per, "#A93226"),
      str_detect(arm, "Plac|None") ~ bar_prop(hypo_per, "#969696"),
      .default = bar_prop(hypo_per, "#104E8B")
    ),
    n_per = n_per_fun(hypo_n, arm_n)
  ) |>
  group_by(study_compl) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() > 1, NA, ref_n)
  ) |>
  fill(ref_arm_n, ref_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_n = ifelse(row_number() == 1, NA, ref_n),
    rd_ci = ifelse(!is.na(ref_n), rd_per_ci_fun(hypo_n, arm_n, ref_n, ref_arm_n, digits = 1), "—"),
  ) |>
  ungroup() |>
  left_join(study_char_dat |> select(refid, surgs_single, design_f_lab), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  rename(n = hypo_n) |> 
  select(refid, year, arm_id, study, study_l, study_compl, arm_n, arm, n, age_table, surgs_single, n_per, bar, rd_ci, complication, design_f_lab)

```

<caption_mg> `r table_ref()` Bradycardia in dexmedetomidine studies (randomized clinical trials unless noted). </caption_mg>

```{r bradycardia_dex_gt}
## table bradycardia ------------------------------------------ (2023-06-17 20:28) @----
adverse_events_dat |>
  filter(complication == "Bradycardia") |> 
  left_join(cardiac_compl |> select(refid, brady_defn), by = c("refid")) |> 
  filter(!refid %in% mel_ram_refid) |> # tabyl(complication) |> arrange(n)
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    brady_defn = ifelse(row_number() > 1, "", brady_defn),
    surgs_single = ifelse(row_number() > 1, "", surgs_single), 
    .by = study_compl
  ) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("Bradycardia")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)",
    brady_defn       = "Criteria"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(145),
    arm_n ~ px(45),
    arm ~ px(60),
    age_table ~ px(100),
    surgs_single ~ px(60),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140),
    brady_defn ~ px(130)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  # tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Dex"))) |>
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  # tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Plac|None"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Ket|Mel|Ram|Dex|Plac|None"))) |>
  # tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(), rows = str_detect())) |>
  # tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(), rows = str_detect()))
  tab_footnote(md("Before-After/Time Series"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Before-After/Time Series")) |>
  tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial")) |>
    tab_footnote("RD: risk difference; Dex: Dexmedetomidine; Dex/Preg: Dexmedetomidine/Pregabalin; Mid: Midazolam; Prop: Propofol; Ram: ramelteon; Plac: placebo; None: no active or placebo comparator; GI/Abd: gastrointestinal/abdominal; Ortho: orthopedic; Oralmax: oral or maxilofacial.")
```

<caption_mg> `r table_ref()` Hypotension in dexmedetomidine studies (randomized clinical trials unless noted). </caption_mg>

```{r hypotension_dex_gt}
hypotension_foot_dat <- dichot_dat |>
  select(refid, study, hypo_def) |> 
  filter(!is.na(hypo_def)) |> 
  distinct() |> 
  mutate(
    study_compl = paste0(study, "Hypotension"),
    hypo_def = str_replace(hypo_def, "\\(mean arterial pressure \\(MAP\\) was less than 20% of the baseline", "↓MAP >20%."),
    hypo_def = str_replace(hypo_def, "a decrease of systolic blood pressure of more than 30% from baseline \\(average value in the ward\\) and lasting for at least 15 minutes", "↓SPB >30% ≥15 min."),
    hypo_def = str_replace(hypo_def, "systolic blood pressure <90 mm Hg or a decrease of more than 30% from baseline", "↓SBP >30% or <90."),
    hypo_def = str_replace(hypo_def, "systolic blood pressure less than 95 mm Hg.", "SBP <95."),
    hypo_def = str_replace(hypo_def, "defined as 20% reduction in systolic blood pressure  90 mmHg", "↓SBP ≥20% or <90."),
    hypo_def = str_replace(hypo_def, "systolic blood pressure less than 90 mm Hg for 5 minutes or more", "SBP <90 ≥5 min."),
    hypo_def = str_replace(hypo_def, "SBP <95 or >20% lower than baseline", "↓SBP >20% or <95."),
    hypo_def = str_replace(hypo_def, "SBP <90 or >30% lower than baseline", "↓SBP >30% or <90."),
    hypo_def = str_replace(hypo_def, "SBP <90 or >20% lower than baseline", "↓SBP >20% or <90."),
    hypo_def = str_replace(hypo_def, "MBP <=70", "MAP ≤70."),
    hypo_def = str_replace(hypo_def, "MAP <60",  "MAP <60."),
    hypo_def = str_replace(hypo_def, ">30% lower than baseline", "↓SBP >30%."),
    hypo_def = str_replace(hypo_def, "SBP <90", "SBP <90."),
    hypo_def = str_replace(hypo_def, "SBP <80 or >20% lower than baseline", "↓SBP >20% or <80."),
    hypo_def = str_replace(hypo_def, "20% decrease from baseline", "↓SBP >20%."),
    hypo_def = str_replace(hypo_def, "<90 mmHg", "SBP <90."),
    hypo_def = str_replace(hypo_def, "unspecified", "NS.")
    ) |> 
    arrange(hypo_def) |> 
    mutate(hypo_def = str_remove(hypo_def, "\\.$")) 

adverse_events_dat |>
  bind_rows(hypotension_dat) |>
  left_join(hypotension_foot_dat |> select(refid, hypo_def), by = c("refid")) |> 
  arrange(hypo_def, year, study, arm_id) |> 
  filter(complication == "Hypotension") |> 
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    surgs_single = ifelse(row_number() > 1, "", surgs_single), 
    hypo_def = ifelse(row_number() > 1, "", hypo_def), 
    .by = study_compl
  ) |>
  group_by(complication) |>
  gt(id = "one") |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)",
    hypo_def         = "Criteria"
  ) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(145),
    arm_n ~ px(45),
    arm ~ px(60),
    age_table ~ px(100),
    surgs_single ~ px(60),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140),
    hypo_def ~ px(130)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Dex"))) |>
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  # tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Plac|None"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Ket|Mel|Ram|Dex|Plac|None"))) |>
  tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial")) |>
  tab_footnote("RD: risk difference; MAP: mean arterial blood pressure; Dex: Dexmedetomidine; Dex/Preg: Dexmedetomidine/Pregabalin; Mid: Midazolam; Prop: Propofol; Ram: ramelteon; Plac: placebo; None: no active or placebo comparator; GI/Abd: gastrointestinal/abdominal; Ortho: orthopedic;  Urol: urologic; Oralmax: oral or maxilofacial; NS: not specified.")
```

<caption_mg> `r table_ref()` Other reported complications in dexmedetomidine studies --- cardiac, MI, stroke, pulmonary, pneumonia, and renal (randomized clinical trials unless noted). </caption_mg>

```{r other_compl_dex_gt}
adverse_events_dat |>
  # bind_rows(hypotension_dat) |>
  filter(!refid %in% mel_ram_refid) |> # tabyl(complication) |> arrange(n)
  mutate(
    complication = factor(complication,
      levels = c("Other arrhythmia", "MI", "Cardiac Arrest", "Renal", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation"),
      labels = c("Other Arrhythmia", "MI", "Cardiac Arrest", "Renal", "Stroke", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation")
    ),
    complication = fct_drop(complication)
  ) |> # tabyl(complication) |> arrange(n)
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    surgs_single = ifelse(row_number() > 1, "", surgs_single), .by = study_compl
  ) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("Other Arrhythmia", "MI", "Cardiac Arrest", "Stroke", "Renal", "Pulmonary", "Pneumonia", "Pulmonary Congestion", "PE", "Respiratory Failure", "Reintubation")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    arm ~ px(60),
    age_table ~ px(100),
    surgs_single ~ px(80),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci, surgs_single))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  # tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Dex"))) |>
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  # tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Plac|None"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Ket|Mel|Ram|Dex|Plac|None"))) |>
  # tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(), rows = str_detect())) |>
  # tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(), rows = str_detect()))
  tab_footnote(md("Before-After/Time Series"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Before-After/Time Series")) |>
  tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial")) |>
  tab_footnote("RD: risk difference; MI: myocardial infarction.") |>
  tab_footnote("Pulmonary congestion includes heart failure diagnosis.", locations = cells_row_groups(groups = "Pulmonary Congestion")) 

```

### Ketamine

No studies

### Ramelteon

<caption_mg> `r table_ref()` Report complications in ramelteon studies --- cardiac, MI, stroke, pulmonary, pneumonia, and renal (all before-after designs). </caption_mg>

```{r complications_mel_ram_gt}
adverse_events_dat |>
  filter(refid %in% mel_ram_refid) |>
    mutate(
    complication = fct_drop(complication),
    complication = fct_recode(complication, "Arrhythmia" = "Other arrhythmia")) |> 
  mutate(study_l = ifelse(row_number() > 1, "", study_l), .by = study_compl) |>
  group_by(complication) |>
  gt(id = "one") |>
  row_group_order(groups = c("Arrhythmia", "Pulmonary", "Pneumonia")) |>
  cols_hide(c(refid, year, study, arm_id, n, study, study_compl, design_f_lab)) |>
  cols_label(
    study_l          = "Study",
    arm_n            = " N",
    arm              =  "Arm",
    age_table        = "    Age",
    surgs_single     = "Surgery",
    n_per            = "N (%)",
    bar              = "0 – 100%",
    rd_ci            = "RD (95% CI)"
  ) |>
  # tab_spanner(label = "", columns = c(VARIABLES), level = 1) |>
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  # fmt_number(VARIABLE, decimals = 0) |>
  sub_missing(columns = everything(), missing_text = "") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    arm ~ px(60),
    age_table ~ px(100),
    surgs_single ~ px(80),
    n_per ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(140)
  ) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(arm))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, rd_ci))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_column_labels(columns = c())) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(arm, age_table, rd_ci))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Dex"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Ket|Mel|Ram"))) |>
  # tab_style(style = list(cell_text(color = "#969696")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = str_detect(arm, "Plac|None"))) |>
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:age_table, n_per), rows = !str_detect(arm, "Ket|Mel|Ram|Dex|Plac|None"))) |>
  # tab_style(style = cell_text(align = "right"),       locations = cells_body(columns = c())) |>
  # tab_style(style = cell_text(align = "center", font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  # tab_style(style = list(cell_text(color = color_1)), locations = cells_body(columns = c(), rows = str_detect())) |>
  # tab_style(style = list(cell_text(color = color_2)), locations = cells_body(columns = c(), rows = str_detect())) |>
  # tab_style(style = list(cell_text(color = color_3)), locations = cells_body(columns = c(), rows = str_detect()))
  tab_footnote(md("Before-After/Time Series"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Before-After/Time Series")) |>
  tab_footnote(md("Nonrandomized Trial"), locations = cells_body(columns = study_l, rows = study_l != "" & design_f_lab == "Nonrandomized Trial"))
  
```

### *Pooled*

```{r compl_meta_dex}
hypotension_meta_dat <-  hypotension_dat |> 
  left_join(hypotension_foot_dat |> select(refid, hypo_def), by = c("refid")) |> 
  select("refid", "year", "study", "arm_id", "arm", "arm_n", "n", "complication", "study_compl", "hypo_def") |> 
  rename(detail_cardiac = hypo_def)

adverse_meta_dat <- adverse_meta_dat |> 
  bind_rows(hypotension_meta_dat) 

adverse_dex_meta_dat <- adverse_meta_dat |>
  filter(refid %in% dex_refid) |>
  filter(!arm %in% c("Dex/Preg", "Preg")) |>
  group_by(study_compl) |>
  filter(any(arm %in% c("Plac", "None"))) |>
  ungroup() |>
  mutate(
    # complication = ifelse(complication == "Cardiac", "Bradycardia", complication),
    n = case_when(
      study_compl == "Zhao 2020cardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020cardiac", c(2, 3, 4), n),
      study_compl == "Zhao 2020pulm" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020pulm", c(2, 3, 4), n),
      study_compl == "Zhao 2020Hypotension" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020Hypotension", c(2, 3, 4), n),
      study_compl == "Li 2021bcardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Li 2021bcardiac", c(2, 3, 4), n),
      study_compl == "Li 2021bHypotension" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Li 2021bHypotension", c(2, 3, 4), n),
      .default = n
    ),
    arm_n = case_when(
      study_compl == "Zhao 2020cardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020cardiac", c(2, 3, 4), arm_n),
      study_compl == "Zhao 2020pulm" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020pulm", c(2, 3, 4), arm_n),
      study_compl == "Zhao 2020Hypotension" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Zhao 2020Hypotension", c(2, 3, 4), arm_n),
      study_compl == "Li 2021bcardiac" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Li 2021bcardiac", c(2, 3, 4), arm_n),
      study_compl == "Li 2021bHypotension" & arm_id == 2 ~ collapse_dichot_study_compl(adverse_meta_dat, "Li 2021bHypotension", c(2, 3, 4), arm_n),
      .default = arm_n
    ),
    arm = fct_collapse(arm, Plac = c("Plac", "None"))
  ) |>
  filter(!(study_compl %in% c("Zhao 2020cardiac") & arm_id %in% c(3, 4))) |>
  filter(!(study_compl %in% c("Zhao 2020pulm") & arm_id %in% c(3, 4))) |>
  filter(!(study_compl %in% c("Li 2021bcardiac") & arm_id %in% c(3, 4))) |>
  filter(!(study_compl %in% c("Zhao 2020Hypotension") & arm_id %in% c(3, 4))) |> 
  filter(!(study_compl %in% c("Li 2021Hypotension") & arm_id %in% c(3, 4)))

adverse_dex_meta_wide_dat <- adverse_dex_meta_dat |>
  # mutate(study = ifelse(study %in% c("Wang 2020d", "Li 2020"), paste0(study, "*"), study)) |>
  filter(!study %in% c("Wang 2020d", "Li 2020")) |> # not rcts
  arrange(refid, complication) |>
  pivot_wider(names_from = "arm", values_from = arm_n:n) |>
  group_by(study_compl) |>
  fill(arm_n_Plac:n_Dex) |>
  slice(2) |>
  ungroup() |>
  arrange(complication, year, study) |>
  left_join(rob2_meta_dat, by = "refid")

```

<caption_mg> `r figure_ref()` **Risk ratio** for bradycardia (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r complication_brady_meta, fig.width = 14, fig.height = 6, fig.align = "left"}
#| warning: false
# RESUME: complications risk difference meta-analysis
# add bradycardia definition
brady_meta_dat <- adverse_dex_meta_wide_dat |> 
  left_join(cardiac_compl |> select(refid, brady_defn), by = c("refid"))

adverse_meta <- metabin(
  n_Dex, arm_n_Dex, n_Plac, arm_n_Plac,
  data = brady_meta_dat,
  studlab = study,
  hakn = TRUE,
  sm = "RR",
  method.tau = "REML",
  # subset = !grepl("\\*", study),
  subset = complication == "Bradycardia",
  allstudies = FALSE
)  

# metaprop(n_Dex, arm_n_Dex, data = brady_meta_dat, subset = complication == "Bradycardia")
# metaprop(n_Plac, arm_n_Plac, data = brady_meta_dat, subset = complication == "Bradycardia")

temp_meta <- adverse_meta
temp_meta <- update(temp_meta, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

forest(adverse_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex",
  label.c = "Placebo",
  # rightcols = c("effect", "ci"),
  # rightlabs = c("RD ", "(95% CI)   "),
  just.addcols.right = "left",
  rightcols = c("effect", "ci", "brady_defn"),
  rightlabs = c("RR", "(95% CI)", "Bradycardia \nCriteria"),
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  xlab = "Favors: Dexmedetomidine                     Plac/None",
  addrows.below.overall = 4,
  text.addline1 = "NR: not reported; bpm: beats per minute."
)
```

<foot_mg> `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")`<br/> Similar arms combined in Li 2021b and Zhao 2020. </foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects and bradycardia --- funnel plot and limit meta-analysis. </caption_mg>

```{r dex_plac_brady_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta, pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

text(5.5, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

<foot_mg> Estimates (odds ratio and 95% CI) from random effects model --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</foot_mg>
:::

<caption_mg> `r figure_ref()` **Risk difference** for bradycardia (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r complication_brady_meta_rd, fig.width = 14, fig.height = 6, fig.align = "left"}
adverse_meta_rd <- update(adverse_meta, sm = "RD")

forest(adverse_meta_rd,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex",
  label.c = "Placebo",
  just.addcols.right = "left",
  rightcols = c("effect", "ci", "brady_defn"),
  rightlabs = c("RD", "(95% CI)", "Bradycardia \nCriteria"),
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pscale = 100,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-20, 20),
  xlab = "Favors: Dexmedetomidine                     Plac/None",
  addrows.below.overall = 4,
  text.addline1 = "NR: not reported; bpm: beats per minute."
)

```

<caption_mg> `r figure_ref()` **Risk ratio** for hypotension (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r complication_hypo_meta, fig.width = 14.5, fig.height = 6.75, fig.align = "left"}
#| warning: false 
# RESUME: hypotension
# add hypotension definition
adverse_dex_meta_hypo_dat <- adverse_dex_meta_wide_dat |> 
  mutate(detail_cardiac = ifelse(detail_cardiac == "NS", "NR", detail_cardiac)) |>
  left_join(hypotension_foot_dat |> select(refid, hypo_def), by = c("refid"))

adverse_meta <- metabin(
  n_Dex, arm_n_Dex, n_Plac, arm_n_Plac,
  data = adverse_dex_meta_hypo_dat,
  studlab = study,
  hakn = TRUE,
  sm = "RR",
  method.tau = "REML",
  # subset = !grepl("\\*", study),
  subset = complication == "Hypotension", # & !study  %in% c("Li 2021b", "Zhao 2020"),
  allstudies = FALSE
)  

# metaprop(n_Dex, arm_n_Dex, data = brady_meta_dat, subset = complication == "Hypotension")
# metaprop(n_Plac, arm_n_Plac, data = brady_meta_dat, subset = complication == "Hypotension")

temp_meta <- adverse_meta
temp_meta <- update(temp_meta, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

forest(adverse_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex",
  label.c = "Placebo",
  # rightcols = c("effect", "ci"),
  # rightlabs = c("RD ", "(95% CI)   "),
  just.addcols.right = "left",
  rightcols = c("effect", "ci", "detail_cardiac"),
  rightlabs = c("RR", "(95% CI)", "Hypotension \nCriteria"),
  # leftlabs = c("Complication &\nStudy", "Events", "TIVA\n Total", "Events", "Inhaled\n Total"),
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  # pscale = 100,
  pooled.events = TRUE,
  digits = 2, 
  print.pval.Q = FALSE,
  # xlim = c(-20, 20),
  xlab = "Favors: Dexmedetomidine                     Plac/None",
  addrows.below.overall = 4,
  text.addline1 = "NR: not reported."
)
```

<foot_mg> `r paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval), ".")` <br/> Similar arms combined in Li 2021b and Zhao 2020. </foot_mg>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects and hypotension --- funnel plot. </caption_mg>

```{r dex_plac_hypo_meta_funnel_limit, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
par(mar = c(4, 4, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta, pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors, studlab = TRUE, pos.studlab = 4, fs.smlab = 6, ff.smlab = "italic")

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")

text(4, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```

<foot_mg> Estimates (odds ratio and 95% CI) from random effects models --- unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "–", digit2(exp(temp_limit_meta$upper.random)), ")")`; adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "–", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</foot_mg>
:::

<caption_mg> `r figure_ref()` **Risk difference** for hypotension (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r complication_hypo_meta_rd, fig.width = 14, fig.height = 6.8, fig.align = "left"}
adverse_meta_rd <- update(adverse_meta, sm = "RD")

forest(adverse_meta_rd,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Dex",
  label.c = "Placebo",
  just.addcols.right = "left",
  rightcols = c("effect", "ci", "detail_cardiac"),
  rightlabs = c("RD", "(95% CI)", "Hypotension \nCriteria"),
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pscale = 100,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-20, 20),
  xlab = "Favors: Dexmedetomidine                     Plac/None",
  addrows.below.overall = 4,
  text.addline1 = "NR: not reported; bpm: beats per minute."
)

```

<caption_mg> `r figure_ref()` **Risk differences** for other complications --- myocardial infarction, other arrhythmia (excludes bradycardia), stroke, pulmonary, and renal (dexmedetomidine versus placebo or no interventions; randomized clinical trials). </caption_mg>

```{r complication_meta,  fig.width = 14, fig.height = 12, fig.align = "left"}
adverse_meta <- metabin(
  n_Dex, arm_n_Dex, n_Plac, arm_n_Plac,
  data = adverse_dex_meta_wide_dat,
  studlab = study,
  sm = "RD",
  hakn = FALSE,
  subgroup = complication,
  subset = !complication %in%  c("Bradycardia", "Hypotension") & !grepl("\\*", study),
  allstudies = FALSE
)  

forest(adverse_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Dex",
  label.c = "Placebo",
  # rightcols = c("effect", "ci"),
  # rightlabs = c("RD ", "(95% CI)   "),
  just.addcols.right = "center",
  rightcols = c("effect", "ci"), 
  rightlabs = c("RD", "(95% CI)"), 
  # leftlabs = c("Complication &\nStudy", "Events", "TIVA\n Total", "Events", "Inhaled\n Total"),
  # just.addcols.right = "right",
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  test.subgroup = FALSE,
  overall.hetstat = FALSE,
  print.subgroup.name = FALSE,
  overall = FALSE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pscale = 100,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  xlim = c(-20, 20),
  xlab = "Favors: Dexmedetomidine                            Plac/None            ",
  addrows.below.overall = 4,
  # text.addline1 = "*Non randomized trial."
)
```

<foot_mg> RD: risk ratio. <br/> Similar arms combined for Zhao 2020. </foot_mg>

<!-- ::: {.callout-note collapse="true" appearance="minimal" icon="false"} -->
<!-- #### <caption_mg> `r figure_ref()` Summary risk of bias for studies reporting complications (dexmedetomidine versus placebo or no intervention). </caption_mg> -->

<!-- ```{r rob2_summary_complications, fig.height = 3, out.width = "60%"} -->
<!-- rob_summary_fun(adverse_dex_meta_wide_dat$refid) -->
<!-- ``` -->
<!-- ::: -->

```{r complications_ram_meta}
adverse_ram_meta_dat <- adverse_meta_dat |>
  filter(refid %in% mel_ram_refid) |> 
  filter(complication == "Pneumonia")

adverse_ram_meta_wide_dat <- adverse_ram_meta_dat |>
  arrange(refid, complication) |>
  pivot_wider(names_from = "arm", values_from = arm_n:n) |>
  group_by(study_compl) |>
  fill(arm_n_None:n_Ram) |>
  slice(2) |>
  ungroup() |>
  arrange(complication, year, study) |>
  left_join(robinsi_meta_dat, by = "refid")

```

<caption_mg> `r figure_ref()` **Risk difference** in pneumonia (ramelteon versus no interventions; before-after studies). </caption_mg>

```{r complication_ram_meta,  fig.width = 14, fig.height = 2.5, fig.align = "left"}
adverse_ram_meta <- metabin(
  n_Ram, arm_n_Ram, n_None, arm_n_None,
  data = adverse_ram_meta_wide_dat,
  studlab = study,
  sm = "RD",
  subgroup = complication,
  allstudies = FALSE
)  

forest(adverse_ram_meta,
  allstudies = TRUE,
  random = FALSE,
  label.e = "Ramelteon",
  label.c = "None",
  # rightcols = c("effect", "ci"),
  rightlabs = c("RD ", "(95% CI)   "),
  just.addcols.right = "center",
  rightcols = c("effect", "ci"),
  # rightlabs = c("RR", "(95% CI)"),
  # leftlabs = c("Complication &\nStudy", "Events", "TIVA\n Total", "Events", "Inhaled\n Total"),
  # just.addcols.right = "right",
  colgap.right = "4mm",
  digits.TE = 3,
  digits.tau2 = 1,
  test.subgroup = FALSE,
  overall.hetstat = FALSE,
  print.subgroup.name = FALSE,
  overall = FALSE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pscale = 100,
  pooled.events = TRUE,
  digits = 1, 
  print.pval.Q = FALSE,
  # xlim = c(-20, 20),
  xlab = "Favors: Ramelteon                  None",
  addrows.below.overall = 4
)
```

## **Length of Stay**

<caption_mg> `r table_ref()` Length of stay according to procedure classification and comparator. </caption_mg>

```{r length_of_stay}
#| eval: true
los_tab <- contin_dat |>
  mutate(los_for_tables(contin_dat)) |>
  filter(if_any(los_m:los_diff_pval, ~ !is.na(.))) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> # age_table
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid" ) |> 
  mutate(
    refid_arm_id = paste0(refid, "-", arm_id),
    surg_groups = paste0(surgs_single_f, " - ", design_f_lab),
    mean_med = case_when(
      !is.na(los_m) ~ los_m,
      !is.na(los_med) ~ los_med
    ),
    drug_recode_abbr = fct_drop(drug_recode_abbr),
    calc_prop_25d = 100 * mean_med / 25,
    bar = case_when(
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(calc_prop_25d, "#A93226"),
      str_detect(drug_recode_abbr, "Ket") ~ bar_prop(calc_prop_25d, "#F39C12"),
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(calc_prop_25d, "#104E8B"),
      .default = bar_prop(calc_prop_25d, "#969696")
    )
  ) |>
  # select(refid, arm_id, arm_n, drug_recode_abbr, age_table, asa_ps_incl, surg_groups, study, los_table, bar, starts_with(("los"))) |>
  arrange(surg_groups, year, study, arm_id) |> 
  select(refid, refid_arm_id, study, study_l, arm_n, drug_recode_abbr, asa_ps_incl, age_table, los_table, bar, surg_groups, country)

# temp |> tabyl(drug_recode_abbr)

los_tab |>
  mutate(study_l = ifelse(row_number() > 1, "", study_l),
         country = ifelse(row_number() > 1, "", country),
         .by = refid) |> 
  group_by(surg_groups) |>
  gt(id = "one") |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "GI/Abd - Randomized Clinical Trial", "Thoracic - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "Oralmax - Randomized Clinical Trial", "GI/Abd - Before-After/Time Series", "Thoracic - Before-After/Time Series", "Spine - Prospective Cohort" )) |> 
  cols_hide(c(refid, refid_arm_id, study)) |>
  cols_label(
    study_l = "Study",
    arm_n = " N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = "PS",
    age_table = "    Age",
    los_table = "    LOS",
    bar = "0 – 25 days",
    country = "Country"
  ) |>
  gt_theme_mg() |> 
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(80),
    asa_ps_incl ~ px(60),
    age_table ~ px(100),
    los_table ~ px(100),
    bar ~ px(120),
    country ~ px(80)
    )  |> 
  fmt_markdown(columns = c(study_l, bar, age_table, los_table)) |> 
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, drug_recode_abbr,  bar))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study_l, age_table, los_table))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study_l, age_table, los_table, bar, drug_recode_abbr, asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Dex"))) |> 
  tab_style(style = list(cell_text(color = "#F39C12")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Ket"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n:los_table), rows = str_detect(drug_recode_abbr, "Mel|Ram"))) |> 
  tab_footnote(md("NR: not reported")) |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table, los_table))) |> 
  tab_footnote(md("ASA Physical Status."), locations = cells_column_labels(columns = c(asa_ps_incl)))
  
```

### *Pooled*

```{r los_meta, fig.width = 14, fig.height = 3, fig.align = "left"}
los_meta_dat <- contin_dat |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  relocate(drug_recode_abbr, .after = arm_id) |>
  rename(arm = drug_recode_abbr) |>
  filter(refid %in% los_tab$refid) |> 
  select(refid, study, design_f_lab, arm, arm_n, los_m, los_sd, los_med, los_rl, los_ru, los_iqrl, los_iqru, los_95l, los_95u) |> 
  rename_with(~ str_remove(.x, "los_")) |> 
  select(!matches("95"))

los_dex_meta_dat <- los_meta_dat |> 
  filter(arm %in% c("Dex", "Plac", "None")) |> 
  filter(str_detect(design_f_lab, "Rand")) |> 
  mutate(arm = fct_drop(fct_collapse(arm, Plac = c("Plac", "None")))) |> 
  group_by(study) |> 
  filter(max(n()) > 1) |> 
  filter(!n_distinct(arm) == 1) |> 
  ungroup() |> 
  pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  arrange(year) 

# One RCT
# los_ket_meta_dat <- los_meta_dat |> 
#   filter(arm %in% c("Ket", "Plac", "None")) |> 
#   filter(str_detect(design_f_lab, "Rand")) |> 
#   mutate(arm = fct_drop(fct_collapse(arm, Plac = c("Plac", "None")))) |> 
#   group_by(study) |> 
#   filter(max(n()) > 1) |> 
#   filter(!n_distinct(arm) == 1) |> 
#   ungroup() |> 
#   pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
#   mutate(year = str_extract(study, "\\d{4}")) |> 
#   arrange(year) 

los_mel_ram_meta_dat <- los_meta_dat |> 
  filter(arm %in% c("Mel", "Ram", "Plac", "None")) |> 
  mutate(arm = fct_drop(fct_collapse(arm, Plac = c("Plac", "None"))),
         arm = fct_collapse(arm, MelRam = c("Mel", "Ram"))) |> 
  filter(str_detect(design_f_lab, "Rand")) |> 
  group_by(study) |> 
  filter(max(n()) > 1) |> 
  filter(!n_distinct(arm) == 1) |> 
  ungroup() |> 
  pivot_wider(names_from = "arm", values_from = arm_n:iqru) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single), by = "refid") |> 
  arrange(year)

```

#### Dexmedetomidine

<caption_mg> `r figure_ref()` Mean difference in lengths of stay (dexmedetomidine versus placebo; randomized clinical trials). </caption_mg>

```{r los_dex_meta, fig.width = 14, fig.height = 5.5, fig.align = "left"}
los_dex_meta <- metacont(
  n.e = arm_n_Dex, 
  n.c = arm_n_Plac,
  common =  TRUE,
  mean.e = m_Dex,
  sd.e = sd_Dex,
  median.e = med_Dex,
  q1.e = iqrl_Dex,
  q3.e = iqru_Dex,
  min.e = rl_Dex,
  max.e = ru_Dex,
  mean.c = m_Plac,
  sd.c = sd_Plac,
  median.c = med_Plac,
  q1.c = iqrl_Plac,
  q3.c = iqru_Plac,
  min.c = rl_Plac,
  max.c = ru_Plac,
  data = los_dex_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  studlab = study
)

forest(los_dex_meta,
  weight.study = "random",
  common =  FALSE,
  label.e = "Dex     ",
  label.c = "Plac   ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  # digits.pval.Q = 2,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "right",
  print.pval.Q = FALSE,
  # sortvar = -TE,
  xlim = c(-5, 5),
  # at = c(-80, -60, -40, -20, 0, 20, 40),
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("MD ", "(95% CI)   ", "Procedure"),
  xlab = "Favors: Dex                                      Plac           ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4
)

```

<foot_mg> MD: mean difference; Dex: Dexmedetomidine.<br/> When the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, and/or range. </foot_mg>

#### Melatonin/Ramelteon

<caption_mg> `r figure_ref()` Mean difference in lengths of stay (melatonin or ramelteon versus placebo; randomized clinical trials). </caption_mg>

```{r los_mel_ram_meta, fig.width = 14, fig.height = 3.5, fig.align = "left"}
los_mel_ram_meta <- metacont(
  n.e = arm_n_MelRam, 
  n.c = arm_n_Plac,
  common =  TRUE,
  mean.e = m_MelRam,
  sd.e = sd_MelRam,
  median.e = med_MelRam,
  q1.e = iqrl_MelRam,
  q3.e = iqru_MelRam,
  min.e = rl_MelRam,
  max.e = ru_MelRam,
  mean.c = m_Plac,
  sd.c = sd_Plac,
  median.c = med_Plac,
  q1.c = iqrl_Plac,
  q3.c = iqru_Plac,
  min.c = rl_Plac,
  max.c = ru_Plac,
  data = los_mel_ram_meta_dat,
  sm = "MD",
  method.tau = "REML",
  hakn = FALSE,
  prediction = TRUE,
  studlab = study
)

forest(los_mel_ram_meta,
  weight.study = "random",
  common =  FALSE,
  label.e = "Mel/Ram",
  label.c = "Plac   ",
  print.tau2 = FALSE,
  print.tau = TRUE,
  print.tau.ci = TRUE,
  digits = 1,
  digits.sd = 1,
  digits.mean = 1,
  digits.tau = 1,
  # digits.pval.Q = 2,
  print.I2.ci = TRUE,
  fs.xlab = 10,
  just.addcols.right = "right",
  print.pval.Q = FALSE,
  # sortvar = -TE,
  xlim = c(-5, 5),
  at = c(-5, -2.5, 0, 2.5, 5),
  rightcols = c("effect", "ci", "surgs_single"),
  rightlabs = c("MD ", "(95% CI)   ", "Procedure"),
  xlab = "Favors: Dex                                      Plac           ",
  smlab = "Mean Difference (days)",
  addrows.below.overall = 4
)

```

<foot_mg> MD: mean difference; Mel: melatonin; Ram: ramelteon.<br/> When the mean or standard deviation were not reported, they were imputed from from the median, interquartile range, and/or range. </foot_mg>

## **Mortality**

```{r mortality_data}
#| eval: true
mortality_dat <- dichot_dat |>
  filter(if_any(starts_with("mort"), ~ !is.na(.x))) |> 
  # filter(arm_n != mort_update_arm_n) |> 
  # select(refid, arm_n, mort_update_arm_n)
  mutate(
    # arm_n use mort_update_arm_n if different
    arm_n = ifelse(!is.na(mort_update_arm_n), mort_update_arm_n, arm_n)
  ) |> 
  select(refid, refid_c, arm_id, year, study, study_l, design_f_lab, arm_n, matches("_n|per") & starts_with("mort"), -mort_update_arm_n) |> 
  pivot_longer(
    cols = starts_with("mort"),
    names_to = "estimand",
    values_to = "estimate",
    values_drop_na = TRUE
  ) |>
  mutate(
    mort_period = str_remove(estimand, "_.*"),
    estimand = str_replace(estimand, ".*_(.*)$", "\\1")
  ) |>
  pivot_wider(
    names_from = estimand,
    values_from = estimate
  ) |>
  mutate(
    mort_period = case_when(
      str_detect(mort_period, "hosp") ~ "Hospital",
      str_detect(mort_period, "mort30") ~ "30-day",
      str_detect(mort_period, "mort90") ~ "90-day",
      str_detect(mort_period, "mort1") ~ "1-year"
    ), 
    per = per/100
  ) |>
  rename(mort_n = n, mort_per_rep = per) |>
  arrange(refid_c, arm_id) |>
  mutate(
    ref_arm_n = arm_n,
    ref_mort_n = mort_n
  ) |>
  group_by(refid_c) |>
  mutate(
    ref_arm_n = ifelse(row_number() > 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() > 1, NA, ref_mort_n)
  ) |>
  fill(ref_arm_n, ref_mort_n) |>
  mutate(
    ref_arm_n = ifelse(row_number() == 1, NA, ref_arm_n),
    ref_mort_n = ifelse(row_number() == 1, NA, ref_mort_n)
  ) |>
  ungroup() |> 
  left_join(study_char_dat |> select(refid, surgs_single_f), by = "refid") |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(asa_combine |> select(refid, arm_id, asa_ps_incl), by = c("refid", "arm_id")) |> 
  mutate(mort_percent = mort_n/arm_n,
         mort_period = factor(mort_period, levels = c("Hospital", "30-day", "90-day", "1-year"))) |>
  select(refid, refid_c, arm_id, year, study, study_l, arm_n, drug_recode_abbr, asa_ps_incl, age_table, design_f_lab, mort_n, mort_percent, ref_mort_n, ref_arm_n, mort_period, mort_per_rep, surgs_single_f)

dex_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Dex")
ket_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Ket")
mel_ram_mort_refid <- refid_detect_select_fun(mortality_dat, drug_recode_abbr, "Mel|Ram")

# skim(mortality_dat)
```

### Dexmedetomidine

<caption_mg> `r table_ref()` Reported in-hospital, 30-day, 90-day, and 1-year mortality in dexmedetomidine randomized clinical trials by comparator and surgical category.</caption_mg>

```{r mortality_dex_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  filter(refid %in% dex_mort_refid) |> 
  group_by(mort_period, study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(mort_percent * 100, "#A93226"),
      str_detect(drug_recode_abbr, "Ulin|MS|Prop") ~ bar_prop(mort_percent * 100, "#104E8B"),
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "—"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  rename(drug_recode = drug_recode_abbr) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  arrange(year, refid_c, arm_id) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day")) |> 
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode = "Drug",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_recode, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, drug_recode, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  # tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Ulin|MS|Prop"))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Dex"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    drug_recode ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Dex: Dexmedetomidine; Ulin: Ulinastatin; MS: morphine sulfate; Plac; placebo.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table))) |> 
  tab_footnote("Different lengths of follow-up from the same trial.", locations = cells_body(columns = study_l, rows = study %in% c("Su 2016", "Zhang 2019b"))) 

```

```{r mortality_dex_hosp_30d_meta}
#| eval: true
mortality_dex_dat <- mortality_dat |>
  filter(refid %in% dex_mort_refid, mort_period %in% c("Hospital", "30-day")) |>
  rename(arm = drug_recode_abbr) |>
  filter(!str_detect(arm, "Ulin")) |>
  # exclude Qu 2023 hospital; retain 30-day
  filter(!(study == "Qu 2023" & mort_period == "Hospital")) |> 
  # to include hospital and 30-day if reporte
  # group_by(study) |>
  # mutate(
  #   study = case_when(
  #     n() == 4 & mort_period == "Hospital" ~ paste(study, "Hosp"),
  #     n() == 4 & mort_period == "30-day" ~ paste(study, "30-d"),
  #     .default = study
  #   )
  # ) |>
  # ungroup() |>
  select(refid, study, arm, mort_n, arm_n, mort_period)

trts_mort_dex <- levels(fct_drop(mortality_dex_dat$arm))

pairwise_mort_dex_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_dex_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

mortality_mel_ram_dat <- mortality_dat |>
  filter(refid %in% mel_ram_mort_refid, mort_period %in% c("Hospital", "30-day"), str_detect(design_f_lab, "Rand")) |>
  rename(arm = drug_recode_abbr) |>
  # group_by(study) |>
  # mutate(
  #   study = case_when(
  #     n() == 4 & mort_period == "Hospital" ~ paste(study, "Hosp"),
  #     n() == 4 & mort_period == "30-day" ~ paste(study, "30-d"),
  #     .default = study
  #   )
  # ) |>
  # ungroup() |>
  mutate(arm = fct_collapse(arm, "Mel/Ram" = c("Mel", "Ram"), "Plac/None" = c("Plac", "None"))) |> 
  select(refid, study, arm, mort_n, arm_n, mort_period)

trts_mort_mel_ram <- levels(fct_drop(mortality_mel_ram_dat$arm))

pairwise_mort_mel_ram_dat <- pairwise(
  treat = arm,
  event = mort_n,
  n = arm_n,
  studlab = study,
  allstudies = TRUE,
  data = mortality_mel_ram_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

## nma ------------------------------------------------ (2023-04-11 16:36) @----
# dex_plac_refid <- pairwise_dat |> 
#   filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex")) |> 
#   pull(refid)
# 
# mort_dex_nma <- netmeta(
#   pairwise_mort_dex_dat,
#   random = FALSE,
#   prediction = FALSE,
#   seq = trts_mort_dex,
#   sm = "RR",
#   reference.group = "Plac"
# )
# 
# forest(mort_dex_nma, pscale = 100)
# netsplit(mort_dex_nma, order = trts_mort_dex) %>%
#   forest(.,
#     show = "all",
#     xlab = "Risk Difference",
#     xlim = c(-4, 4),
#     pscale = 100,
#     # leftcols = c("studlab", "k"),
#     rightlabs = c("RD", "(95% CI)")
#   )
```

### Ketamine

No studies

<br/>

### Melatonin/Ramelteon

<caption_mg> `r table_ref()` Reported in-hospital, 30-day, 90-day, and 1-year mortality in melatonin and ramelteon studies by comparator and surgical category.</caption_mg>

```{r mortality_mel_ram_gt}
#| eval: true
mortality_dat |>
  arrange(mort_period, surgs_single_f, year, study, arm_id) |>
  filter(refid %in% mel_ram_mort_refid) |> 
  group_by(study_l) |>
  mutate(
    surgs_single_f = as.character(surgs_single_f),
    study_l = ifelse(row_number() == 1, study_l, NA),
    study = ifelse(row_number() == 1, study, NA),
    across(c(surgs_single_f, asa_ps_incl,), ~ ifelse(row_number() > 1, NA, .x)),
    # bar = bar_prop(50, color_1),
    bar = case_when(
      str_detect(drug_recode_abbr, "Mel|Ram") ~ bar_prop(mort_percent * 100, "#A93226"),
      str_detect(drug_recode_abbr, "Ulin|MS|Prop") ~ bar_prop(mort_percent * 100, "#104E8B"),
      str_detect(drug_recode_abbr, "Dex") ~ bar_prop(mort_percent * 100, "#A93226"),
      .default = bar_prop(mort_percent * 100, "#969696")
    ),
  ) |>
  ungroup() |>
  mutate(
    # de Jonghe 2014 reported in hospital and 90-day
    study_l = ifelse(refid == 16552 & arm_id == 1, "[de Jonghe 2014](evidence_tables.html#16552)", study_l),
    surgs_single_f = ifelse(refid == 16552 & arm_id == 1, "Ortho", surgs_single_f),
    rd_ci = ifelse(!is.na(ref_mort_n), rd_per_ci_fun(mort_n, arm_n, ref_mort_n, ref_arm_n, digits = 1), "—"),
    mort_n_percent = n_per_fun(mort_n, arm_n, 1)
  ) |> 
  rename(drug_recode = drug_recode_abbr) |> 
  relocate(surgs_single_f, .before = asa_ps_incl) |> 
  relocate(mort_n_percent, .before = bar) |> 
  select(-mort_n) |> 
  group_by(mort_period) |> 
  gt(id = "one") |> 
  cols_hide(c(refid, refid_c, arm_id, year, study, design_f_lab, mort_percent, ref_mort_n, ref_arm_n, mort_per_rep)) |>
  row_group_order(groups = c("Hospital", "30-day", "90-day")) |> 
  # row_group_order(groups = c("Hospital", "30 Day", "90 Day", "1 Year")) |> 
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode = "Drug",
    surgs_single_f = "Surgery",
    age_table = "Age",
    asa_ps_incl = "PS",
    mort_n_percent = "N (%)",
    bar = md("0 - 100%"),
    rd_ci = "RD (95% CI)"
  ) |> 
  fmt_markdown(columns = c(study_l, bar, age_table)) |>
  tab_spanner(label = "Mortality", columns = c(mort_n_percent, bar)) |> 
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |> 
  gt_theme_mg() |> 
  tab_style(style = cell_text(align = "left"),   locations = cells_column_labels(columns = c(study, drug_recode, surgs_single_f))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(arm_n, age_table, asa_ps_incl, rd_ci))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(study, drug_recode, surgs_single_f, bar))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(rd_ci))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_column_labels(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "right"),  locations = cells_body(columns = c(mort_n_percent))) |>
  tab_style(style = cell_text(align = "center",  font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |> 
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Mel|Ram"))) |> 
  tab_style(style = list(cell_text(color = "#104E8B")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Ulin|MS|Prop"))) |>
  # tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode, age_table, mort_n_percent), rows = str_detect(drug_recode, "Dex"))) |> 
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |> 
  cols_width(
    study_l ~ px(140),
    arm_n ~ px(45),
    drug_recode ~ px(70),
    surgs_single_f ~ px(95),
    age_table ~ px(100),
    asa_ps_incl ~ px(60),
    mort_n_percent ~ px(80),
    bar ~ px(100),
    rd_ci ~ px(145)
  ) |> 
  # opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("ASA PS: American Society of Anesthesiologists Physical Status; RD: risk difference; GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Ram: ramelteon; Mel: melatonin; Plac; placebo.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD)[Range]{IQR}."), locations = cells_column_labels(columns = c(age_table))) |> 
  tab_footnote("Randomized clinical trial.", locations = cells_body(columns = study_l, rows = !str_detect(study_l, "Hokuto") & !is.na(study_l))) |> 
  tab_footnote("Before-after design.", locations = cells_body(columns = study_l, rows = study %in% c("Hokuto 2020")))
```

### *Pooled*

#### Dexmedetomidine

<caption_mg> `r figure_ref()` Risk difference for hospital and 30-day mortality -- dexmedetomidine compared with placebo or no intervention. </caption_mg>

```{r dex_mort_meta, fig.dim = c(14, 6), fig.align = "center"}
dex_mort_meta_dat <- pairwise_mort_dex_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(treat1 == "Plac" & treat2 == "Dex") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid)

# total_meta(dex_mort_meta_dat)
# refid_meta_fun(dex_mort_meta_dat)

dex_plac_mort_meta <- metabin(event2, n2, event1, n1,
  data = dex_mort_meta_dat,
  studlab = study,
  # cluster = refid,
  sm = "RD",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  subgroup = mort_period
)

# small study effects; here to have result of Harbord test
# temp_meta <- dex_plac_mort_meta
# temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
# temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# summary(dex_plac_meta)
forest(dex_plac_mort_meta,
  allstudies = TRUE,
  # random = FALSE,
  label.e = "Dex     ",
  label.c = "Plac     ",
  rightcols = c("effect", "ci"),
  rightlabs = c("RD", "(95% CI)"),
  # just.addcols.right = "right",
  digits.TE = 3,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 100,
  digits = 2, 
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  test.subgroup.random = FALSE,
  test.subgroup.common = FALSE,
  print.pval.Q = FALSE,
  xlab = "Favors: Dexmedetomidine               Placebo/None",
  addrows.below.overall = 4
)

```

<foot_mg> Dex: dexmedetomidine; Plac: placebo.  </foot_mg><br/>

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <caption_mg> `r figure_ref()` Mortality for dexmedetomidine compared with placebo or no intervention small study effects --- funnel plot. </caption_mg>

```{r dex_plac_meta_funnel_limit_mort, fig.dim = c(7, 5.5), out.width = "70%", fig.align = "center"}
# {r name, fig.dim = c(6, 6), out.width = "60%", fig.align = "center"}
# {r dex_plac_meta_funnel_limit, out.width = "85%", out.height = "100%", fig.align = "center"}
dex_plac_mort_meta <- update(dex_plac_mort_meta, sm = "OR", subgroup = NULL)
harbord <- metabias(dex_plac_mort_meta, method.bias = "Harbord")$pval
# temp_limit_meta <- limitmeta(dex_plac_mort_meta)
# limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")
par(mar = c(4, 4, 2, 1))
par(bty = "n", xaxt = "s", yaxt = "s")

funnel(dex_plac_mort_meta,
  ylim = c(2.0, 0.0), xlim = c(0.05, 20), 
  pch = 20, 
  contour = c(0.9, 0.95, 0.99), 
  col.contour = limit_colors, 
  studlab = TRUE, 
  pos.studlab = 4,
  fs.smlab = 6, 
  ff.smlab = "italic"
)

legend(0.1, 0.02, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
# text(0.3, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```
:::

#### Melatonin/Ramelteon

<caption_mg> `r figure_ref()` Risk difference for hospital and 30-day mortality -- melatonin or ramelteon compared with placebo or no intervention. </caption_mg>

```{r mel_ram_mort_meta, fig.dim = c(14, .5), fig.align = "center"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
mel_ram_mort_meta_dat <- pairwise_mort_mel_ram_dat |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  left_join(rob2_meta_dat, by = "refid") |> 
  filter(treat1 == "Plac/None" & treat2 == "Mel/Ram") |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, mort_period, refid)

# total_meta(mel_ram_mort_meta_dat)
# refid_meta_fun(mel_ram_mort_meta_dat)

mel_ram_plac_mort_meta <- metabin(event2, n2, event1, n1,
  data = mel_ram_mort_meta_dat,
  studlab = study,
  sm = "RD",
  method = "MH",
  method.tau = "REML",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  subgroup = mort_period
)

# summary(mel_ram_plac_meta)
forest(mel_ram_plac_mort_meta,
  allstudies = TRUE,
  random = TRUE,
  label.e = "Mel/Ram     ",
  label.c = "Plac/None ",
  rightcols = c("effect", "ci"),
  rightlabs = c("RD", "(95% CI)"),
  just.addcols.right = "right",
  digits.TE = 1,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  pscale = 100,
  digits = 2, 
  subgroup = TRUE,
  test.subgroup.random = FALSE,
  test.subgroup.common = FALSE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  xlab = "Favors: Mel/Ram              Placebo/None",
  addrows.below.overall = 4
)
```

<foot_mg> Mel: melatonin; Ram: ramelteon; Plac: placebo. </foot_mg> <a id="figure-4"></a>

<!-- ## Study Characteristics -->

## **Risk of Bias**

### Randomized

<caption_mg> `r figure_ref()` Summary risk of bias assessment for randomized clinical trials. </caption_mg>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_dat |>
  filter(!is.na(Study) & refid %in% kq6_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind", weighted = FALSE)
```

<caption_mg> `r figure_ref()` Risk of bias assessments for randomized clinical trials. </caption_mg>

```{r rob_overall_study, out.width = "55%", fig.height = 16}
rob_traffic_light(rob_temp_dat, psize = 4, tool = "ROB2", colour = "colourblind")
```

### Nonrandomized

<caption_mg> `r figure_ref()` Summary risk of bias assessment for nonrandomized studies. </caption_mg>

```{r nrsi_summary_overall, fig.height = 3, out.width = "60%"}
robinsi_temp_dat <- robinsi_dat |>
  filter(!is.na(Study) & refid %in% kq6_refid) |> 
  filter(!Study %in% c("Memtsoudis 2019g", "Weinstein 2018d", "Ke 2022c")) |> 
  mutate(
    Study = str_replace(Study, "(\\d{4})[a-g]", "\\1"),
  ) |> 
  select(-refid)

rob_summary(robinsi_temp_dat, tool = "ROBINS-I", colour = "colourblind", weighted = FALSE)
```

<caption_mg> `r figure_ref()` Risk of bias assessments for nonrandomized studies. </caption_mg>

```{r nrsi_overall_study, out.width = "55%", fig.height = 4.25}
rob_traffic_light(robinsi_temp_dat, psize = 4, tool = "ROBINS-I", colour = "colourblind")
```

## **References** {#references}
