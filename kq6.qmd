---
title: "K6: Delirium Prophylaxis"
editor: source
toc-title: "Delirium Prophylaxis"
toc-location: "left"
toc-depth: 4
toc_float: 
  collapsed: false
tbl-cap-location: "top"
page-layout: full
css: styles.css
tables:
      style: Table
      caption:
        pre: "Table "
        sep: " -- "
bibliography: "bib/kq6.bib"
csl: jama.csl
link-citations: no
nocite: '@*'
---

<!-- kq6.bib updated 2023-02-21 -->

## **Key Question**

Among older patients undergoing surgery and anesthesia, do dexmedetomidine, ketamine, ramelteon, or melatonin administered during the perioperative period decrease the risk of postoperative delirium or other adverse cognitive outcomes?

<!-- setup -------------------------------------------- (2022-12-24 16:56) @ --->

```{r read_data}
#| include: false
# CODE: * read data
source("code/readfiles_geri_2022-11-16.R")
study_char_dat <- data_kq(study_char_dat, kq6_refid)
study_arm_dat <- data_kq(study_arm_dat, kq6_refid)
contin_dat <- data_kq(contin_dat, kq6_refid)
dichot_dat <- data_kq(dichot_dat, kq6_refid)
likert_dat <- data_kq(likert_dat, kq6_refid)
```

```{r rob2_data}
# identify studies with disagreements
rob2_conflict_refid <- rob_dat |> 
  select(refid, starts_with("assessor")) |> 
  distinct() |> 
  group_by(refid) |> 
    filter(n() > 1) |> 
  ungroup() |> 
  select(refid) |> 
  distinct()

# reconciled only kq6
rob2_reconciled_dat <- rob_dat |>
  select(refid, user, starts_with("assessor")) |>
  filter(!refid %in% rob2_conflict_refid) |>
  group_by(refid) |>
  slice(1) |>
  ungroup() |>
  left_join(study_char_dat |> select(refid, study), by = "refid") |>
  mutate(year = str_extract(study, "\\d{4}")) |> 
  arrange(year, study) |> 
  rename_with(~ str_replace(.x, "assessor_domain", "D")) |>
  rename(Overall = assessor_overall, Study = study) |>
  select(refid, Study, D1:Overall)
```

```{r delirium_refids_check}
#| eval = FALSE
# any of delirium_dichot_refid, delirium_contin_refid, delirium_likert_refid 
kq6_refid %in% delirium_refid
kq6_refid %in% cogfunc_refid
kq6_refid[!kq6_refid %in% c(delirium_refid, cogfunc_refid)]
```

## **Outcome Importance Rankings**

<font size = 4> `r table_ref()`</font> Rankings for the 5 most important outcomes (11 respondents).

```{r outcome_priority}
#| include: true
#| eval: true
# CODE: outcome priority rankings
# note also in appendix
outcome_dat <- rankings("KQ6")
outcome_tab(outcome_dat, 11)
```

### Reporting Frequency

<font size = 4> `r table_ref()` Dichotomous or count outcomes. </font>

```{r dichot_outcome_freq}
# CODE: reporting frequency tabulation
dichot_freq_fun(dichot_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

<font size = 4> `r table_ref()` Continuous outcomes. </font>

```{r cont_outcome_freq}
contin_freq_fun(contin_dat)
```

<font size = 4> `r table_ref()` Likert or ordinal outcomes. </font>

```{r likert_outcome_freq}
likert_freq_fun(likert_dat, "ADL: activities of daily living; NCR: neurocognitive recovery; NCD: neurocognitive disorder; QoR: quality of recovery; ")
```

## **Included Studies**

<font size = 4> `r table_ref()` Number of studies by design. </font>

<!-- Number of studies by design ----------------------- (2022-12-28 10:44) @ --->

```{r studies_design}
# CODE: study design table â€” design and number; no duplicate counting
study_char_dat |>
  filter(refid %in% kq6_refid) |>
  arrange(year) |> 
  group_by(linked_references_all_refid) |> # count 1 for multiple pubs from single study
  slice(1) |> 
  ungroup() |> 
  # select(refid, study, linked_references_all_refid, design_f_lab) |> # to check studies > 1 report
  select(refid, study, design_f_lab) |>
  group_by(design_f_lab, .drop = TRUE) |>
  summarise(total = n()) |>
  adorn_totals("row") |>
  gt(id = "one") |>
  cols_label(design_f_lab = "Design", total = "Studies") |>
  cols_width(
    # design_f_lab ~ px(200),
    design_f_lab ~ "1.8in",
    total ~ ".5in"
  ) |>
  gt_theme_mg() |> 
  tab_style(
    style = list(
      cell_fill(color = "#E4F3FE"),
      cell_text(weight = "bold"),
      cell_borders(sides = c("top", "bottom"), color = "#9A9EA1", style = "solid", weight = px(1.3))
    ),
    locations = cells_body(
      rows = design_f_lab == "Total"
    )
  ) |> 
  tab_style(
    style = list(
      cell_text(align = "left")),
      locations = cells_body(
        columns = design_f_lab
      )
    ) |> 
  tab_footnote("Counted randomized clinical trials with more than 1 publication only once (applied to 2 trials with 2 publications).")
```

### Design, centers, country, and surgery

<font size = 4> `r table_ref()` Study design, enrollment, centers, country, and surgery (see [References](#references) for citations). </font>

<!-- design, enrollment, centers ... ------------------- (2022-12-28 10:44) @ --->

```{r drugs_by_arm}
#| message: false
# CODE: * drugs & recode drugs/comparators so that usable; "other" category recoded to comparator
# drugs_dat <- study_arm_dat include drug arm data; adds kq5/6 arms
## drugs; from kq6, add kq5 arm drugs ----------------- (2023-01-16 13:46) @----
# drugs for kq5 studies; needed to fill in "missings" for kq6 arms coded as kq5 arms
kq5_drug_by_arm <- read_csv("data/kq5_drug_by_arm.csv") |> 
  rename(drug = drug_f) |> 
  mutate(drug = as.character(drug)) |> 
  select(refid, arm_id, drug, control_desc)

drugs_dat <- study_arm_dat |>
  select(refid, design_f_lab, study, study_l, study_l_w_linked, study_id, arm_id, arm_n, arm_kq6_proph_meds, kq6_control_desc:kq6_notes, multiple_kq) |>
  rename_with(~ str_replace(., "kq6_", ""), everything()) |>
  rename_with(~ str_replace(., "dex_", "dexmed_"), everything()) |>
  mutate(
    drug = case_when(
      !is.na(dexmed) ~ dexmed,
      !is.na(ketamine) ~ ketamine,
      !is.na(melatonin) ~ melatonin,
      !is.na(ramelteon) ~ ramelteon,
      !is.na(ulinastatin) ~ ulinastatin, # all missing
      !is.na(none) ~ none
    ),
    drug = str_replace(drug, "kq6_", ""),
    drug = firstup(drug)
  ) |>
  relocate(drug, .after = arm_n) |>
  # update drug and control description for "kq5" arms
  left_join(kq5_drug_by_arm, by = c("refid", "arm_id")) |>
  mutate(
    drug = coalesce(drug.x, drug.y),
    control_desc = coalesce(control_desc.x, control_desc.y),
    control_desc = firstup(control_desc),
    arm_proph_meds = ifelse(is.na(arm_proph_meds), "kq5_arm", arm_proph_meds)
  ) |>
  select(-matches("\\.x|\\.y")) |>
  mutate(
    drug_f = fct(drug,
      levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin", "Midazolam", "Haloperidol", "None", "Placebo", "Other")
    ),
    drug_f = fct_collapse(drug_f, "Control" = c("None", "Placebo", "Other")),
  ) |>
  group_by(refid) |>
  mutate(
    drug_study = case_when( # study drug
      if_any(drug_f, ~ . == "Dexmedetomidine") ~ "Dexmedetomidine",
      if_any(drug_f, ~ . == "Ketamine") ~ "Ketamine",
      if_any(drug_f, ~ . == "Melatonin") ~ "Melatonin",
      if_any(drug_f, ~ . == "Ramelteon") ~ "Ramelteon"
      # TRUE ~ NA_character_ for verification
    ),
    drug_study = fct(drug_study, levels = c("Dexmedetomidine", "Ketamine", "Melatonin", "Ramelteon")),
    drug_recode = case_when(
      str_detect(other_spec, "Midazolam and propofol") ~ "Midazolam/propofol",
      str_detect(other_spec, "Midazolam and sevoflurane") ~ "Midazolam/sevoflurane",
      str_detect(other_spec, "[Mm]idazolam") ~ "Midazolam",
      str_detect(other_spec, "[Ss]ufentanil") ~ "Sufentanil",
      str_detect(other_spec, "[Rr]hythim") ~ "Rhythim",
      str_detect(other_spec, "[Pp]ropofol") ~ "Propofol",
      str_detect(other_spec, "[Mm]orphine") ~ "Morphine",
      str_detect(other_spec, "[Pp]regabalin") ~ "Pregabalin",
      .default = drug
    ),
    drug_recode = ifelse(refid == 2748 & arm_id == 4, "Dexmedetomidine/Pregabalin", drug_recode),
    drug_recode = ifelse(refid == 13406 & arm_id == 3, "Dexmedetomidine/Ulinastatin", drug_recode),
    drug_recode = ifelse(refid == 13393 & arm_id == 2, "Dexmedetomidine/Ulinastatin", drug_recode),
    # HERE
    drug_recode = fct(drug_recode,
      levels = c("Dexmedetomidine", "Dexmedetomidine/Pregabalin", "Dexmedetomidine/Ulinastatin", "Ketamine", "Melatonin", "Ramelteon", "Ulinastatin", "Haloperidol", "Midazolam", "Midazolam/propofol", "Midazolam/sevoflurane", "Morphine", "Pregabalin", "Propofol", "Rhythim", "Sufentanil", "Placebo", "None")
    ),
    drug_recode_abbr = fct_recode(drug_recode, Dex = "Dexmedetomidine", "Dex/Preg" = "Dexmedetomidine/Pregabalin", "Dex/Ulin" = "Dexmedetomidine/Ulinastatin", Ket = "Ketamine", Mel = "Melatonin", Ram = "Ramelteon", Ulin = "Ulinastatin", Hal = "Haloperidol", Mid = "Midazolam", "Mid/Prop" = "Midazolam/propofol", "Mid/Sevo" = "Midazolam/sevoflurane", MS = "Morphine", Preg = "Pregabalin", Prop = "Propofol", Rhyth = "Rhythim", Sufen = "Sufentanil", Plac = "Placebo"),
  ) |>
  ungroup() |>
  relocate(c(drug, drug_f, drug_recode, drug_recode_abbr, drug_study), .after = arm_id) |>
  relocate(c(other_spec, interv_desc, control_desc), .after = last_col()) |>
  arrange(refid, drug_study) |>
  fill(drug_study) |>
  arrange(refid, arm_id)
```

```{r drug_tables}
#| eval = FALSE
# CODE: eval = FALSE; drug and drug_recode can save to desktop; working only 
drugs_dat |> tabyl(drug)
drugs_dat |> tabyl(drug_recode)
drugs_dat |> tabyl(drug_recode_abbr)

drugs_dat |>
    labelled::set_variable_labels(
    drug_recode = "Drug(s)",
  ) |> 
  select(drug_recode) |>
  tbl_summary(
    # label = list(drug_recode ~ "Drug(s)")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |>
  gt_theme_mg() |> 
  as.data.frame() |> 
  select(5:7) |> 
  writexl::write_xlsx("/Users/mgrant/Desktop/temp.xlsx")


temp <- drugs_dat |> 
  select(refid, study, contains("drug"), other_spec, contains("_desc"))

writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")
writexl::write_xlsx(temp, "/Users/mgrant/Desktop/arm_comparator.xlsx")
```

```{r included_studies_table}
#| echo: false
included_dat <- study_char_dat |>
  mutate(study_l = study_l_w_linked) |> 
  select(refid, starts_with("design"), study_l, year, n_enroll, n_analyze, centers, country, non_vh_hdi, starts_with("surg")) |>
  # select(refid, study, starts_with("surg")) |> # compile surgeries
  rename_with(~ gsub("surg_", "", .x, fixed = TRUE)) |>
  mutate(across(various:other, ~ gsub("surg_", "", .x, fixed = TRUE)),
    ortho_any = ifelse(if_any(contains("ortho"), ~ !is.na(.x)), "ortho", NA),
    opth = ifelse(str_detect(other_desc, "[Cc]ataract") | !is.na(opth), "optho", opth),
    gi = ifelse(!is.na(colorectal) | !is.na(gi_other) | !is.na(abdominal), "GI/Abdominal", NA),
    across(c(various, cardiac, gyn, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other), ~ firstup(.x)),
  ) |>
  unite("surgs", various, cardiac, gyn, gi, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other, sep = "|", remove = FALSE, na.rm = TRUE) |>
  select(-c(various, abdominal, cardiac, colorectal, gyn, gi, general, headneck, hepatic, neuro, opth, oralmax, ortho_any, ent, plastic, spine, thoracic, urol, vasc, other, design_other, gi_other, starts_with("ortho"), list, other_desc, starts_with("hip"))) |>
  mutate(
    surgs = ifelse(str_count(surgs, "\\|") > 3, "Various", surgs)
  ) |>
  left_join(drugs_dat |> group_by(refid) |> slice(1) |> ungroup() |> select(refid, drug_study), by = "refid") |>
  # create new factor for table as gt not arranging properly
  mutate(
    drug_design = fct(paste0(drug_study, " - ", design_f_lab),
      levels = c(
        "Dexmedetomidine - Randomized Clinical Trial",
        "Dexmedetomidine - Nonrandomized Trial",
        "Ketamine - Randomized Clinical Trial",
        "Ketamine - Prospective Cohort",
        "Melatonin - Randomized Clinical Trial",
        "Ramelteon - Randomized Clinical Trial",
        "Ramelteon - Before-After/Time Series"
      )
    )
  ) |>
  arrange(drug_design, surgs, study_l) |>
  select(refid, study_l, centers, n_enroll, country, drug_design, surgs, non_vh_hdi)
# 
# included_dat |>
#   mutate(drug_design = paste(drug_study, design_f_lab)) |>
#   filter(str_detect(drug_design, "NA"))
#   

included_dat |>
  group_by(drug_design) |>
  gt(id = "one") |>
  cols_label(
    refid = "ID",
    study_l = "Study",
    n_enroll = "Enrolled",
    country = "Country",
    centers = "Centers",
    surgs = "Surgery"
   ) |>
  cols_hide(non_vh_hdi) |>
    fmt_markdown(columns = c(study_l)) |> 
  cols_width(
    refid ~ px(60),
    study_l ~ px(200),
    centers ~ px(40),
    n_enroll ~ px(55),
    country ~ px(100),
    surgs ~ px(220)
  ) |> 
  # opt_horizontal_padding(scale = 2) |>
  tab_footnote(
    footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."),
    locations = cells_column_labels(columns = country)
  ) |>
  tab_footnote(
    footnote = md("Non very-high [Human Development Index](https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index) country."),
    locations = cells_body(columns = country, rows = !is.na(non_vh_hdi))
  ) |>
  tab_footnote(
        footnote = md("Various indicates more than 4 different types of surgery."),
        locations = cells_column_labels(columns = surgs)
      ) |>
  gt_theme_mg() |>
  tab_style(
    style = cell_text(align = "center"),
    locations = cells_column_labels(
      columns = c("refid")
    )
  ) |> 
  opt_footnote_marks(marks = "letters") |> 
  tab_footnote("GI: gastrointestinal; Ortho: orthopedic; Neuro: neurological; Oralmax: oral maxillofacial; Vasc: vascular.")
```

### Country Summary

<font size = 4> `r table_ref()` Summary of studies by country where conducted. </font>

```{r country}
# CODE: table of countries
study_char_dat |>
  select(country) |>
  tbl_summary(
    sort = everything() ~ "frequency",
    label = list(country ~ "Country")
  ) |>
  modify_header(label ~ "") |> 
  as_gt(id = "one") |> 
  gt_theme_mg()

```

## **Interventions and Comparators**

#### Dexmedetomidine

<font size = 4> `r table_ref()` Selected characteristics, comparators, and dosing in dexmedetomidine trials. </font>

```{r dex_compare}
#| eval: true
# CODE: dexmedetomidine studies
# dexmedetomidine studies
dex_refid <- drugs_dat |> 
  filter(drug == "Dexmedetomidine") |> 
  pull(refid)

dex_by_arm <- drugs_dat |>
  filter(refid %in% dex_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(refid:arm_proph_meds, matches("^proph_|dexmed"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("dexmed_", "", .x, fixed = TRUE)) |>
  mutate(
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "\U2582")),
    maintain_range = ifelse(!is.na(maintain_low + maintain_up), paste0(maintain, " (", maintain_low, "â€“", maintain_up, ")"), maintain),
    maintain_range = str_replace(maintain_range, "NA ", ""),
    loading = ifelse(loading == "0", "", loading),
    loading = ifelse(loading == "1", "1.0", loading),
    # loading = ifelse(loading == "1000", "1.0", loading),
    loading = str_replace(loading, "-1$", "-1.0")
  ) |>
  arrange(year, refid, desc(drug)) |>
  rename(post = postop, ind = induct, intr = intra) |> 
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  mutate(dex_groups = paste0(surgs_single_f, " - ", design_f_lab))

dex_group_levels <- dex_by_arm |> 
  group_by(refid) |> 
  slice(1) |> 
  ungroup() |> 
  tabyl(dex_groups) |> 
  mutate(design = str_extract(dex_groups, "-.*$")) |> 
  arrange(desc(design), desc(n)) |> 
  pull(dex_groups)

dex_by_arm <- dex_by_arm |> 
  mutate(  
  dex_groups = factor(dex_groups, levels = dex_group_levels)) |> 
  select(refid, study, year, study_l, arm_n, drug_recode_abbr, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, loading, maintain_range, postdose, pre, ind, intr, post ,design_f_lab, dex_groups, surgs_single_f)

rm(dex_group_levels)
```

```{r dex_table}
#| echo = FALSE
# CODE: dexmedetomidine table 2023-02-21 draft; VERIFY NO
dex_by_arm |>
  arrange(dex_groups, year, study) |>
  group_by(study_l) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x)),
    volatile_tab = ifelse(refid == 328 & row_number() %in% c(2, 3), "âœ“", volatile_tab),
    tiva_tab = ifelse(refid == 328 & row_number() == 4, "âœ“", tiva_tab)
  ) |>
  ungroup() |>
  group_by(dex_groups) |>
  gt(id = "one") |> 
  cols_hide(c(year, study, refid, design_f_lab, surgs_single_f)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug_recode_abbr = "Comparator",
    asa_ps_incl = md("Â Â PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    loading = "Loading",
    maintain_range = md("Maintenance/hr"),
    postdose = md("Postop"),
    pre = "Pre",
    ind = "Ind",
    intr = "Intr",
    post = "Post"
    # drug_f = md("Comparator <br/> Detail")
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, ind, intr, post)) |>
  tab_spanner(label = "Dexmedetomidine Dose mcg/kg", columns = c(loading, maintain_range, postdose), level = 1) |>
  # tab_spanner(label = "Maintenance/hr", columns = c(loading, maintain_range, postdose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:sedation_only_tab)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(loading:postdose))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(columns = c(loading, maintain_range, postdose, pre:post))) |>
  tab_style(style = cell_text(align = "left"),   locations = cells_body(columns = c(drug_recode_abbr, study_l, pre:post))) |>
  tab_style(style = cell_text(font = "IBM Plex Mono"), locations = cells_body(columns = c(asa_ps_incl))) |>
  tab_style(style = cell_text(size = px(8)), locations = cells_column_labels(columns = c(volatile_tab:sedation_only_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(pre:post, maintain_range))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug_recode_abbr), rows = str_detect(drug_recode_abbr, "Dex"))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "â€”") |>
  gt_theme_mg() |>
  cols_width(
    pre ~ px(30),
    ind ~ px(30),
    intr ~ px(30),
    post ~ px(32),
    study_l ~ px(165),
    arm_n ~ px(45),
    drug_recode_abbr ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(30),
    tiva_tab ~ px(30),
    regional_tab ~ px(30),
    sedation_only_tab ~ px(30),
    age_table ~ px(80),
    pre_mmse ~ px(80),
    loading ~ px(80),
    maintain_range ~ px(100),
    postdose ~ px(80),
  ) |>
  opt_css(css = "#one .gt_column_spanner {border-bottom-style: hidden;}") |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Oralmax: oral and maxillofacial; Ophtho; ophthalmologic; Dex: Dexmedetomidine; Uli: Ulinastatin; Hal: Haloperidol; Mid: Midazolam; Mid/Prop: Midazolam/propofol; Mid/Seve: Midazolam/sevoflurane; Preg: Pregabalin; Prop: Propofol; Rhyth: Rhythim; Plac; placebo; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Pre: preoperative; Ind: induction; Intr: intraoperative; Post(op): postoperative; â€”: unspecified.") |>
  tab_footnote("Range if reported in parentheses.", locations = cells_column_labels(columns = maintain_range)) |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) |> 
  tab_footnote(md("Given as a single dose."), locations = cells_body(columns = maintain_range, rows = maintain_range %in% c("100", "200", "400")))
               


# gtsave("/Users/mgrant/Desktop/dex_arm_dose_table6.docx")
# |>  tab_info()
```

#### Ketamine

<font size = 4> `r table_ref()` Selected characteristics, comparators, and dosing in ketamine studies. </font>

```{r ket_compare}
#| eval: true
# CODE: ketamine studies
ket_refid <- drugs_dat |> 
  filter(drug == "Ketamine") |> 
  pull(refid)

# by arm
ket_by_arm <- drugs_dat |>
  filter(refid %in% ket_refid) |>
  mutate(year = str_extract(study, "\\d{4}")) |>
  select(study, refid:arm_proph_meds, matches("^proph_|keta"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename_with(~ gsub("ketamine_", "", .x, fixed = TRUE)) |>
  unite("time_admin", c(pre:unspec), sep = "|", na.rm = TRUE, remove = FALSE) |>
  mutate(
    time_admin = str_remove_all(time_admin, "proph_med_"),
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "\U2582")),
    drug = fct(drug, levels = c("Ketamine", "Haloperidol", "Placebo", "Other", "None")),
  ) |>
  relocate(time_admin, .after = arm_n) |>
  # dosing
  arrange(year, refid, desc(drug)) |>
  rename(post = postop, ind = induct, intr = intra) |> 
  mutate(drug_recode = as.character(drug_recode)) |> 
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
  mutate(ket_groups = paste0(surgs_single_f, " - ", design_f_lab))

ket_group_levels <- ket_by_arm |> 
  group_by(refid) |> 
  slice(1) |> 
  ungroup() |> 
  tabyl(ket_groups) |> 
  mutate(design = str_extract(ket_groups, "-.*$")) |> 
  arrange(desc(design), desc(n)) |> 
  pull(ket_groups)

ket_by_arm <- ket_by_arm |> 
  mutate(  
  ket_groups = factor(ket_groups, levels = ket_group_levels)) |> 
  select(study, year, refid, study_l, arm_n, drug, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose, dose_iv, pre, ind, intr, post, ket_groups)

rm(ket_group_levels)

# ket_by_arm |> tabyl(ket_groups)

```

```{r ket_table}
# CODE: ketamine table 2023-02-21  draft; VERIFY NO
ket_by_arm |> 
  arrange(ket_groups, year, study) |>
  group_by(refid) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x))) |> 
  ungroup() |>
  group_by(ket_groups) |>
  gt(id = "one") |>
  cols_hide(c(year, study, refid, ket_groups, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug = "Comparator",
    asa_ps_incl = md("Â Â PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("(mg/kg)"),
    dose_iv = md("Â Â (mg/kg)"),
    pre = "Pre",
    ind = "Ind",
    intr = "Intr",
    post = "Post"
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, ind, intr, post)) |>
  tab_spanner(label = "Maintenance", columns = c(dose_iv), level = 1) |>
  tab_spanner(label = "Dose", columns = c(dose), level = 1) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug))) |>
  tab_style(style = cell_text(align = "center"), locations = cells_column_labels(columns = c(dose, dose_iv))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug, dose, dose_iv, pre:post))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(pre:post))) |>
  tab_style(style = list(cell_text(color = "#A93226")), locations = cells_body(columns = c(arm_n, drug), rows = drug == "Ketamine")) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "â€”") |>
  # tab_row_group(label = "numbered", rows = 1:10) |> 
  gt_theme_mg() |>
  cols_width(
    pre ~ px(30),
    ind ~ px(30),
    intr ~ px(30),
    post ~ px(32),
    study_l ~ px(165),
    arm_n ~ px(45),
    drug ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    # sedation_only_tab ~ px(30),
    age_table ~ px(80),
    pre_mmse ~ px(80),
    dose ~ px(80),
    dose_iv ~ px(100)
  ) |>
  fmt_number(columns = dose, drop_trailing_zeros = TRUE, ) |>
  tab_footnote(footnote = md("S-Ketamine"), locations = cells_body(columns = drug, rows = arm_n %in% c(223, 227))) |>
  tab_footnote(footnote = "Time administered not reported.", locations = cells_body(columns = pre, rows = arm_n == 38 & drug == "Ketamine")) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; Plac; placebo; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Pre: preoperative; Ind: induction; Intr: intraoperative; Post: postoperative; â€”: unspecified.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) 

```

#### Melatonin\/Ramelteon

```{r melatonin_ramelteon_compare}
#| eval: true
# CODE: melatonin ramelteon studies
mel_ram_refid <- drugs_dat |> 
  filter(drug %in% c("Melatonin", "Ramelteon")) |> 
  pull(refid)

# by arm
mel_ram_by_arm <- drugs_dat |>
  filter(refid %in% mel_ram_refid) |> 
  mutate(year = str_extract(study, "\\d{4}")) |> 
  select(refid:arm_proph_meds, matches("^proph_|mela|ramel"), year, interv_desc, control_desc, other_spec) |>
  # timing
  rename_with(~ gsub("proph_med_", "", .x, fixed = TRUE)) |>
  rename(post = postop) |> 
  unite("time_admin", c(pre:unspec), sep = "|", na.rm = TRUE, remove = FALSE) |> 
  mutate(
    time_admin = str_remove_all(time_admin, "proph_med_"),
    time_admin = str_remove_all(time_admin, "proph_med_"),
    across(pre:unspec, ~ gsub("proph_med_", "", .x, fixed = TRUE)),
    across(pre:unspec, ~ notna_to_x(.x, "\U2582")),    
    dose = coalesce(melatonin_dose, ramelteon_dose),
    days = coalesce(as.character(melatonin_days), as.character(ramelteon_numberdoses)),
    dose = ifelse(!is.na(dose), paste0(dose, "mg Ã— ", days), dose),
   # to order drugs
   drug = fct(drug, levels = c("Melatonin", "Ramelteon", "Midazolam", "Placebo", "Other", "None"))
  ) |>
  left_join(table_age_mn_med, by = c("refid", "arm_id")) |> 
  left_join(table_mn_med |> select(refid, arm_id, pre_mmse), by = c("refid", "arm_id")) |>
  left_join(study_arm_dat |> select(refid, arm_id, asa_ps_incl, volatile_tab:sedation_only_tab), by = c("refid", "arm_id")) |>
  left_join(surgs |> select(refid, surgs_single_f, surgs), by = c("refid")) |>
    mutate(mel_ram_groups = paste0(surgs_single_f, " - ", design_f_lab)) |> 
  relocate(time_admin, .after = arm_n)

mel_ram_group_levels <- mel_ram_by_arm |> 
  group_by(refid) |> 
  slice(1) |> 
  ungroup() |> 
  tabyl(mel_ram_groups) |> 
  mutate(design = str_extract(mel_ram_groups, "-.*$")) |> 
  arrange(desc(design), desc(n)) |> 
  pull(mel_ram_groups)

mel_ram_by_arm <- mel_ram_by_arm |>
  mutate(
    mel_ram_groups = factor(mel_ram_groups, levels = mel_ram_group_levels),
  ) |>
  select(study, year, refid, study_l, arm_n, drug, asa_ps_incl, volatile_tab, tiva_tab, regional_tab, sedation_only_tab, age_table, pre_mmse, dose, pre, post, mel_ram_groups)

rm(mel_ram_group_levels)
```

<font size = 4> `r table_ref()` Selected characteristics, comparators, and dosing in Melatonin and ramelteon studies. </font>

```{r melatonin_ramelteon_table}
mel_ram_by_arm |>
  arrange(mel_ram_groups, year, study) |>
  group_by(refid) |>
  mutate(
    study_l = ifelse(row_number() > 1, "", study_l),
    asa_ps_incl = ifelse(row_number() > 1, "", asa_ps_incl),
    across(volatile_tab:sedation_only_tab, ~ ifelse(row_number() > 1, "", .x))) |> 
  ungroup() |>
  group_by(mel_ram_groups) |>
  gt(id = "one") |>
  # row_group_order(groups = c("Melatonin - Randomized Clinical Trial", "Ramelteon - Randomized Clinical Trial", "Ramelteon - Before-After/Time Series")) |>
  cols_hide(c(study, year, refid, sedation_only_tab)) |>
  cols_label(
    study_l = "Study",
    arm_n = "N",
    drug = "Comparator",
    asa_ps_incl = md("Â Â PS"),
    volatile_tab = "Vol",
    tiva_tab = "TIVA",
    regional_tab = "Reg",
    # sedation_only_tab = "Sed",
    age_table = "Age",
    pre_mmse = "MMSE",
    dose = md("Dosing"),
    pre = "Pre",
    post = "Post"
  ) |>
  fmt_markdown(columns = c(study_l, pre_mmse, age_table, pre, post)) |>
  tab_spanner(label = "ASA", columns = c(asa_ps_incl)) |>
  tab_spanner(label = "Anesthetic", columns = c(volatile_tab:regional_tab)) |>
  tab_style(style = cell_text(align = "left"), locations = cells_column_labels(columns = c(drug:post))) |>
  tab_style(style = cell_text(align = "right"), locations = cells_body(columns = c(arm_n))) |>
  tab_style(style = cell_text(align = "left"), locations = cells_body(columns = c(study_l, drug, dose, pre, post))) |>
  tab_style(style = list(cell_text(color = "maroon")), locations = cells_body(columns = c(arm_n:drug), rows = drug %in% c("Melatonin", "Ramelteon"))) |>
  tab_style(style = cell_text(size = px(9)), locations = cells_column_labels(columns = c(volatile_tab:regional_tab))) |>
  tab_style(style = cell_text(size = px(10)), locations = cells_column_labels(columns = c(pre, post))) |>
  sub_missing(columns = everything(), rows = everything(), missing_text = "") |>
  sub_values(values = c("NS"), replacement = "â€”") |>
  gt_theme_mg() |>
  cols_width(
    study_l ~ px(165),
    arm_n ~ px(45),
    drug ~ px(90),
    asa_ps_incl ~ px(45),
    volatile_tab ~ px(32),
    tiva_tab ~ px(32),
    regional_tab ~ px(32),
    sedation_only_tab ~ px(30),
    age_table ~ px(80),
    pre_mmse ~ px(80),
    dose ~ px(90),
    pre ~ px(30),
    post ~ px(32),
  ) |>
  tab_footnote("GI: gastrointestinal; Abd: abdominal (includes hepatic); Ortho: orthopedic; Various: more that one procedure category; PS: physical status; Vol: volatile; TIVA: total intravenous anesthesia; Reg: regional; MMSE: Mini-Mental State Exam; Pre: preoperative; Post: postoperative.") |> 
  tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |> 
  tab_footnote(md("ASA Physical Status of patients included (proportions can be found here[link to table add])."), locations = cells_column_labels(columns = c(asa_ps_incl))) 

```

## **Delirium Incidence**

### Dexmedetomidine

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in trials of dexmedetomidine. </font>

```{r delirium_total_dex_tab}
# CODE: delirium incidence dexmedetomidine
delirium_total_tab <- delirium_total_tab_fun(dex_refid) |> 
  left_join(dex_by_arm |> select(refid, dex_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = dex_groups)
```

```{r delirium_total_dex_gt}
delirium_total_gt_fun("Dex") |>
  tab_footnote("MMSE: Mini-Mental State Examination; Dex: Dexmedetomidine; Mid: Midazolam; Prop: Propofol; MS: Morphine; Preg: Pregabalin; Prop: Propofol; Rhyth: Rhythim; Plac: placebo; CAM: Confusion Assessment Method; DSM: Diagnostic and Statistical Manual of Mental Disorders; ICDSC: Intensive Care Delirium Screening Checklist; Psych: psychiatrist interview; NS; not specified.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates over patient hospital stay.", locations = cells_column_labels(columns = delitotal_time)) |>
  tab_footnote("Tool reported in the `Chinese Expert Consensus on the Prevention and Treatment of Postoperative Delirium in Elderly Patients.'", locations = cells_body(columns = scale_delirium, rows = scale_delirium == "Note"))

```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Summary risk of bias dexmedetomidine randomized clinical trials. </font>

```{r rob2_summary, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_reconciled_dat |> 
  filter(refid %in% dex_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind")
```
:::

### Ketamine

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in ketamine studies. </font>

```{r delirium_total_ket_tab}
# CODE: delirium incidence ketamine
delirium_total_tab <- delirium_total_tab_fun(ket_refid) |> 
  left_join(ket_by_arm |> select(refid, ket_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = ket_groups)
```

```{r delirium_total_ket_gt}
delirium_total_gt_ket <- delirium_total_gt_fun("Ket")
# tab_info(delirium_total_gt_ket)
delirium_total_gt_ket |>
  tab_footnote("MMSE: Mini-Mental State Examination; Ket: ketamine; Plac: placebo; Hal: haloperidol; ICDSC: Intensive Care Delirium Screening Checklist; Psych: psychiatrist interview; NS; not specified.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates over patient hospital stay.", locations = cells_column_labels(columns = delitotal_time))
```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Summary risk of bias ketamine randomized clinical trials. </font>

```{r rob2_summary_ket, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_reconciled_dat |> 
  filter(refid %in% ket_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind")
```
:::

### Melatonin\/Ramelteon

<font size = 4> `r table_ref()` Delirium incidence and days of ascertainment during hospitalization in melatonin and ramelteon studies. </font>

```{r delirium_total_mel_ram_tab}
# CODE: delirium incidence melatonin ramelteon
delirium_total_tab <- delirium_total_tab_fun(mel_ram_refid) |> 
    left_join(mel_ram_by_arm |> select(refid, mel_ram_groups) |> distinct(), by = c("refid")) |> 
  rename(compare_groups = mel_ram_groups)
```

```{r delirium_total_mel_ram_gt}
delirium_total_gt_mel_ram <- delirium_total_gt_fun("Mel|Ram") 
# tab_info(delirium_total_gt_mel_ram_gt)
delirium_total_gt_mel_ram |>
  row_group_order(groups = c("Cardiac - Randomized Clinical Trial", "Ortho - Randomized Clinical Trial", "Various - Randomized Clinical Trial", "GI/Abd - Before-After/Time Series", "Thoracic - Before-After/Time Series")) |> 
  tab_footnote("MMSE: Mini-Mental State Examination; Mel: melatonin; Ram: ramelteon; AMT: Abbreviated Mental Test; DSM: Diagnostic and Statistical Manual of Mental Disorders; CAM: Confusion Assessment Method; ICDSC: Intensive Care Delirium Screening Checklist.") |>
  # tab_footnote(md("Mean <u>Med</u> (SD) [Range] {IQR}."), locations = cells_column_labels(columns = c(age_table, pre_mmse))) |>
  tab_footnote("Days over which incidence proportion assessed. Stay indicates over patient hospital stay.", locations = cells_column_labels(columns = delitotal_time))
```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Summary risk of bias melatonin or ramelteon randomized clinical trials. </font>

```{r rob2_summary_mel_ram, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_reconciled_dat |> 
  filter(refid %in% mel_ram_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind")
```
:::

### *Meta-analyses*

```{r delirium_meta_data}
# CODE: delirium meta data munge
# study arm postop only
postop_only_dat <- study_arm_dat |> 
  select(refid, study, proph_med_pre, proph_med_induct, proph_med_intra, proph_med_postop) |> 
  filter(if_all(c(proph_med_pre, proph_med_induct, proph_med_intra), ~ is.na(.x))) |> 
  filter(!is.na(proph_med_postop)) |> 
  mutate(postop_only = TRUE) |> 
  select(refid, postop_only)

delirium_meta_dat <- dichot_dat |>
  filter(!is.na(delitotal_n)) |>
  left_join(drugs_dat |> select(refid, arm_id, drug_recode_abbr), by = c("refid", "arm_id")) |>
  left_join(study_char_dat |> select(refid, country), by = "refid") |> 
  left_join(surgs |> select(refid, surgs_single_f), by = c("refid")) |>
  left_join(postop_only_dat, by = "refid") |> 
  rename(arm = drug_recode_abbr, surg_f = surgs_single_f) |> 
  select(refid, refid_c, arm_id, study, design_f_lab, country, surg_f, postop_only, arm, delitotal_n, arm_n, delitotal_perc) |>
  arrange(refid_c, arm_id) |>
  # collapse arms
  # group_by(refid) |>  filter(n() > 2) |>  ungroup() |> # verify collapsed arms; verified 2023-03-09
  mutate(
    arm = fct_collapse(arm, "Plac/None" = c("Plac", "None")),
    across(c(arm, design_f_lab, surg_f), ~ fct_drop(.x)),
    delitotal_n = case_when(
      study == "Lee 2018a" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), delitotal_n),
      study == "Avidan 2017" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Avidan 2017", c(2, 3), delitotal_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), delitotal_n),
      .default = delitotal_n
    ),
    arm_n = case_when(
      study == "Lee 2018a" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Lee 2018a", c(2, 3), arm_n),
      study == "Avidan 2017" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Avidan 2017", c(2, 3), arm_n),
      study == "Zhao 2020" & arm_id == 2 ~ collapse_dichot(dichot_dat, "Zhao 2020", c(2, 3, 4), arm_n),
      .default = arm_n
    ),
    year = as.numeric(str_extract(study, "\\d{4}"))
  ) |>
  filter(!(study %in% c("Lee 2018a", "Avidan 2017") & arm_id == 3)) |>
  filter(!(study %in% c("Zhao 2020") & arm_id %in% c(3, 4))) |>
  filter(!(study %in% c("Lee 2018b") & arm_id %in% c(2, 4))) |> # remove pregabalin, pregabaline/dex arms
  filter(!(study %in% c("Hollinger 2021") & arm_id %in% c(2))) |> # remove haldol arm
  filter(!study == "Mahrose 2021") # compares different doses

# temp <- delirium_meta_dat |> 
#   mutate(calc_percent = delitotal_n/arm_n * 100,
#          diff = calc_percent - delitotal_perc) |> 
#   select(refid, study, arm_id, arm, arm_n, calc_percent, delitotal_perc, diff)
# 
# writexl::write_xlsx(temp, "/Users/mgrant/Desktop/temp.xlsx")

```

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Delirium incidence by surgical category across all treatment arms in randomized clinical trials. </font>

```{r delirium_incidence_fig, out.width = "70%", out.height = "40%", fig.align = "left"}
#| warning: false
# CODE: boxplots delirium
par(mar = c(1, 1, 1, 1))
set.seed(1234)
# total to add
all_to_boxplot_dat <- delirium_meta_dat |>
  # filter(arm == "Plac/None") |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  mutate(deli_prop = delitotal_n / arm_n,
         surg_f = "Any") 

delirium_meta_dat |>
  # filter(arm == "Plac/None") |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  mutate(deli_prop = delitotal_n / arm_n,
         surg_f = fct_rev(surg_f)) |>
  bind_rows(all_to_boxplot_dat) |> 
  ggplot(aes(deli_prop, surg_f)) +
  geom_boxplot(width = 0.4, outlier.size = 1.3) +
  # geom_point(aes(color = arm)) +
  geom_jitter(size = 1.3, aes(color = arm)) +
  scale_colour_manual(values = c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#D4AC0D','#a65628','#f781bf','#273746')) +
  labs(y = "", x = "Incidence Proportion") +
  scale_x_continuous(limits = c(0, 1), labels = scales::percent) +
  theme(
    axis.text.x = element_text(size = 11),
    axis.text.y = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title= element_blank()
  )
```

:::

```{r nma_meta_dat}
#| eval: true
# CODE: delirium meta data, pairwise and network (netmeta)
nma_rct_dat <- delirium_meta_dat |> 
  filter(design_f_lab == "Randomized Clinical Trial") |> 
  # filter(surg_f == "Cardiac") |> 
  # filter(postop_only == TRUE) |> 
  # filter(!country == "China")
  filter(str_detect(design_f_lab, "Random")) |> 
  mutate(across(c(arm, design_f_lab), ~ fct_drop(.x)))  

trts <- levels(nma_rct_dat$arm)

pairs_dat <- pairwise(
  treat = arm,
  event = delitotal_n,
  n = arm_n,
  studlab = study,
  data = nma_rct_dat,
  sm = "RR",
  keep.all.comparisons = TRUE
)

nmm_netmeta_nma <- netmeta(
  pairs_dat,
  random = TRUE,
  prediction = TRUE,
  seq = trts,
  sm = "RR",
  reference.group = "Plac/None"
)

# pairwise for metabin
pairwise_dat <- pairs_dat |> 
  select(refid, studlab, treat1, treat2, event1, n1, event2, n2, country, surg_f, year, postop_only1 ) |> 
  rename(postop_only = postop_only1, study = studlab) |> 
  mutate(china_vs_other = ifelse(country == "China", "China", "Other countries")) |> 
  unite(to_select, treat1:treat2, sep = "|", remove = FALSE) |> 
  arrange(year, study)

# function to select subset pairwise data
# filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex"))
```

#### Comparator Network

<font size = 4> `r figure_ref()` Randomized clinical trials and comparators reporting overall incidence of delirium.  </font>

```{r delirium_nma_plot, warning = FALSE, fig.height = 5, fig.align = "left"}
# ```{r delirium_nma_plot, fig.height = 8, fig.align = "left", warning = FALSE}
#| eval: true
#| # CODE: network plot
par(mfrow = c(1, 1), mar = c(1, 1, 1, 1))

netgraph(nmm_netmeta_nma,
  lwd = 4,
  plastic = FALSE,
  thickness = TRUE,
  points = TRUE,
  alpha.transparency = 2,
  col = "azure3",
  col.points = "#F39C12",
  number.of.studies = TRUE,
  # seq = trts,
  rescale.pointsize = TRUE,
  # cex.points = c(1, 2, 3, 4, 5),
  # cex.points = node_size$n/40,
  cex.points = nmm_netmeta_nma$n.trts,
  col.number.of.studies = "black",
  cex.number.of.studies = 1.2,
  col.highlight = "white",
  bg.number.of.studies = c("#FFFFFF"),
  offset = .02
)

```

<br/>

<font size = 2> Dex: Dexmedetomidine; Ket: Ketamine; Mel: Melatonin; Mid: Midazolam; MS: Morphine sulfate; Plac/None: Placebo or no interventoincomparato; Preg: Pregabalin; Prop: Propofol; Ram: Ramelteon; Rhyth: Rhythim. </font>

<!-- Dex: Dexmedetomidine; "Dex/Preg": Dexmedetomidine/Pregabalin; "Dex/Ulin": Dexmedetomidine/Ulinastatin; Ket: Ketamine; Mel: Melatonin; Ram: Ramelteon; Ulin: Ulinastatin; Hal: Haloperidol; Mid: Midazolam; "Mid/Prop": Midazolam/propofol; "Mid/Sevo": Midazolam/sevoflurane; MS: Morphine; Preg: Pregabalin; Prop: Propofol; Rhyth: Rhythim; Sufen: Sufentanil; Plac/None: Placebo or no comparator. -->

#### Dexmedetomidine

<font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention.  </font>

```{r nma_dat, fig.width = 14, fig.height = 7, fig.align = "left"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
# risk of bias
rob_meta_dat <- rob2_reconciled_dat |> 
  select(-Study) |> 
  mutate(across(D1:Overall,
         ~ case_when(
           .x == "Low" ~ "+",
           .x == "Some concerns" ~ "?",
           .x == "High" ~ "â€“"
           # .x == "Low" ~ "<p style='color:green;'>U2295</p>",
           # .x == "Some concerns" ~ "<p style='color:yellow;'>?</p>",
           # .x == "High" ~ "<p style=='color:red;'>U2296</p>"
         ))) 

dex_plac_refid <- pairwise_dat |> 
  filter(str_detect(to_select, "Plac") & str_detect(to_select, "Dex")) |> 
  pull(refid)

dex_meta_dat <- pairwise_dat |> 
  left_join(rob_meta_dat, by = "refid") |> 
  filter(refid %in% dex_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, china_vs_other)

dex_plac_meta <- metabin(event2, n2, event1, n1,
  data = dex_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE,
  # subgroup = china_vs_other
  )

# small study effects; here to have result of Harbord test
temp_meta <- dex_plac_meta
temp_meta <- update(temp_meta, subgroup = NULL, sm = "OR")
temp_metabias <- metabias(temp_meta, method.bias = "Harbord", k.min = 10)

# summary(dex_plac_meta)
forest(dex_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "DexÂ Â Â Â Â ",
  label.c = "Plac/NoneÂ Â ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  # subgroup = TRUE,
  # print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  # text.subgroup.nohet = TRUE,
  # colgap.forest.left = "10mm",
  # colgap.forest.right = "10mm",
  # colgap.left = "2mm",
    xlim = c(0.1, 3),
  # at = c(0.1, 0.5, 1, c, ...),
  xlab = "Favors: DexmedetomidineÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Placebo/None",
  addrows.below.overall = 4,
  text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```
<font size = 2> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias; +: low risk of bias; ?: some concerns; - high risk of bias.</font>

<br/>
<font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention â€” studies conducted in China compared with other countries.  </font>

```{r nma_dat_china, fig.width = 14, fig.height = 9, fig.align = "left"}
dex_plac_meta_china <- metabin(event2, n2, event1, n1,
  data = dex_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = TRUE,
  prediction = TRUE,
  allstudies = TRUE,
  subgroup = china_vs_other
  )

forest(dex_plac_meta_china,
  allstudies = TRUE,
  common = TRUE,
  label.e = "DexÂ Â Â Â Â ",
  label.c = "Plac/NoneÂ Â ",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = TRUE,
  fs.xlab = 11,
  pooled.events = TRUE,
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  text.subgroup.nohet = TRUE,
  # colgap.forest.left = "10mm",
  # colgap.forest.right = "10mm",
  # colgap.left = "2mm",
    xlim = c(0.1, 3),
  # at = c(0.1, 0.5, 1, c, ...),
  xlab = "Favors: DexmedetomidineÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Placebo/None",
  addrows.below.overall = 4,
  text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```
<font size = 2> Dex: dexmedetomidine; Plac: placebo; RR: risk ratio; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias; +: low risk of bias; ?: some concerns; - high risk of bias.</font>

:::{.callout-note collapse=true appearance='minimal' icon=false}
#### <font size = 4> `r figure_ref()` Dexmedetomidine compared with placebo or no intervention small study effects â€” funnel plot and limit meta-analysis.  </font>

```{r dex_plac_meta_funnel_limit, out.width = "75%", fig.align = "left"}
par(mar = c(2, 2, 2, 1))

limit_colors <- c("#AAB7B8", "#D5DBDB", "#F4F6F6")

temp_limit_meta <- limitmeta(temp_meta)

par(bty = "n", xaxt = "s", yaxt = "s")

funnel(temp_limit_meta, ylim = c(0.8, 0.0), xlim = c(0.1, 5), pch = 20, contour = c(0.9, 0.95, 0.99), col.contour = limit_colors)
legend(0.1, 0.1, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("#AAB7B8", "#D5DBDB", "#F4F6F6"), bty = "n")
text(1.2, 0.05, labels = "Adjusted estimate", col = "darkgray", pos = 3, cex = .9)
```
<font size = 2>
Estimates (95% CI) from random effects models â€” unadjusted `r paste0(digit2(exp(temp_limit_meta$TE.random)), " (", digit2(exp(temp_limit_meta$lower.random)), "â€“", digit2(exp(temp_limit_meta$upper.random)), ")") `; 
adjusted for small study effects: `r paste0(digit2(exp(temp_limit_meta$TE.adjust)), " (", digit2(exp(temp_limit_meta$lower.adjust)), "â€“", digit2(exp(temp_limit_meta$upper.adjust)), ")")`.</font>
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
#### <font size = 4> `r figure_ref()` Summary risk of bias from randomized clinical trials of dexmedetomidine compared with placebo or no intervention. </font>

```{r rob2_summary_dex_plac, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_reconciled_dat |> 
  filter(refid %in% dex_plac_refid) |> 
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind")
```
:::

#### Ketamine

<font size = 4> `r figure_ref()` Ketamine compared with placebo.  </font>

```{r nma_ket_dat, fig.width = 14, fig.height = 3, fig.align = "left"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
# risk of bias
ket_plac_refid <- pairwise_dat |> 
  filter(str_detect(to_select, "Plac") & str_detect(to_select, "Ket")) |> 
  pull(refid)

ket_meta_dat <- pairwise_dat |> 
  left_join(rob_meta_dat, by = "refid") |> 
  filter(refid %in% ket_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, china_vs_other)

ket_plac_meta <- metabin(event2, n2, event1, n1,
  data = ket_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  # subgroup = china_vs_other
  )

# summary(ket_plac_meta)
forest(ket_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Ketamine",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  # subgroup = TRUE,
  # print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  # text.subgroup.nohet = TRUE,
  # colgap.forest.left = "10mm",
  # colgap.forest.right = "10mm",
  # colgap.left = "2mm",
  xlim = c(0.1, 3),
  # at = c(0.1, 0.5, 1, c, ...),
  xlab = "Favors: KetamineÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Placebo",
  addrows.below.overall = 4
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```
<font size = 2> D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias; +: low risk of bias; ?: some concerns; - high risk of bias.</font>

<!-- ::: {.callout-note collapse="true" appearance="minimal" icon="false"} -->
<!-- #### <font size = 4> `r figure_ref()` Summary risk of bias from randomized clinical trials of ketamine compared with placebo or no intervention. </font> -->

<!-- ```{r rob2_summary_ket_plac, fig.height = 3, out.width = "60%"} -->
<!-- rob_temp_dat <- rob2_reconciled_dat |>  -->
<!--   filter(refid %in% ket_plac_refid) |>  -->
<!--   select(-refid) -->

<!-- rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind") -->
<!-- ``` -->
<!-- ::: -->

#### Melatonin\/Ramelteon

<font size = 4> `r figure_ref()` Melatonin and ramelteon compared with placebo.  </font>

```{r nma_mel_ram_dat, fig.width = 14, fig.height = 5, fig.align = "left"}
# ```{r nma_dat, out.width = 50%, out.height = 100%}
# risk of bias
mel_ram_plac_refid <- pairwise_dat |> 
  filter(treat2 %in% c("Mel", "Ram")) |> 
  filter(treat1 == "Plac/None") |> 
  pull(refid)

mel_ram_meta_dat <- pairwise_dat |> 
  left_join(rob_meta_dat, by = "refid") |> 
  filter(refid %in% mel_ram_plac_refid) |> 
  select(study, year, event2, n2, event1, n1, D1:Overall, treat2, treat1) |> 
  filter(!treat2 == c("Mid")) |> 
  filter(!treat1 == c("Mid")) |> 
  mutate(mel_ram = ifelse(treat2 == "Mel", "Melatonin", "Ramelteon")) 

mel_ram_plac_meta <- metabin(event2, n2, event1, n1,
  data = mel_ram_meta_dat,
  studlab = study,
  sm = "RR",
  method = "MH",
  method.tau = "PM",
  hakn = FALSE,
  prediction = FALSE,
  allstudies = TRUE,
  subgroup = mel_ram
  )

# summary(mel_ram_plac_meta)
forest(mel_ram_plac_meta,
  allstudies = TRUE,
  common = TRUE,
  label.e = "Mel/Ram",
  label.c = "Placebo",
  rightcols = c("effect", "ci", "D1", "D2", "D3", "D4", "D5", "Overall"),
  rightlabs = c("RR", "(95% CI)", "D1", "D2", "D3", "D4", "D5", "All"),
  just.addcols.right = "right",
  digits = 2,
  digits.tau2 = 1,
  overall.hetstat = TRUE,
  print.I2.ci = TRUE,
  prediction = FALSE,
  fs.xlab = 11,
  pooled.events = TRUE,
  subgroup = TRUE,
  print.subgroup.name = FALSE,
  print.pval.Q = FALSE,
  text.subgroup.nohet = TRUE,
  # colgap.forest.left = "10mm",
  # colgap.forest.right = "10mm",
  # colgap.left = "2mm",
  xlim = c(0.1, 3),
  # at = c(0.1, 0.5, 1, c, ...),
  xlab = "Favors: Ram/MelÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Placebo",
  addrows.below.overall = 4
  # text.addline1 = paste0("Harbord test for small study effects P = ", digit2(temp_metabias$pval))
)
```
<font size = 2> Mel: melatonin; Ram: ramelteon; D1: bias arising from the randomization process; D2: bias due to deviations from intended interventions; D3: bias due to missing outcome data; D4: bias in measurement of the outcome; D5: bias in selection of the reported result: All: overall risk of bias; +: low risk of bias; ?: some concerns; - high risk of bias.</font>

<!-- ::: {.callout-note collapse="true" appearance="minimal" icon="false"} -->
<!-- #### <font size = 4> `r figure_ref()` Summary risk of bias from randomized clinical trials of ketamine compared with placebo or no intervention. </font> -->

<!-- ```{r rob2_summary_mel_ram_plac, fig.height = 3, out.width = "60%"} -->
<!-- rob_temp_dat <- rob2_reconciled_dat |>  -->
<!--   filter(refid %in% mel_ram_plac_refid) |>  -->
<!--   select(-refid) -->

<!-- rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind") -->
<!-- ``` -->
<!-- ::: -->

#### All Comparators

<font size = 4> `r figure_ref()` Network meta-analysis including all comparators.</font>

```{r nmmForest, fig.width = 14, fig.height = 5, fig.align = "left"}
#| eval: true
forest(nmm_netmeta_nma,
       xlab = "Risk Ratio")
       # xlim = c(.001, 2),
       # at = c(0.01, .1, 0.5, 1, 2))
```
<font size = 3>Dex: Dexmedetomidine; Ket: Ketamine; Mel: Melatonin; Ram: Ramelteon; Mid: Midazolam; MS: Morphine; Preg: Pregabalin; Prop: Propofol; Rhyth: Rhythim; Plac/None: Placebo or no comparator.</font>

```{r leagueTable}
nmm_league <- netleague(nmm_netmeta_nma,
  digits = 2,
  common =  FALSE,
  # direct = FALSE,
  seq = trts
)

as_tibble(nmm_league$random) |> 
  mutate(across(V1:V9, ~ str_replace(.x, " \\[", "<br>\\["))) |> 
  gt("one") |> 
  fmt_markdown(columns = c(V1:V9)) |>
  tab_style(style = cell_text(align = "center"), locations = cells_body(V1:V9)) |> 
  gt_theme_mg()
```

```{r, fig.height = 14}
netsplit(nmm_netmeta_nma, order = trts) %>% 
  forest(.,
    xlab = "Risk Ratio",
    leftcols = c("studlab", "k"),
    rightlabs = c("RR", "(95% CI)")
  )
```

```{r}
funnel(nmm_netmeta_nma,
       order = trts)
```



<!-- <font size = 4> `r figure_ref()`  </font> -->



## Study Characteristics

```{r study_characteristics}

```

## Risk of Bias

<font size = 4> `r figure_ref()` Summary risk of bias assessment for all included randomized clinical trials. </font>

```{r rob2_summary_overall, fig.height = 3, out.width = "60%"}
rob_temp_dat <- rob2_reconciled_dat |>
  select(-refid)

rob_summary(rob_temp_dat, tool = "ROB2", colour = "colourblind")
```

<font size = 4> `r figure_ref()` Risk of bias assessment for randomized clinical trials. </font>

```{r rob_overall_study, out.width = "55%", fig.height = 16}
rob_traffic_light(rob2_reconciled_dat |> select(-refid), psize = 4, tool = "ROB2", colour = "colourblind")
```

## References {#references}
